[["index.html", "From sequences to knowledge, improving and learning from sequence alignments. Abstract Résumé Acknowledgments Glossary", " From sequences to knowledge, improving and learning from sequence alignments. Luc Blassel 2022-08-09 Abstract This is the Abstract Résumé Ceci est le résumé Acknowledgments Thanks everybody Glossary What are these terms ? "],["general-introduction.html", "General Introduction Organization of this manuscript Research output", " General Introduction Explain shortly that 2 quite different subjects linked by alignment and sequence data. Organization of this manuscript Organisation of the manuscript Research output Journal publications Blassel, Luc, Paul Medvedev and Rayan Chikhi. 2022. “Mapping-friendly sequence reductions: going beyond homopolymer compression”. iScience DOI goes here (Adapted as Chapter 3) Blassel, Luc1, Anna Zhukova1, Christian J Villabona-Arenas, Katherine E Atkins, Stéphane Hué, and Olivier Gascuel. 2021. “Drug Resistance Mutations in HIV: New Bioinformatics Approaches and Challenges.” Current Opinion in Virology 51 (December): 56–64. 10.1016/j.coviro.2021.09.009 (Used as the basis for Section 5.3.5) Blassel, Luc, Anna Tostevin, Christian Julian Villabona-Arenas, MartinePeeters, Stéphane Hué, and Olivier Gascuel. 2021. “Using Machine Learning and Big Data to Explore the Drug Resistance Landscape in HIV.” PLOS Computational Biology 17 (8): e1008873. 10.1371/journal.pcbi.1008873. (Adapted as Chapter 6) Zhukova, Anna, Luc Blassel, Frédéric Lemoine, Marie Morel, JakubVoznica, and Olivier Gascuel. 2021. “Origin, Evolution and Global Spread of SARS-CoV-2.” Comptes Rendus. Biologies 344 (1): 57–75. 10.5802/crbiol.29. Lemoine, Frédéric, Luc Blassel, Jakub Voznica, and Olivier Gascuel.2020. “COVID-Align: accurate online alignment of hCoV-19 genomes using a profile HMM” Bioinformatics, 37 (12): 1761-1762. 10.1093/bioinformatics/btaa871. Presentations and posters “Mapping-friendly sequence reductions: going beyond homopolymer compression” proceedings talk, RECOMB-SEQ 2022. San Diego, USA (May 21st 2022) “Can we improve analyses be transforming DNA?” Joint RECOMB-SEQ RECOMB-CCB scientific communication session2. San Diego, USA (May 21st 2022). “Machine learning approaches to reveal resistance mutations in HIV” Poster at MCEB 2019. Porquerolles, France (May 29th 2019) Co-first authors: Luc Blassel and Anna Zhukova↩︎ 2nd place prize awarded↩︎ "],["what-is-sequence-data.html", "Chapter 1 What is Sequence data ? 1.1 Biological sequences, a primer 1.2 Obtaining sequence data 1.3 Sequencing errors, how to account for them ? 1.4 The special case of homopolymers 1.5 Conclusion", " Chapter 1 What is Sequence data ? 1.1 Biological sequences, a primer To fully understand the work that was done during this thesis, as well as the choices that were made, some basic knowledge of molecular biology and genetics is needed. If you are already familiar with biological sequences, feel free to skip ahead to section 1.2. 1.1.1 What is DNA ? DesoxyriboNucleic Acid (DNA) is one of the most important molecules there is, without it complex life as we know it is impossible. It contains all the genetic information of a given organism, that is to say all the information necessary for the organism to: 1) function as a living being and 2) make a perfect copy of itself. This is the case for the overwhelming majority of living organisms on planet earth, from elephants to potatoes, to micro-organisms like bacteria. DNA is a polymer, composed of monomeric units called nucleotides. Each nucleotide is composed of ribose (a five carbon sugar) on which are attached a phosphate group as well as one of four nucleobases: Adenine (A), Cytosine (C), Guanine (G) of Thymine (T). These four types of nucleotide monomers link up with one-another, through phosphate-sugar bonds, creating a single strand of DNA. The ordered sequence of these four types of nucleotides in strand encodes all the genetic information necessary for the organism to function. Nucleotides in a strand form strong complementary bonds with nucleotides from another strand, A with T and C with G. These bonds allows two strands of DNA to form the double-helix structure of DNA1 shown in Figure 1.1. The specificity of nucleotide bonds ensure that the two strands of the double helix are complementary and that the information contained in one strand can be recovered from the other. This ensures a certain structural stability to the DNA molecule and a way to recover the important information that could be lost due to a damaged strand. Figure 1.1: Double-helix structure of DNA. Each strand of DNA has a phosphate-sugar backbone on which are attached nucleobases. The two strands are linked by complementary bonds between the nucleobases of different strands (A bonding with T and C bonding with G). The amount of DNA necessary to encode the information varies greatly from organism to organism: 5400 base pairs (5.4kBp) for the \\(\\varphi X174\\) phage2, 4.9MBp for Escherichia coli3, 3.1GBp for Homo sapiens4 all the way up to almost 150GBp for Paris japonica, a Japanese mountain flowering plant5. While very small genome size tend to occur in smaller, simpler organisms, genome size does not correlate with organism complexity6. 1.1.2 From Information to action 1.1.2.1 Proteins, their structure and their role The double stranded DNA molecules present in the cells of a living organism contain information only; in order for the organism to live this information must be read and translated into actions. Most of the actions necessary for “life” are taken by large molecules called proteins, they have a very wide range of functions from catalyzing reactions in the cell to giving it its structure7. Proteins are macromolecules, that are made up of one or several chains of amino acids. These chains then link together and fold up in a specific three dimensional structure, giving the protein the shape it needs to fulfill its goal. This structure is determined by the sequence of amino acids, and a given protein can be identified by this amino acid sequence7. This sequence is directly dependent on the information contained in the DNA. First the DNA is transcripted in a similar, but single stranded, molecule called RNA (Ribonucleic Acid) which encodes the same sequence. This RNA molecule is then translated into a protein by the following process8: Nucleotides in the RNA sequence are read in groups of three called codons. These codons are read sequentially along the RNA molecule. Each codon corresponds to an amino acid, according to the genetic code. The sequence of codons in RNA (and by extension DNA) determines the sequence of amino acids. The translation process is stopped when a specific type of codon (a “Stop” codon) is read. With four types of nucleotides and codons grouping three nucleotides there are \\(4^3=64\\) possible codons. However, as stated above, proteins are only made up of 20 different amino acids, meaning that several different codons correspond to the same amino acid. This gives the translation process a certain robustness to errors that can occur when the DNA is copied to create a new cell, or when it is transformed into RNA prior to protein translation. The portion of DNA that is read to create the protein is said to be “coding”, and is called a gene. There are several thousands of genes in the human genome9 resulting in proteins executing thousands of different functions in a cell. In human beings, coding DNA represents only 1% to 2% of the total genome10,11. The large majority of the DNA in a human being is not translated into proteins, a portion of it has a regulatory role, controlling transcription and translation, but the role remains unknown for the rest of the human genome12,13. 1.1.2.2 Making mistakes Going from DNA sequence to protein is quite a complicated process involving several steps, it is therefore possible for a mistake to happen. There are several mechanisms to avoid mistakes and alteration of the genetic information: the complementary nature of the two strands of DNA, the redundant nature of the genetic code as well as error correction mechanisms in the molecules (called “polymerases”) that read and write DNA and RNA. However, despite all that, some errors in the nucleic acid (DNA and RNA) or protein sequences still make it through, these are called mutations. 1.1.2.2.1 Where can mistakes happen ? There are several sources of error that can alter the genetic information14: DNA replication: When a cell divides, or when an organism reproduces, the DNA molecule must be copied in order to preserve and transmit genetic information. This process has a very low rate of errors, with as low as one error for every billion to every hundred billion of replicated base pairs15. This is due to the fact that the DNA polymerase (the protein responsible for copying DNA molecules), has a relatively low error rate to start with, but mostly to the error correcting mechanisms that are present in certain cells and bacteria16. RNA transcription: Since errors in RNA transcripts are less important than in replicated DNA, RNA polymerases have a much higher error rate than their DNA counterparts. This error rate has been estimated to be between four errors for each million17 to two errors for each hundred thousand18 transcribed bases. Protein translation: The process of translating RNA to a protein is done by proteins called ribosomes. This is a very error prone process with a mistranslation rate estimated to be of the order of one error for every 10,000 codons translated19 Other mutagenic events: Many external events and factors have been shown to provoke mutations in exposed DNA such as Ionizing radiation20, UV rays21, Toxins22, heat Stress23, cold stress24 or oxidative stress25. 1.1.2.2.2 What kind of errors are possible? In biological sequences (nucleic acids and proteins), mutations can result from one of three error modes: Substitutions, where the original base units (nucleotide or amino acid) is mistakenly replaced by another one, for instance inserting an A instead of a G during RNA transcription. Insertions,where a new base unit not present in the original sequence is added to the newly synthesized biological sequence. deletions, where a base unit from the original sequence is skipped and not taken into account when synthesizing the new sequence. While these three types of errors occur both in nucleic acids and proteins there are some things to consider about the consequences of nucleic acid mutations on protein synthesis. Due to the redundant nature of the genetic code mentioned in Section 1.1.2.1, some mutations in the nucleic acid sequence will result in the same protein sequence and therefore not have altered protein activity. Some mutations however will result in a substitution at the amino acid level which could potentially lead to a physicochemically altered or even non-functional protein. Finally, insertion and deletion errors (collectively called indels) can have big consequences on resulting proteins. Inserting or deleting nucleotides in multiples of three will result in the insertion/deletion of amino acids in the resulting protein, any other length of indel will result in what is called a frameshift mutation26. These mutations causes changes in the codons, potentially resulting in a completely different amino-acid sequence, including premature stop codon apparition as shown in Figure 1.2. Figure 1.2: Effect of frameshift mutations The deletion of a single C (highlighted in red) in the original DNA sequence leads to a change in the codons read during translation. The original codons (shown in grey, with corresponding amino acids, above the sequence) translate to the functional protein. The new codons caused by the deletion (shown in blue, with corresponding amino acids, below the sequence), induce a premature STOP codon leading to a non-functional protein. 1.1.2.2.3 What effect can mutations have ? As we stated above, some mutations in DNA may have no repercussions, some others can lead to non-functional proteins. In some cases mutations can be associated with a trait in the mutated individual. For example a single mutation in a gene linked with coagulation can lead to pathological Leiden thrombophilia27, a single amino acid deletion in the CFTR protein leads to (the very deadly) cystic fibrosis28, and many mutations have been linked to complex diseases like type 2 diabetes29,30. All mutational effects are not necessarily bad for the organism though, and mutations are essential for bacteria31 or viruses like HIV32 to develop resistance to treatment (more on that in Chapters 5 and 6). While some mutations, their mechanisms and consequences have been thoroughly studied, in many cases mutations are simply linked to a trait. Since it is easier to show correlation than causation, and that the former does not necessarily imply the latter, it is important to further study mutations of notice to understand their potential consequences. 1.2 Obtaining sequence data In many fields, especially in computational biology, we need to know what genetic information the studied organism has, that is to say, what is the exact sequence of nucleotides that make up its DNA. The process of figuring out this sequence is, perhaps unsurprisingly, called sequencing. And a sequence that is inferred from this process is called a sequencing read or, more commonly, just a read. 1.2.1 Sanger sequencing, a breakthrough The first sequencing method was developed in 197733. Sanger et al. devised a simple method to read the sequence of nucleotides that make up a DNA sequence known as “chain termination sequencing” or more commonly “Sanger sequencing” (represented in Figure 1.3). To understand Sanger sequencing, one must first understand how to synthesize DNA. As we stated in Section 1.1.1, DNA is built up from building blocks that we called nucleotides, more specifically deoxynucleotidetriphosphates or dNTPs. these dNTPs are made up of a sugar (deoxyribose) a nucleobase (A, T, G or C) and 3 phosphate groups. By succesively adding these dNTPs at the end of an existing DNA molecule, we extend it, linking one of the phospates of the dNTP to an oxygen atom on the last nucleotide of the DNA molecule. Let us now consider a dideoxynucleotidestriphosphate (ddNTP), which is identical to a dNTP except we remove a specific oxygen atom. This ddNTP can be added to the growing molecule of DNA like regular dNTPS, but since it is missing that one oxygen atom no more dNTPs or ddNTPs can be added to the DNA molecule after this one. The elongation is terminated and we call these ddNTPs chain-terminators. This combination of DNA synthesis followed by termination are at the heart of Sanger sequencing. It is important to note that while dNTPs and ddNTPs refer to nucleotides with any nucleobase, we can refer to specific dNTPs by replacing the “N” with the base of choice. For example, dATP refers to the dNTP that has adenine as a base. Similarly we have dCTP, dGTP and dTTP (as well as ddATP, ddCTP, ddGTP and ddTTP). The first step of Sanger sequencing (and most sequencing methods) is to amplify the DNA molecule we wish to sequence, i.e. make plenty of copies of it (usually through a process called PCR). These clones of the sequence are then separated into their two complementary brands one of which will be used as a template for the sequencing steps. The second step is to prepare 4 different sequencing environments (think of it as 4 test tubes). In each environment we introduce an equal mix of the 4 dNTPs, that will be used to elongate new DNA molecules from the amplified templates, and a single type of ddNTP. So in the first test tube we will have only ddATP, ddCTP in the second, et caetera. In addition, these ddNTP are marked, at first with radioactive isotopes, and later on with dyes. This marking means that we can observe the location of these ddNTP later on. Then an equal portion of the template is introduced in each environment with DNA polymerases (that will add the nucleotides to elongate a sequence that is complementary to the template), and short specific DNA molecules called primers that are necessary for the polymerases to start synthesizing new DNA. During synthesis the chain will be elongated with dNTPs by the polymerase and the reaction will be stopped once a ddNTP is incorporated. At the end of this process we have plenty of fragments of DNA in each test tube, and we know that these fragments end with a specific base in a given environment. For example, in the test tube where we added ddATP, we know that all the fragments end with an A, and that we have all the possible fragments that start at the beginning of the template and end with an A. If the template is AACTA, then the fragments we would get in the ddATP test tube would be A, AA, and AACTA. Then, a sample from each environment is taken and deposited in a gel, each in its own lane. A process called electrophoresis is then used to separate the fragments according to their weight. By applying an electrical current to the gel, the fragments of DNA will migrate away from where they were deposited along their lane in the gel. Lighter, shorted DNA fragments will travel further than heavier ones. We then get clusters of fragments ordered by weight (and therefore by length) called bands. With the marked ddNTP we can reveal these bands in the gel. We know that: 1) bands are ordered by weight; 2) consecutive bands correspond to the addition of a single nucleotide; 3) in a specific lane fragments corresponding to a band end with a specific base. This knowledge is enough to deduce the sequence of the template we sequenced. An example gel is shown in Figure 1.3. This process allowed Sanger et al. to sequence the first genome, of a \\(\\varphi X174\\) bacteriophage, in 19772. Although revolutionnary, this method was costly, time consuming and labor intensive. Adjustments to this method were made in order to make it faster and less expensive. An important step was to change the way ddNTPs were marked. By using fluorescent markers, each base having a distinct “color”, we can eliminate the need to have 4 different environments and lanes in the gel34,35. This also paved the way for automating sequencing, each fluorescently marked band can be excited with a laser, and the resulting specific wavelength can be recorded by optical systems and the corresponding base automatically deduced36 (Also see Figure 1.3). Other improvements were made such as using capillary electrophoresis instead of gel electrophoresis. Figure 1.3: Overview of the sanger sequencing protocol. These gradual improvements to the Sanger sequencing protocol, allowed to sequence longer and more accurate reads, with the latest technologies resulting in reads reaching 1 ,000 base pairs with an accuracy of 99.999%37. These improvements also resulted in a lower cost for sequencing, which was greatly decreased from around $1000 per base-pair38 to only $0.5 per kilobase37. FInally these technological improvements also increased the throughput of sequencing machines from around 1 kilobase per day38 to 120 kilobases per hour39. Despite these improvements, for ambitious endeavours such as the human genome project, sequencing was a massive undertaking: the first human genome is estimated to have cost between 500 million and 1 billion US dollars to sequence40. 1.2.2 Next-generation sequencing Through these large sequencing projects and the genomics field in general, the richness and usefulness of sequence data was made ever more apparent. This growing need of sequence data ushered in a new era of sequencing with the development of many new sequencing methods designed to have a higher throughput and a lower cost than Sanger sequencing. This second generation of sequencing technologies, also referred to as Next-Generation Sequencing (NGS) or Massively parallel sequencing. While there were different technologies, there are a few common key points41: As with Sanger sequencing the we need to amplify and clone the DNA template, however since these technologies result in shorted reads than Sanger sequencing, the DNA we want to sequence must first be randomly broken up into small template fragments before being amplified. The amplified template fragments are attached to some sort of solid support, resulting in a physical support with billions of template fragments attached to it. As in Sanger sequencing, DNA molecules, complementary to the template fragments, are elongated. This happens for billions of fragments at the same time (hence the “massively parallel” epithet). The addition of specific nucleotides to a chain are detected in real time, and there is no chain termination. There is no need for the long step of electrophoresis. These detections are simultaneous for all the molecules being elongated at once. The result of these steps is a very large number of short reads. With data analysis these short reads can be used to deduce longer sequences and eventually the orginal whole genome sequence through a process called assembly. The main NGS method is called “sequencing by synthesis”, developed by a company: Illumina. It is commonly referred to as llumina sequencing. This method is based on reversible chain terminators, developed at the Institut Pasteur in the 90’s42. These are marked dNTPs that can be used to elongate DNA molecules, but that have an additional molecular group that makes them terminators by default. However this terminating group can be removed once the NTP is included in a DNA molecule allowing the elongation process to continue. These dNTPs are fluorescently marked and when excited with a laser they emit light with a distinctive color. During Illumina sequencing, these reversible chain terminators are included to millions of fragments at the same time, stopping elongation. At this point all the fragments are excited with a laser and an optical system takes a picture of the emitted colors for all the fragments as once. In this image, a pixel loosely corresponds to a sequenced fragment, and its color to the most recently added dNTP. The terminating groups are then cleaved and the process can start over by incorporating a new batch of reversible terminators. By observing the successive images we can deduce the sequence of added nucleotides for each sequenced fragment and obtain all of our reads. Another NGS method is called pyrosequencing, commercialized by 454 Life Sciences. Contrary to Illumina sequencing, this method does not use reversible chain terminators. Instead it uses a special enzyme called luciferase that emits light as specific dNTPs are added. This process is repeated for the 4 dNTPs (similarly to Sanger sequencing) and from the light emissions we can deduce the sequence of nucleotides43. These technologies yield reads around 150 nucleotides for Illumina and 400nt for pyrosequencing44, this is much shorter than the 1kB reads obtainable from the latest Sanger sequencing technologies. However the throughputs are much higher39: 2.5 to 12.5 Gigabases per hour for Illumina and 30 Megabases per hour for pyrosequencing. Costs are also quite low: $0.07 and $10 per Megabase for Illumina and pyrosequencing respectively. The per-base sequencing accuracies are also quite high, up to 99.9% for both Illumina45 and pyrosequencing39. A summary of the key characteristics for various sequencing technologies can be found in Table 1.1. The lower cost and higher throughput has made the Illumina sequencing technology the dominant one, the company estimating that 90% of the world’s sequencing data was generated with Illumina machines in 201546. 1.2.3 Long read sequencing Although NGS technologies revolutionized the sequencing world, recent efforts have been made to get longer reads. These third-generation methods generate reads of tens of kilobases and are commonly called long-read sequencing method. Long reads have a host of applications47 for which short NGS reads might not be well suited: De novo assembly of large complex genomes, studying complex repetitive regions such as centromeres or telomeres or detection of structural variants. They have recently been use to assemble the first truly complete human genome, including telomeric and centromeric regions4. The two available long read technologies are: Single Molecule Real Time sequencing (SMRT), commercialized by Pacific Biosciences (PacBio) and Nanopore sequencing, commercialized by Oxford Nanopore Technologies (ONT). While both technologies are quite different they result in much longer reads than even Sanger sequencing in real time, without the need for chain terminators or separate sequencing reactions, with a high throughput and at a reasonably low cost. SMRT sequencing was first developed in 200948, before being commercialized and furthered by PacBio. The basic principle is as follows: Fragment and amplify DNA to obtain a very large number of DNA templates. Link both strands of each DNA template together with known sequences called bell adapters. Denature the DNA to create a single stranded, circular DNA molecule. Primers and polymerases are attached to the circular molecule specifically on one of the bell adapters. Add the circular DNA template, primer, polymerases complexes to a SMRT chip. This chip is essentially a large aluminium surface with hundreds of thousands of microscopic wells called Zero-Mode Waveguides (ZMWs) only 100nm in diameter49. The polymerases are chemically bonded to the bottom of each of these ZMWs so we effectively get a single DNA template and polymerase per well. Fluorescently marked dNTPs are incorporated progressively in each of the wells. When a marked dNTP is incorporated in the newly synthesized DNA brand, light of a specific wavelength is emitted. The size of these ZMWs make the detection of the fluoresence possible with an optical system. Incorporation of dNTPs in each ZMW can be detected simultaneously in a parallel fashion and the resulting sequences deduced. Nanopore sequencing, though of in the eighties, further developed along the years50 and first commercialized by ONT in 201451, is completely different from all the sequencing technologies previously mentioned. Where all the other ones are based on synthesizing a complementary DNA strand and detecting specific dNTP incorporation in some way or another, there is no synthesis in nanopore sequencing. The principle relies on feeding a single strand of a DNA template through a small hole in a membrane, a nanopore, at a controlled speed. As the nucleotides go through the nanopore, the electric current is formed between both sides of the membrane. This current can be measured and is specific to the succession of 5 to 6 nucleotides inside the nanopore channel at any given time. By looking at the evolution of the electric current as the DNA strand goes through the nanopore, we can deduce the sequence of nucleotides through a process called base calling. Base calling is usually done with machine learning methods, mainly artificial neural networks52. In the flow cells used in ONT sequencers, there are hundreds of thousands of nanopores, spread out over a synthetic membrane, allowing for massively parallel sequencing as well. Theoretically, since this method is not based on synthesis, the upper limit for read length is only limited by the length of the template, and in practice ONT sequencing produces the longest reads. Both technologies yield long reads, the median and highest read lengths being 10 kilobases and 60 kilobases respectively for PacBio sequencing53. For nanopore the median read lengths of 10 to 12 kilobases54,55 are similar to PacBio, but in it can also yield ultra-long reads of 1 up to 2.3 megabases long56–58. The length of the reads and parallel nature of these two technologies allow these sequencers to have truly massive throughputs. PacBio sequencers can sequence between 2 and 11 gigabases per hour and ONT from 12.5 gigabases per hour, up to a staggering 260 gigabases per hour for the latest ONT PromethION machines55. The cost of sequencing with these machines, while higher than for Illumina sequencers, remains reasonably affordable at $0.32 and $0.13 per megabase for PacBio and ONT respectively59. These characteristics are summarized in Table 1.1 along with other sequencing technologies. The length, throughput and sequencing cost of both these technologies paint a pretty picture, and indeed they have proved useful in many settings, sequencing accuracy however is the main problem with these technologies. The per-base sequencing accuracy has been estimated to be between 85% and 92% for PacBio sequencers and 87% to 98% for ONT machines55,60,61. This accuracy is much lower than either Sanger sequencing or Illumina reads. Characterizing, correcting and accounting for these errors is widely studied and it will be discussed in more detail in Sections 1.3 and 1.4. .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-b5ccad12{table-layout:auto;width:100%;}.cl-b5bfad42{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b5bfad88{font-family:'Helvetica';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;bottom:3.3pt;}.cl-b5bfe50a{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b5c08a78{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b5c08a8c{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b5c08a8d{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}technologyread length (nt)throughput (nt/hour)cost ($/Mb)accuracySanger1000120 103$50099.999%Illumina1502.5-12.5 109$0.0799.9%Pyrosequencing40030 106$1099.9%PacBio SMRT10000 (up to 60000)2-11 109$0.3285-92%Nanopore12000 (up to 2.5 106)12.5-260 109$0.1387-98% Table 1.1: Comparison of sequencing technology characteristics. Characteristics for the latest sequencers were used for the Sanger sequencing entry. The length is given in nucleotides, throughputs in sequences nuctleotides per hour and cost in US dollars per megabase. While most of the mentioned technologies can also be adapted and used to sequence RNA instead of DNA62,63, directly sequencing proteins remains a challenge. The sequence of amino acids making up a protein is usually deduced from the codons in sequenced DNA or RNA after detection of potentially coding regions called open reading frames (ORFs). Development of methods to directly sequence protein molecules using mass spectrometry was started not very long after Sanger sequencing64 and improved65. New methods are still being developed66 but protein sequencing is still a challenge. 1.3 Sequencing errors, how to account for them ? Sequencing technologies are not perfect, they make errors as we can see from the various accuracy rates reported in Section 1.2. For technologies based on nucleic acid synthesis (i.e. everything except ONT), since they use polymerases it stands to reason that the same three types of errors, described in Section 1.1.2.2, occur: substitutions, insertions and deletions. For long read technologies though, most of the errors do not come from the polymerase, but from signal processing used to deduce the sequence. Since both technologies execute single molecule sequencing, the signal to noise ratio is low67,68 making base calling more complicated. This explains the discrepancy in error rates between short and long read sequencing technologies: the former getting as low as 10-4 or 10-5 after computational processing69 where the latter are between 10% and 15%. This high error rate long reads is bothersome and many efforts have been made lower this error rate, computationally or technologically. 1.3.1 Error correction methods The long read error-correction literature and toolset is rich and active70–72. There are two main ways to correct errors: 1) hybrid methods where higher-accuracy shorter reads are used to correct errors and 2) non-hybrid methods where only the long-reads are used. In Non-hybrid methods70,73, by finding regions that overlap fairly well between reads and taking the consensus (i.e. the majority nucleotide at each position) of the overlapped regions some errors can be eliminated. In many analyses and sequencing data processing pipelines, the first step is to break up the reads into all possible overlapping subsequences of length \\(k\\) called k-mers (e.g the 3-mers of the ATTGC are ATT, TTG and TGC). Rare k-mers in the read dataset, i.e. k-mers that appear only a handful of times in all the reads, are likely the result of an error and filtering them out can improve analysis. One or both of these procedures are implemented in several pieces of commonly used software like the wtdbg74, and canu75 assemblers or the standalone daccord long-read correcter76. In some cases, errors are corrected not on the raw reads but after having assembled the long reads into long continuous sequences (contigs), this process is called polishing. The ntEdit polisher77 also filters out rare kmers to correct errors. The Arrow78 and Nanopolish79 polishers correct the assembly using the raw PacBio and ONT long reads respectively. Hybrid methods, as their name suggest, makes use of short reads to correct errors in long reads. By finding similar regions between the short and long reads we can use the higher accuracy of short reads to correct the long ones. This is implemented in many pieces of software proovread80, Jabba81, PBcR82 or LoRDEC83. Short reads can also be used to polish long read assemblies with tools like Pilon84 or Racon85. The first complete human genome was assembled and polished using many different sequencing technologies including PacBIo, ONT and Illumina technologies4. 1.3.2 More accurate sequencing methods While a lot of effort is being put into error correction, another angle of attack to lower the error rate of long reads is to improve the sequencing technology. In 2019, PacBio introduced HiFi reads, based on a circular consensus (CCS) technique86. During SRMT sequencing the 2 brands are linked together by ball adapters to form a circular DNA template (c.f. Section 1.2.3), the central idea of CCS is to sequence this molecule multiple time by going over the circle multiple times. In the resulting long sequence the, known bell adapter sequences can be removed, and a consensus sequence can be built from the multiple passes over the same DNA template. This results in long-read accuracies of 99.8% to 99.9%55,86. This works because PacBio sequencing errors are mostly randomly distributed along the sequenced template (more on that in Section 1.4.2), therefore it is unlikely that the same error will appear in multiple passes over the same template portion. For ONT sequencing, most improvement efforts have been focused on base-callers. These tools were originally based on Hidden Markov Models87 (HMMs), but gradually they have been shifting over to neural network based deep learning methods52,73,88,89 with faster inference times and better performance. A technologically agnostic method using unique molecular identifiers added during the template preparation phase, and consensus sequencing has been shown, in specific contexts, to improve the accuracies of both ONT and PacBio CCS long reads to 99.59% and 99.93% respectively90. Finally, new sequencing technologies are being developed, like built in error-correction short-read technologies yielding error-free reads of up to 200 nucleotides91. Illumina also recently announced its own high-throughput, high-accuracy long-read sequencing technology in 202292, although details about the performance and technology are scarce. 1.4 The special case of homopolymers Despite improvement in error correction methods and sequencing technologies, certain genetic patterns are particularly difficult to process, homopolymers are one such pattern. 1.4.1 Homopolymers and the human genome Homopolymers consist of a stretch of repeated nucleotides (i.e. \\(\\geq 2\\)) occurring at some point in the genome. For example the sequence AAAA is a length 4 adenine homopolymer. In the complete human genome assembly (CHM13 v1.1 from the T2T consortium4), 50% of its three gigabases are in homopolymers of size 2 or more, and 10% are in homopolymers of size 4 or more. As can be seen in Figure 1.4, short and medium length homopolymers make up a significant part of the genome. In a previous GRCh38 human genome assembly, more than 1.9 megabases are in homopolymers of length 8 or higher93, representing about 1‰ of that assembly. The longest homopolymer run in the CHM13 v1.1 assembly is 86 (90 in GRCh3893). Figure 1.4: Homopolymer fraction of the whole human genome by homopolymer length. In the human genome, homopolymers tend to occur more often in adenine and thymine runs than guanine and cytosine. There are are approximately twice as more nucleotides within A or T homopolymers (481 Mb and 484 Mb) than G or C (278 Mb and 279 Mb). This discrepancy is even more pronounced when looking homopolymers longer than four nucleotides (Figure 1.5). Figure 1.5: Distribution of homopolymer lengths per base in the human genome (for homopolymers of length \\(\\geq\\) 4.) 1.4.2 Homopolymers and long reads Unfortunately homopolymers are a source of errors in sequencing, particularly for long-read technologies: while substitutions seem to be randomly distributed along the reads for PacBio and ONT, the main error mode seems to be indels in homopolymeric sections, i.e. reading the same nucleotide several times or skipping over one of the repeated nucleotides. Many study show that homopolymeric indels is the main type of error for PacBIO SMRT and ONT long-read sequencing67,94–96. This is even the case for PacBio HiFi reads, while the ciruclar concensus approach eliminates the randomly distributed substitutions homopolymer indels remain86. It seems that ONT reads are more prone to this type of error than PacBIo55. The rate of these errors is independent of the length of the homopolymer for ONT, but it rises with homopolymer length for short-read and PacBio technologies97. 1.4.3 Accounting for homopolymers The fact that they make up a significant part of the human genome, and that they are a source of errors for long read technologies means that they warrant special attention and care. Methods have been devised and implemented, specifically to counter homopolymer-linked errors. 1.4.3.1 Specific error correction Homopolymer errors are taken under special consideration during assembly polishing when using certain tools like HomoPolish98 or NanoPolish79. Methods to improve base calling of homopolymer stretches have been developed for nanopore sequencing99,100, and implemented in state of the art base-callers such as guppy or scrappie52. Steps before sequencing can also be taken in order to reduce the effect of these errors, like avoiding homopolymers in barcode sequences101,102. or during the development of DNA based storage systems103. Improving the sequencing technologies can also be a solution by reducing the number of homopolymer errors straight from the source. The latest ONT chemistry R.10 reportedly improves accuracy in homopolymer rich regions73,104, non-biological solid-state nanopores also reduces errors in homopolymers105,106. 1.4.3.2 Homopolymer compression, a nifty trick In many cases, reads cannot be re-sequenced with newer technologies, or base-called with better base callers. Only the read sequences, potentially containing homopolymer errors, are available for usage. In order to account for this sort of error, a simple pre-processing trick was developed: homopolymer compression (HPC). The idea is very simple, for any sequence replace a repeated run of any nucleotide (i.e. homopolymers) by a single occurrence of that nucleotide. This means that after going through HPC the sequence AAACTGGG will yield the sequence ACTG. This simple pre-processing step, applied to all the reads and sequences to analyze removes all indels in homopolymers, and can resolve some ambiguities (c.f. Figure 1.6). It can also remove legitimate information contained in homopolymers, however the trade-off with the reduced error rate has been deemed advantageous. HPC has been implemented in many sequence bioinformatics sowftware tools. The HiCanu107, MDBG108, wtdbg274, shasta109 assemblers all use HPC under the hood to provide better assemblies, and it was used to assemble the complete human genome sequence4. The first published usage of HPC, was actually in the CABOG assembler110 developed for pyrosequencing reads. HPC has also been implemented for other tasks, like clustering111, long read error correction with LSC112 and LSCPlus113, alignment with minimap2114 and winnowmap2115, or specific analysis pipelines for satellite tandem repeats116. Figure 1.6: Homopolymer compression can help resolve ambiguities due to sequencing errors. A read with homopolymer related sequencing errors can be homologous to two different regions of the reference genome, with one discrepancy for each region. After applying HPC, this ambiguity is resolved and the read is homologous to only one region. 1.5 Conclusion I hope, after reading this chapter, you will agree with me that sequencing is fundamental for furthering our knowledge of biological processes, organisms and Life in general. And as such, the sequencing field is still very active with new technologies being developed, to improve the current technologies in various aspects: Illumina promising high accuracy long reads with Infinity92, PacBio developing its own short read sequencing technology, moving away from sequencing by synthesis117,118. Finally efforts are also being made to make sequencing more affordable and available in a greater number settings with Ultima genomics promising accurate short reads for as low as $1 per gigabase119. With all these technological improvements we are approaching an era where sequencing is easy and quick, opening the door for massive projects like Tara Oceans120 or the BioGenome project121 to better understand biodiversity. Routine whole-genome sequencing could usher in an era personalized medicine122. Despite all these advancements, sequencing errors remain an obstacle to certain analyses. This is particularly true for the ever more used and useful long reads, and the important fraction of genomes made up of homopolymers. Detecting, removing or accounting for these errors in some way is a crucial step to improve any analysis based on sequencing data, and to make sure that no theory or conclusion are built upon erroneous sequence data. Finally, it is important to note (at least for the remainder of this thesis) that, from a computational standpoint, a biological sequence is simply a succession of letters and a set of reads is simply a text file. Therefore many analysis and data processing methods are inspired or directly transposed from the field of text algorithmics. References 1. Watson, J. D. &amp; Crick, F. H. C. The Structure of Dna. Cold Spring Harbor Symposia on Quantitative Biology 18, 123–131 (1953). 2. Sanger, F. et al. Nucleotide sequence of bacteriophage φX174 DNA. Nature 265, 687–695 (1977). 3. Archer, C. T. et al. The genome sequence of e. Coli w (ATCC 9637): Comparative genome analysis and an improved genome-scale reconstruction of e. coli. BMC Genomics 12, 9 (2011). 4. Nurk, S. et al. The complete sequence of a human genome. Science 376, 44–53 (2022). 5. Pellicer, J., Fay, M. F. &amp; Leitch, I. J. The largest eukaryotic genome of them all? Botanical Journal of the Linnean Society 164, 10–15 (2010). 6. Macgregor, H. C. C-Value Paradox. in (eds. Brenner, S. &amp; Miller, J. H.) 249–250 (Academic Press, 2001). doi:10.1006/rwgn.2001.0301. 7. Alberts, B. et al. Molecular Biology of the Cell. 4th edition. (Garland Science, 2002). 8. Crick, F. H. C., Barnett, L., Brenner, S. &amp; Watts-Tobin, R. J. General Nature of the Genetic Code for Proteins. Nature 192, 1227–1232 (1961). 9. International Human Genome Sequencing Consortium. Finishing the euchromatic sequence of the human genome. Nature 431, 931–945 (2004). 10. Elkon, R. &amp; Agami, R. Characterization of noncoding regulatory DNA in the human genome. Nature Biotechnology 35, 732–746 (2017). 11. Omenn, G. S. Reflections on the HUPO human proteome project, the flagship project of the human proteome organization, at 10 years. Molecular &amp; Cellular Proteomics : MCP 20, 100062 (2021). 12. Shabalina, S. A. &amp; Spiridonov, N. A. The mammalian transcriptome and the function of non-coding DNA sequences. Genome Biology 5, 105 (2004). 13. ENCODE Project Consortium. An integrated encyclopedia of DNA elements in the human genome. Nature 489, 57–74 (2012). 14. Chatterjee, N. &amp; Walker, G. C. Mechanisms of DNA damage, repair, and mutagenesis: DNA Damage and Repair. Environmental and Molecular Mutagenesis 58, 235–263 (2017). 15. Fijalkowska, I. J., Schaaper, R. M. &amp; Jonczyk, P. DNA replication fidelity in escherichia coli: A multi-DNA polymerase affair. FEMS microbiology reviews 36, 1105–1121 (2012). 16. Pray, L. DNA replication and causes of mutation. Nature education 1, 214 (2008). 17. Gout, J.-F., Thomas, W. K., Smith, Z., Okamoto, K. &amp; Lynch, M. Large-scale detection of in vivo transcription errors. Proceedings of the National Academy of Sciences 110, 18584–18589 (2013). 18. Gout, J.-F. et al. The landscape of transcription errors in eukaryotic cells. Science Advances 3, e1701484 (2017). 19. Shcherbakov, D. et al. Ribosomal mistranslation leads to silencing of the unfolded protein response and increased mitochondrial biogenesis. Communications Biology 2, 1–16 (2019). 20. Desouky, O., Ding, N. &amp; Zhou, G. Targeted and non-targeted effects of ionizing radiation. Journal of Radiation Research and Applied Sciences 8, 247–254 (2015). 21. Kiefer, J. Effects of Ultraviolet Radiation on DNA. in (eds. Obe, G. &amp; Vijayalaxmi) 39–53 (Springer, 2007). doi:10.1007/978-3-540-71414-9_3. 22. Bennett, J. W. &amp; Klich, M. Mycotoxins. Clinical Microbiology Reviews 16, 497–516 (2003). 23. Kantidze, O. L., Velichko, A. K., Luzhin, A. V. &amp; Razin, S. V. Heat stress-induced DNA damage. Acta Naturae 8, 75–78 (2016). 24. Gregory, C. D. &amp; Milner, A. E. Regulation of cell survival in Burkitt lymphoma: implications from studies of apoptosis following cold-shock treatment. International Journal of Cancer 57, 419–426 (1994). 25. Gafter-Gvili, A. et al. Oxidative stress-induced DNA damage and repair in human peripheral blood mononuclear cells: Protective role of hemoglobin. PLoS ONE 8, e68341 (2013). 26. Roth, J. R. Frameshift mutations. Annual Review of Genetics 8, 319–346 (1974). 27. Kujovich, J. L. Factor V Leiden thrombophilia. Genetics in Medicine 13, 1–16 (2011). 28. Cutting, G. R. Cystic fibrosis genetics: from molecular understanding to clinical application. Nature Reviews Genetics 16, 45–56 (2015). 29. Fuchsberger, C. et al. The genetic architecture of type 2 diabetes. Nature 536, 41–47 (2016). 30. Morris, A. P. et al. Large-scale association analysis provides insights into the genetic architecture and pathophysiology of type 2 diabetes. Nature genetics 44, 981–990 (2012). 31. Woodford, N. &amp; Ellington, M. J. The emergence of antibiotic resistance by mutation. Clinical Microbiology and Infection 13, 5–18 (2007). 32. Rhee, S.-Y. et al. Human immunodeficiency virus reverse transcriptase and protease sequence database. Nucleic Acids Research 31, 298–303 (2003). 33. Sanger, F., Nicklen, S. &amp; Coulson, A. R. DNA sequencing with chain-terminating inhibitors. Proceedings of the National Academy of Sciences 74, 5463–5467 (1977). 34. Smith, L. M., Fung, S., Hunkapiller, M. W., Hunkapiller, T. J. &amp; Hood, L. E. The synthesis of oligonucleotides containing an aliphatic amino group at the 5′ terminus: Synthesis of fluorescent DNA primers for use in DNA sequence analysis. Nucleic Acids Research 13, 2399–2412 (1985). 35. Smith, L. M. et al. Fluorescence detection in automated DNA sequence analysis. Nature 321, 674–679 (1986). 36. Ansorge, W., Sproat, B., Stegemann, J., Schwager, C. &amp; Zenke, M. Automated DNA sequencing: Ultrasensitive detection of fluorescent bands during electrophoresis. Nucleic Acids Research 15, 4593–4602 (1987). 37. Shendure, J. &amp; Ji, H. Next-generation DNA sequencing. Nature Biotechnology 26, 1135–1145 (2008). 38. Collins, F. S., Morgan, M. &amp; Patrinos, A. The human genome project: Lessons from large-scale biology. Science 300, 286–290 (2003). 39. Liu, L. et al. Comparison of Next-Generation Sequencing Systems. Journal of Biomedicine and Biotechnology 2012, e251364 (2012). 40. The Cost of Sequencing a Human Genome. 41. Metzker, M. L. Sequencing technologies — the next generation. Nat Rev Genet 11, 31–46 (2010). 42. Canard, B. &amp; Sarfati, R. S. DNA polymerase fluorescent substrates with reversible 3’-tags. Gene 148, 1–6 (1994). 43. Nyren, P., Pettersson, B. &amp; Uhlen, M. Solid Phase DNA Minisequencing by an Enzymatic Luminometric Inorganic Pyrophosphate Detection Assay. Analytical Biochemistry 208, 171–175 (1993). 44. Mardis, E. R. A decade’s perspective on DNA sequencing technology. Nature 470, 198–203 (2011). 45. Stoler, N. &amp; Nekrutenko, A. Sequencing error profiles of illumina sequencing instruments. NAR Genomics and Bioinformatics 3, lqab019 (2021). 46. Sequencing Technology | Sequencing by synthesis. 47. Pollard, M. O., Gurdasani, D., Mentzer, A. J., Porter, T. &amp; Sandhu, M. S. Long reads: Their purpose and place. Human Molecular Genetics 27, R234–R241 (2018). 48. Eid, J. et al. Real-time DNA sequencing from single polymerase molecules. Science 323, 133–138 (2009). 49. Levene, M. J. et al. Zero-mode waveguides for single-molecule analysis at high concentrations. Science 299, 682–686 (2003). 50. Clarke, J. et al. Continuous base identification for single-molecule nanopore DNA sequencing. Nature Nanotechnology 4, 265–270 (2009). 51. Deamer, D., Akeson, M. &amp; Branton, D. Three decades of nanopore sequencing. Nature Biotechnology 34, 518–524 (2016). 52. Wick, R. R., Judd, L. M. &amp; Holt, K. E. Performance of neural network basecalling tools for Oxford Nanopore sequencing. Genome Biology 20, 129 (2019). 53. Rhoads, A. &amp; Au, K. F. PacBio Sequencing and Its Applications. Genomics, Proteomics &amp; Bioinformatics 13, 278–289 (2015). 54. Ip, C. L. C. et al. MinION analysis and reference consortium: Phase 1 data release and analysis. F1000Research 4, 1075 (2015). 55. Logsdon, G. A., Vollger, M. R. &amp; Eichler, E. E. Long-read human genome sequencing and its applications. Nat Rev Genet 21, 597–614 (2020). 56. Jain, M. et al. Nanopore sequencing and assembly of a human genome with ultra-long reads. Nature Biotechnology 36, 338–345 (2018). 58. Payne, A., Holmes, N., Rakyan, V. &amp; Loose, M. BulkVis: A graphical viewer for oxford nanopore bulk FAST5 files. Bioinformatics 35, 2193–2198 (2019). 59. Murigneux, V. et al. Comparison of long-read methods for sequencing and assembly of a plant genome. GigaScience 9, giaa146 (2020). 60. Chaisson, M. J. P. et al. Resolving the complexity of the human genome using single-molecule sequencing. Nature 517, 608–611 (2015). 61. Jain, M., Olsen, H. E., Paten, B. &amp; Akeson, M. The Oxford Nanopore MinION: delivery of nanopore sequencing to the genomics community. Genome Biology 17, 239 (2016). 62. Hong, M. et al. RNA sequencing: New technologies and applications in cancer research. Journal of Hematology &amp; Oncology 13, 166 (2020). 63. Ozsolak, F. &amp; Milos, P. M. RNA sequencing: advances, challenges and opportunities. Nature Reviews Genetics 12, 87–98 (2011). 64. Hunt, D. F., Yates, J. R., Shabanowitz, J., Winston, S. &amp; Hauer, C. R. Protein sequencing by tandem mass spectrometry. Proceedings of the National Academy of Sciences 83, 6233–6237 (1986). 65. Smith, B. J. Protein Sequencing Protocols. (Springer Science &amp; Business Media, 2002). 66. Restrepo-Pérez, L., Joo, C. &amp; Dekker, C. Paving the way to single-molecule protein sequencing. Nature Nanotechnology 13, 786–796 (2018). 67. Weirather, J. L. et al. Comprehensive comparison of pacific biosciences and oxford nanopore technologies and their applications to transcriptome analysis. F1000Research 6, 100 (2017). 68. Wang, Y., Zhao, Y., Bollas, A., Wang, Y. &amp; Au, K. F. Nanopore sequencing technology, bioinformatics and applications. Nature Biotechnology 39, 1348–1365 (2021). 69. Ma, X. et al. Analysis of error profiles in deep next-generation sequencing data. Genome Biology 20, 50 (2019). 70. Lima, L. et al. Comparative assessment of long-read error correction software applied to nanopore RNA-sequencing data. Briefings in Bioinformatics 21, 1164–1181 (2020). 72. Zhang, H., Jain, C. &amp; Aluru, S. A comprehensive evaluation of long read error correction methods. BMC Genomics 21, 889 (2020). 73. Amarasinghe, S. L. et al. Opportunities and challenges in long-read sequencing data analysis. Genome Biology 21, 30 (2020). 74. Ruan, J. &amp; Li, H. Fast and accurate long-read assembly with wtdbg2. Nature Methods 17, 155–158 (2020). 75. Koren, S. et al. Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation. Genome Research 27, 722–736 (2017). 76. Tischler, G. &amp; Myers, E. W. Non Hybrid Long Read Consensus Using Local De Bruijn Graph Assembly. 106252 https://www.biorxiv.org/content/10.1101/106252v1 (2017) doi:10.1101/106252. 77. Warren, R. L. et al. ntEdit: Scalable genome sequence polishing. Bioinformatics 35, 4430–4432 (2019). 78. Hepler, N. L. et al. An improved circular consensus algorithm with an application to detect HIV-1 drug-resistance associated mutations (DRAMs). in (2016). 79. Simpson, J. T. et al. Detecting DNA cytosine methylation using nanopore sequencing. Nature Methods 14, 407–410 (2017). 80. Hackl, T., Hedrich, R., Schultz, J. &amp; Förster, F. Proovread : Large-scale high-accuracy PacBio correction through iterative short read consensus. Bioinformatics 30, 3004–3011 (2014). 81. Miclotte, G. et al. Jabba: Hybrid error correction for long sequencing reads. Algorithms for Molecular Biology 11, 10 (2016). 82. Koren, S. et al. Hybrid error correction and de novo assembly of single-molecule sequencing reads. Nature Biotechnology 30, 693–700 (2012). 83. Salmela, L. &amp; Rivals, E. LoRDEC: Accurate and efficient long read error correction. Bioinformatics 30, 3506–3514 (2014). 84. Walker, B. J. et al. Pilon: An Integrated Tool for Comprehensive Microbial Variant Detection and Genome Assembly Improvement. PLOS ONE 9, e112963 (2014). 85. Vaser, R., Sović, I., Nagarajan, N. &amp; Šikić, M. Fast and accurate de novo genome assembly from long uncorrected reads. Genome Research 27, 737–746 (2017). 86. Wenger, A. M. et al. Accurate circular consensus long-read sequencing improves variant detection and assembly of a human genome. Nature Biotechnology 37, 1155–1162 (2019). 87. Timp, W., Comer, J. &amp; Aksimentiev, A. DNA Base-Calling from a Nanopore Using a Viterbi Algorithm. Biophysical Journal 102, L37–L39 (2012). 88. Perešíni, P., Boža, V., Brejová, B. &amp; Vinař, T. Nanopore base calling on the edge. Bioinformatics 37, 4661–4667 (2021). 89. Boža, V., Brejová, B. &amp; Vinař, T. DeepNano: Deep recurrent neural networks for base calling in MinION nanopore reads. PLOS ONE 12, e0178751 (2017). 90. Karst, S. M. et al. High-accuracy long-read amplicon sequences using unique molecular identifiers with Nanopore or PacBio sequencing. Nature Methods 18, 165–169 (2021). 91. Chen, Z. et al. Highly accurate fluorogenic DNA sequencing with information theorybased error correction. Nature Biotechnology 35, 1170–1178 (2017). 92. High Performance Long Read Assay Enables Contiguous Data up to 10Kb on Existing Illumina Platforms. 93. Booeshaghi, A. S. &amp; Pachter, L. Pseudoalignment facilitates assignment of error-prone Ultima Genomics reads. doi:10.1101/2022.06.04.494845. 94. Delahaye, C. &amp; Nicolas, J. Sequencing DNA with nanopores: Troubles and biases. PLOS ONE 16, e0257521 (2021). 96. Dohm, J. C., Peters, P., Stralis-Pavese, N. &amp; Himmelbauer, H. Benchmarking of long-read correction methods. NAR Genomics and Bioinformatics 2, (2020). 97. Foox, J. et al. Performance assessment of DNA sequencing platforms in the ABRF Next-Generation Sequencing Study. Nature Biotechnology 39, 1129–1140 (2021). 98. Huang, Y.-T., Liu, P.-Y. &amp; Shih, P.-W. Homopolish: A method for the removal of systematic errors in nanopore sequencing by homologous polishing. Genome Biology 22, 95 (2021). 99. Rang, F. J., Kloosterman, W. P. &amp; Ridder, J. de. From squiggle to basepair: Computational approaches for improving nanopore sequencing read accuracy. Genome Biology 19, 90 (2018). 100. Sarkozy, P., Jobbágy, Á. &amp; Antal, P. Calling Homopolymer Stretches from Raw Nanopore Reads by Analyzing k-mer Dwell Times. in (eds. Eskola, H., Väisänen, O., Viik, J. &amp; Hyttinen, J.) 241–244 (Springer, 2018). doi:10.1007/978-981-10-5122-7_61. 101. Hawkins, J. A., Jones, S. K., Finkelstein, I. J. &amp; Press, W. H. Indel-correcting DNA barcodes for high-throughput sequencing. Proceedings of the National Academy of Sciences 115, E6217–E6226 (2018). 102. Srivathsan, A. et al. A MinION-based pipeline for fast and cost-effective DNA barcoding. Molecular Ecology Resources 18, 1035–1049 (2018). 103. Wang, Y., Noor-A-Rahim, Md., Gunawan, E., Guan, Y. L. &amp; Poh, C. L. Construction of bio-constrained code for DNA data storage. IEEE Communications Letters 23, 963–966 (2019). 104. R10.3: the newest nanopore for high accuracy nanopore sequencing now available in store. 105. Zhou, L. et al. Detection of DNA homopolymer with graphene nanopore. Journal of Vacuum Science &amp; Technology B 37, 061809 (2019). 106. Goto, Y., Yanagi, I., Matsui, K., Yokoi, T. &amp; Takeda, K. Identification of four single-stranded DNA homopolymers with a solid-state nanopore in alkaline CsCl solution. Nanoscale 10, 20844–20850 (2018). 107. Nurk, S. et al. HiCanu: Accurate assembly of segmental duplications, satellites, and allelic variants from high-fidelity long reads. Genome Res. 30, 1291–1305 (2020). 108. Ekim, B., Berger, B. &amp; Chikhi, R. Minimizer-space de Bruijn graphs: Whole-genome assembly of long reads in minutes on a personal computer. Cell Systems 12, 958–968.e6 (2021). 109. Shafin, K. et al. Nanopore sequencing and the Shasta toolkit enable efficient de novo assembly of eleven human genomes. Nature Biotechnology 38, 1044–1053 (2020). 110. Miller, J. R. et al. Aggressive assembly of pyrosequencing reads with mates. Bioinformatics 24, 2818–2824 (2008). 111. Sahlin, K. &amp; Medvedev, P. De Novo Clustering of Long-Read Transcriptome Data Using a Greedy, Quality Value-Based Algorithm. Journal of Computational Biology 27, 472–484 (2020). 112. Au, K. F., Underwood, J. G., Lee, L. &amp; Wong, W. H. Improving PacBio Long Read Accuracy by Short Read Alignment. PLOS ONE 7, e46679 (2012). 113. Hu, R., Sun, G. &amp; Sun, X. LSCplus: a fast solution for improving long read accuracy by short read alignment. BMC Bioinformatics 17, 451 (2016). 114. Li, H. Minimap2: Pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018). 115. Jain, C. et al. Weighted minimizer sampling improves long read mapping. Bioinformatics 36, i111–i118 (2020). 116. Van Neste, C., Van Nieuwerburgh, F., Van Hoofstat, D. &amp; Deforce, D. Forensic STR analysis using massive parallel sequencing. Forensic Science International: Genetics 6, 810–818 (2012). 117. Short-read sequencing by binding. 118. Cetin, A. E. et al. Plasmonic sensor could enable label-free DNA sequencing. ACS Sensors 3, 561–568 (2018). 119. Almogy, G. et al. Cost-efficient whole genome-sequencing using novel mostly natural sequencing-by-synthesis chemistry and open fluidics platform. doi:10.1101/2022.05.29.493900. 120. Sunagawa, S. et al. Tara Oceans: towards global ocean ecosystems biology. Nature Reviews Microbiology 18, 428–445 (2020). 121. Lewin, H. A. et al. Earth BioGenome project: Sequencing life for the future of life. Proceedings of the National Academy of Sciences 115, 4325–4333 (2018). 122. Lightbody, G. et al. Review of applications of high-throughput sequencing in personalized medicine: Barriers and facilitators of future progress in research and clinical application. Briefings in Bioinformatics 20, 1795–1811 (2019). "],["aligning-sequence-data.html", "Chapter 2 Aligning sequence data 2.1 What is an alignment ? 2.2 How do we speed up pairwise alignment ? 2.3 Multiple sequence alignment 2.4 The specificities of read-mapping", " Chapter 2 Aligning sequence data 2.1 What is an alignment ? We want to compare individuals, species, whatever. To do this we need to compare what is comparable. Alignment to the rescue. We want to find similarities in 2 sequences and put these similarities together, so we can compare sequences. When we align 2 sequences together we talk about pairwise alignment as opposed to multiple alignment where we align more than 2 sequences all together. We will first focus on pairwise alignment. 2 ways of going about for pairwise alignment123: Global alignment: we look at the entirety of the 2 sequences and take all that information into account when aligning Local alignment: we look at the sequences portion by portion, trying to find the best place where they match up. 2.1.1 Why align ? hamming distance is an easy method124 Although it is easy to compute -&gt; sequences must have same length When dealing with DNA/proteins we have to be able to deal with insertions/deletions and hamming cannot do that… This is very similar to other well known problems in computer science: the string-edit problem125 and the Levenshtein distance126 Alignments are used in many cases so that: we can examine similarities/differences between them (i.e. comparative genomics )127 we can infer (usually with multiple alignment): evolutionary relationships (phylogenetics), and most methods to reconstruct phylogenetic trees take as input a multiple alignment:128–132 protein: structure133,134 function135,136 we can correct sequencing errors80,82,137. Structural variant detection138,139 2.1.2 How to align two sequences ? The seminal method for pairwise alignment was the Needleman-Wünsch algorithm140 based on a dynamic programming method. A decade later, the Smith-Waterman algorithm141 was developed with similar ideas to perform local alignment. Both are still used today for pairwise alignment. Dynamic programming is a method to solve complex problems by breaking it into smaller sub-problems and solving each one optimally and separately142,143, it is widely used when we wish to have a precise alignment between 2 sequences. 2.1.2.1 Global alignment We do global alignment when we expect two sequences to be related and of similar genes/proteins, etc… short presentation of NW algo (c.f. Figure 2.1): The score of an alignment can be defined recursively -&gt; dynamic programming Fill out DP matrix: Traceback to find optimal alignment: start in the bottom right and follow the arrows up to the upper left. Diagonal: Match/mismatch, vertical arrow: gap in “columns” sequence, horizontal arrow: gap in “rows” sequence. Figure 2.1: Example global alignment with the Needleman-Wunsch algorithm/ The match score is 1, the mismatch and indel scores are both set to -1. This results in 3 equally optimal global alignments. This algorithm although very precise, has a time complexity of \\(O(nm)\\) where \\(n\\) and \\(m\\) are the lengths of the sequences to align123. Some methods have been proposed to speed up144, however the complexity is still \\(O(nm/\\log(n))\\). Lower bounds have been studied and there is not much optimization we can do if we want to keep an optimal exact alignment145,146. If we want to do better we have to rely on heuristics. Another issue is space complexity since we need to store the matrix, we get \\(O(nm)\\) as well for space, so if we wish to align 2 human genomes we would need to store \\(\\approx 10^{19}\\) matrix cells, which would amount to 10 Exabytes of storage if we use 8bit integers (meaning it would take an entire data center to store that). However in practice we can do much better than that, and construct an optimal alignment in linear space complexity \\(O(n+m)\\)147 meaning we would only need a couple gigabytes to store the matrix for 2 human genomes. Above idea resulting in Myers-miller algorithm148, implemented in the EMBOSS stretcher tool149 2.1.2.2 Local alignment We want to align a subsequence to a subsequence. Similar ideas to NW, except we start the traceback at the maximally valued cell and stop when we hit a score of 0. i.e. In the example in Figure 2.1 there are two possible starting cells with a score of 2. This will yield 2 optimal local alignments: AC to AC and GA to GA. In terms of complexity is the same as NW in quadratic in time and space123 but can be taken down to linear space with the same approach as NW. Optimizations were made and resulted in the Huang and Miller algorithm150 which is implemented in the EMBOSS Lalign tool149, and the Waterman Eggert algorithm151. Both methods are implemented in many different software tools and are used when performing pairwise alignments of short sequences149,152,153 with version implemented for specific CPU instruction sets154 or GPUs155 to speed up alignment. 2.1.3 Substitution models / scoring When scoring an alignment we can use different scoring models/substitution matrices156: A lot of work has been done on protein scoring matrices Log-Odds models, based on the fact that mutations are not equiprobable, and some mutations will be much more common (I \\(\\leftrightarrow\\) L in proteins) PAM (Point Accepted Mutations)157, gotten from studying closely related protein sequences, estimate the probability of one amino acid changing to another one over time. With more data refinements have been made for PAM-like matrices158. BLOSUM159, similar idea to PAM except they were constructed on several “blocks”. A block is a segment of a protein that is very well conserved within a family and computed the probabilities on these blocks. Some matrices estimated with ML instad of log-odds methods160,161 Model specific matrices: Transmembrane matrices162,163 Disordered regions in proteins:164 context-specific matrices165 Specific organisms like P. falciparum with pfSSM166 or HIV167 specific to global alignment168 Some on DNA alignment You can derive a matrix with methods similar to PAM169 You can do codon substitution matrices170, or combine codon matrices with AA matrices171 2.1.4 Dealing with gaps biologically longer deletions are more likely than plenty of shorter ones Here a short example of 2 alignments with different gap strategies Semi global alignment (i.e. gaps on the ends of the sequence are free…) Affine gap penalties, proposed by Gotoh172 Non affine gap penalties173–175 2.2 How do we speed up pairwise alignment ? Although NW and SW give us optimal alignments176 when dealing with large sequences they become impractical due to time and space complexity. We need heuristics, review177, . 2.2.1 Change the method Bounded DP178,179, we can make an assumption about the relationship between the sequences, there will probably not be many gaps, therefore the scores we will used will be concentrated around the diagonal of the DP matrix c.f. 2.2 New Algorithms like the wavefront algorithm180 HMMs: PairHMMs can be used to align 2 sequences, in some cases it is mathematically equivalent to NW181. Software: HHsearch182, HMMer183, MCALIGN2184 is used to efficiently search for alignments in large databases You can also align with Fast Fourier Transforms (FFT) as in MAFFT185 by quickly computing correlations with FFT to find homologous regions and then using these to align. 2.2.2 Seed and extend with data structures General idea: Seed + extend for local alignment Find anchors for global alignment In both cases: divide and conquer approach: as you can restrict the DP matrix by blocks defined by the anchors/seeds c.f. 2.2 Many ways of finding seeds186 and to index them187 2 use cases: global alignment: align 2 large sequences that would overload computing resources. local alignment: to a database: ie. find hits in many sequences. to a reference: ie find best hit in one sequence. Figure 2.2: 2 heuristic methods to speed up alignment: divide and conquer and bounded dynamic programming. Adapted from177 (Original figure here as a placeholder, I will adapt it) Building indices/databases (useful when you want to try aligning a query sequence to a bunch of possible targets, i.e. in order to search for homology, this does approximate local alignment): 2.2.2.1 Hash tables BLAST188 We break up our sequences into overlapping “words” i.e. all possible short sub-sequences. Construct a database of words with positions in the reference sequence(s) Get list of words for your query sequence and generate possible “hits”, i.e. words that align with your query words with a score higher than a threshold. Scan the database for these generated words, if you find one it is a hit and these 2 words are a candidate position for a local alignment. extend the local alignment with SW in both directions from the hit to get a local alignment, stop extending if the alignment score gets too low. Plenty of variants: BLASTP for proteins, BLASTN or MEGABLAST for DNA, BLASTX for comparing DNA query to a protein database, PSI-BLAST that iteratively refines the alignment by building multiple alignments from the statistically significant alignments, learns a specific scoring matrix from this and starts over, other people have refined the heuristic for even faster seed prediction as in UBLAST189. It is important to note that it is a heuristic method, it has a decreased sensitivity to the SW algorithm which is optimal190, it is however much faster and can allow users to search for similarities among millions of sequences at once Particularly useful, one of the most cited papers in the world: quickly search for homologs of unknown sequences, … available as a web service hosted by NCBI (https://blast.ncbi.nlm.nih.gov/Blast.cgi). FASTA191, derived from FASTP192 which could not deal with gaps, preceded BLAST. Similarly to BLAST, break query up into overlapping words Scan the library for exact-matching words to build up regions with high similarity (save 10 best regions) Score regions with a substitution matrix High scoring regions are combined to build an approximate alignment Highest scoring ungapped alignment is realigned with banded SW. Both methods are very Fast, taking only a couple seconds to find approximate local alignments for 100 sequences193 in a database of over 80 million sequences194, with HMMs being quite slow. It is much faster to use these than to try to do the same task with SW or NW195. Both BLAST and FASTA compute a statistical p-value for a pairwise alignment and an expected number of random hits when scanning the database (E-value)196,197 Minimap2114 minimizer (Figure 2.3) hash table Diamond198,199 which indexes both the reference and query at the same time. Figure 2.3: Example of kmers sharing a minimizer 2.2.2.2 Suffix trees / suffix arrays Used in many pattern matching problems125. Software: AVID uses suffix trees to find anchors200, MUMmer finds largest identical subsequences between 2 sequences to anchor alignments using suffix trees201 2.2.2.3 FM Index FM index202: In some cases when using suffix trees take too much memory we can use an FM index which is based on the burrows wheeler transform203. used for in exact and approximate string matching123 Software: BWT-SW uses an FM-index to speed up local alignment204, Bowtie 2 uses an FM index to find seeds205, BWA and BWA-SW use a similar idea206,207, BWA-MEM208 and CUSHAW209 also uses FM indices to find exact matches to seed a local alignment . 2.3 Multiple sequence alignment When we need to compare a lot of individuals together we can do MSA, essential task in many bioinformatics analyses210. NP-hard211,212 problem if you do it with DP so we need heuristics or tricks Even if we align all sequences pairwise we need to then combine all gaps and stuff -&gt; complicated. 2.3.1 Progressive alignment guide tree, clustering of sequences then refine alignment. Good heuristic but with larger datasets, becomes harder.213 Main MSA method. Compute pairwise distance matrix for sequence set: either by doing N(N-1)/2 pairwise alignments Or alignment free methods to speed things up214,215 Build guide tree from distances (neighbor joining, UPGMA, …) Align sequences one by one according to the tree, from the leafs (i.e sequences) to the root (full MSA). Figure 2.4: Overview of the progressive alignment process. A) sequences to align B) guide tree constructed from distances C) Alignment steps along the guide tree and resulting MSA. Adapted from123 Problems -&gt; keeps gaps and if bad alignment at first steps error propagates (“once a gap, always a gap”213). In order to curtail this problem we have iterative refinement210: create MSA (e.g. progressive) divide MSA into 2 groups + remove columns with only gaps realign with profile alignment Redo 2+3 until no improvement is made, according to some scoring function (Weighted sum-of-pair216, or others like log-odds, correlation217 or consistency218) Some of the most used MSA software uses these methods of progressive/iterative refinement: CLUSTAL-W219 and CLUSTAL-X220 T-Coffee221 MUSCLE222,223 MAFFT185 ProbCons224 Different strenghts/weaknesses so many reviews and benchmarks to make a choice225–229 2.3.2 HMMs in profile-profile or seq-profile alignments HMM method similar performance to clustal-w230, HHMer183, MSAProbs231 and COVID-align232 Example of COVID where homology is high so we can get away with aligning pairwise to ancestral-sequence NextClade/NextAlign233 2.3.3 Other methods (short) Simulated annealing to speed up DP234–236 Genetic algorithm, review237, can speed things up238 SAGA239, VGDA240, GAPAM241 recently: regressive method242 root to leaf allows to align a very large number of sequences: 1.4 million! 2.4 The specificities of read-mapping Huge review of mapping in243 2.4.1 What is read-mapping ? Task: locally/semi-globally align independent sequencing reads to a reference genome. Plenty of aligners both for short reads (reviews244–246) and long-reads (114. Active field and there are benchmarks247 and reviews243,248. Mapping quality: Intro and definition, quite a loosely defined term. Different definitions/implementations ? Mapping quality from tandem simulation249 Technical aspects to speed up, since we usually have a couple refs and and many many query reads, the index strategy described earlier is particularly well suited: hash tables:114 FM index / BWT: BWT-SW204, Bowtie 2205, BWA, BWA-SW206,207, BWA-MEM208 and CUSHAW209. Divide and conquer as well:250 These heuristics also become more and more needed as sequencing technologies yield longer and longer reads. Also hardware acceleration for short251 and long252–254 reads. 2.4.2 Challenges of read-mapping low homology / sequencing errors… make mapping and other tasks hard125 Particularly with long reads since sequencing error rate is higher: specific long read mappers that take this into account: PB: BLASR255, lordFAST256 ONT: GraphMap257 Both: NGMLR258, MashMap259, DuploMap260 Repetitive regions (centromeres, telomeres) make it hard to map243. Specific tools have been developed for this: winnowmap115, winnowmap2261 tandemtools262 for tandem repeats. homopolymers can also be a problem, so HPC is implemented in mappers (c.f. 1.4.3.2) References 80. Hackl, T., Hedrich, R., Schultz, J. &amp; Förster, F. Proovread : Large-scale high-accuracy PacBio correction through iterative short read consensus. Bioinformatics 30, 3004–3011 (2014). 82. Koren, S. et al. Hybrid error correction and de novo assembly of single-molecule sequencing reads. Nature Biotechnology 30, 693–700 (2012). 114. Li, H. Minimap2: Pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018). 115. Jain, C. et al. Weighted minimizer sampling improves long read mapping. Bioinformatics 36, i111–i118 (2020). 123. Sung, W.-K. Algorithms in bioinformatics: A practical introduction. (Chapman; Hall/CRC, 2011). doi:10.1201/9781420070347. 124. Hamming, R. W. Coding and Information Theory. (Prentice-Hall, 1980). 125. Gusfield, D. Algorithms on strings, trees, and sequences: Computer science and computational biology. (Cambridge University Press, 1997). doi:10.1017/CBO9780511574931. 126. Levenshtein, V. I. Binary codes capable of correcting deletions, insertions and reversals. Soviet Physics Doklady 10, 707 (1966). 127. Hardison, R. C. Comparative Genomics. PLOS Biology 1, e58 (2003). 128. Felsenstein, J. Evolutionary trees from DNA sequences: A maximum likelihood approach. Journal of Molecular Evolution 17, 368–376 (1981). 132. Price, M. N., Dehal, P. S. &amp; Arkin, A. P. FastTree 2 Approximately Maximum-Likelihood Trees for Large Alignments. PLOS ONE 5, e9490 (2010). 133. Jumper, J. et al. Highly accurate protein structure prediction with AlphaFold. Nature 596, 583–589 (2021). 134. Karplus, K. et al. Predicting protein structure using only sequence information. Proteins: Structure, Function, and Bioinformatics 37, 121–125 (1999). 135. Watson, J. D., Laskowski, R. A. &amp; Thornton, J. M. Predicting protein function from sequence and structural data. Current Opinion in Structural Biology 15, 275–284 (2005). 136. Lee, D., Redfern, O. &amp; Orengo, C. Predicting protein function from sequence and structure. Nature Reviews Molecular Cell Biology 8, 995–1005 (2007). 137. Salmela, L. &amp; Schröder, J. Correcting errors in short reads by multiple alignments. Bioinformatics 27, 1455–1461 (2011). 138. Medvedev, P., Stanciu, M. &amp; Brudno, M. Computational methods for discovering structural variation with next-generation sequencing. Nature Methods 6, S13–S20 (2009). 139. Mahmoud, M. et al. Structural variant calling: the long and the short of it. Genome Biology 20, 246 (2019). 140. Needleman, S. B. &amp; Wunsch, C. D. A general method applicable to the search for similarities in the amino acid sequence of two proteins. Journal of Molecular Biology 48, 443–453 (1970). 141. Smith, T. F. &amp; Waterman, M. S. Identification of common molecular subsequences. Journal of Molecular Biology 147, 195–197 (1981). 142. Bradley, S. P., Hax, A. C. &amp; Magnanti, T. L. Applied Mathematical Programming. (Addison-Wesley Publishing Company, 1977). 143. Bellman, R. The theory of dynamic programming. Bulletin of the American Mathematical Society 60, 503–515 (1954). 144. Masek, W. J. &amp; Paterson, M. S. A faster algorithm computing string edit distances. Journal of Computer and System Sciences 20, 18–31 (1980). 145. Vinh, N. X., Epps, J. &amp; Bailey, J. Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance. Journal of Machine Learning Research 11, 18 (2010). 146. Ullman, J. D., Aho, A. V. &amp; Hirschberg, D. S. Bounds on the complexity of the longest common subsequence problem. Journal of the ACM 23, 112 (1976). 147. Hirschberg, D. S. A linear space algorithm for computing maximal common subsequences. Communications of the ACM 18, 341343 (1975). 148. Myers, E. W. &amp; Miller, W. Optimal alignments in linear space. Bioinformatics 4, 11–17 (1988). 149. Rice, P., Longden, I. &amp; Bleasby, A. EMBOSS: The european molecular biology open software suite. Trends in genetics 16, 276277 (2000). 150. Huang, X. &amp; Miller, W. A time-efficient, linear-space local similarity algorithm. Advances in Applied Mathematics 12, 337–357 (1991). 151. Waterman, M. S. &amp; Eggert, M. A new algorithm for best subsequence alignments with application to tRNA-rRNA comparisons. Journal of Molecular Biology 197, 723–728 (1987). 152. Stajich, J. E. et al. The Bioperl Toolkit: Perl Modules for the Life Sciences. Genome Research 12, 1611–1618 (2002). 153. Gentleman, R. C. et al. Bioconductor: open software development for computational biology and bioinformatics. Genome Biology 5, R80 (2004). 154. Daily, J. Parasail: SIMD c library for global, semi-global, and local pairwise sequence alignments. BMC Bioinformatics 17, 81 (2016). 155. Frohmberg, W., Kierzynka, M., Blazewicz, J. &amp; Wojciechowski, P. G-PAS 2.0 an improved version of protein alignment tool with an efficient backtracking routine on multiple GPUs. Bulletin of the Polish Academy of Sciences: Technical Sciences 60, 491–494 (2012). 156. Altschul, S. F. Substitution Matrices. in (John Wiley &amp; Sons, Ltd, 2013). doi:10.1002/9780470015902.a0005265.pub3. 157. Dayhoff, M. O., Schwartz, R. M. &amp; Orcutt, B. C. A model of evolutionary change in proteins. A Model of Evolutionary Change in Proteins 345–352 (1978). 158. Müller, T. &amp; Vingron, M. Modeling amino acid replacement. Journal of Computational Biology: A Journal of Computational Molecular Cell Biology 7, 761–776 (2000). 159. Henikoff, S. &amp; Henikoff, J. G. Amino acid substitution matrices from protein blocks. Proceedings of the National Academy of Sciences 89, 10915–10919 (1992). 160. Whelan, S. &amp; Goldman, N. A general empirical model of protein evolution derived from multiple protein families using a maximum-likelihood approach. Molecular Biology and Evolution 18, 691–699 (2001). 161. Le, S. Q. &amp; Gascuel, O. An improved general amino acid replacement matrix. Molecular Biology and Evolution 25, 1307–1320 (2008). 162. Müller, T., Rahmann, S. &amp; Rehmsmeier, M. Non-symmetric score matrices and the detection of homologous transmembrane proteins. Bioinformatics 17, S182–S189 (2001). 163. Ng, P. C., Henikoff, J. G. &amp; Henikoff, S. PHAT: a transmembrane-specific substitution matrix. Predicted hydrophobic and transmembrane. Bioinformatics (Oxford, England) 16, 760–766 (2000). 164. Trivedi, R. &amp; Nagarajaram, H. A. Amino acid substitution scoring matrices specific to intrinsically disordered regions in proteins. Scientific Reports 9, 16380 (2019). 165. Goonesekere, N. C. W. &amp; Lee, B. Context-specific amino acid substitution matrices and their use in the detection of protein homologs. Proteins: Structure, Function, and Bioinformatics 71, 910–919 (2008). 166. Paila, U., Kondam, R. &amp; Ranjan, A. Genome bias influences amino acid choices: analysis of amino acid substitution and re-compilation of substitution matrices exclusive to an AT-biased genome. Nucleic Acids Research 36, 6664–6675 (2008). 167. Nickle, D. C. et al. HIV-specific probabilistic models of protein evolution. PLoS ONE 2, e503 (2007). 168. Sardiu, M. E., Alves, G. &amp; Yu, Y.-K. Score statistics of global sequence alignment from the energy distribution of a modified directed polymer and directed percolation problem. Physical Review. E, Statistical, Nonlinear, and Soft Matter Physics 72, 061917 (2005). 169. Chiaromonte, F., Yap, V. B. &amp; Miller, W. Scoring pairwise genomic sequence alignments. in 115–126 (WORLD SCIENTIFIC, 2001). doi:10.1142/9789812799623_0012. 170. Schneider, A., Cannarozzi, G. M. &amp; Gonnet, G. H. Empirical codon substitution matrix. BMC bioinformatics 6, 134 (2005). 171. Doron-Faigenboim, A. &amp; Pupko, T. A combined empirical and mechanistic codon model. Molecular Biology and Evolution 24, 388–397 (2007). 172. Gotoh, O. An improved algorithm for matching biological sequences. Journal of Molecular Biology 162, 705–708 (1982). 173. Benner, S. A., Cohen, M. A. &amp; Gonnet, G. H. Empirical and Structural Models for Insertions and Deletions in the Divergent Evolution of Proteins. Journal of Molecular Biology 229, 1065–1082 (1993). 175. Waterman, M. S. Efficient sequence alignment algorithms. Journal of Theoretical Biology 108, 333–337 (1984). 176. Pearson, W. R. &amp; Miller, W. [27] Dynamic programming algorithms for biological sequence comparison. in vol. 210 575–601 (Academic Press, 1992). 177. Chao, J., Tang, F. &amp; Xu, L. Developments in Algorithms for Sequence Alignment: A Review. Biomolecules 12, 546 (2022). 178. Spouge, J. L. Speeding up dynamic programming algorithms for finding optimal lattice paths. SIAM Journal on Applied Mathematics 49, 1552–1566 (1989). 179. Fickett, J. W. Fast optimal alignment. Nucleic Acids Research 12, 175–179 (1984). 180. Marco-Sola, S., Moure, J. C., Moreto, M. &amp; Espinosa, A. Fast gap-affine pairwise alignment using the wavefront algorithm. Bioinformatics (2020) doi:10.1093/bioinformatics/btaa777. 181. Durbin, R., Eddy, S. R., Krogh, A. &amp; Mitchison, G. Biological sequence analysis: Probabilistic models of proteins and nucleic acids. (Cambridge University Press, 1998). doi:10.1017/CBO9780511790492. 182. Söding, J. Protein homology detection by HMM-HMM comparison. Bioinformatics (Oxford, England) 21, 951–960 (2005). 183. Finn, R. D., Clements, J. &amp; Eddy, S. R. HMMER web server: Interactive sequence similarity searching. Nucleic Acids Research 39, W29–W37 (2011). 184. Wang, J., Keightley, P. D. &amp; Johnson, T. MCALIGN2: Faster, accurate global pairwise alignment of non-coding DNA sequences based on explicit models of indel evolution. BMC Bioinformatics 7, 292 (2006). 185. Katoh, K., Misawa, K., Kuma, K. &amp; Miyata, T. MAFFT: A novel method for rapid multiple sequence alignment based on fast fourier transform. Nucleic Acids Research 30, 3059–3066 (2002). 186. Sun, Y. &amp; Buhler, J. Choosing the best heuristic for seeded alignment of DNA sequences. BMC Bioinformatics 7, 133 (2006). 187. Li, H. &amp; Homer, N. A survey of sequence alignment algorithms for next-generation sequencing. Briefings in Bioinformatics 11, 473–483 (2010). 188. Altschul, S. F., Gish, W., Miller, W., Myers, E. W. &amp; Lipman, D. J. Basic local alignment search tool. Journal of Molecular Biology 215, 403–410 (1990). 189. Edgar, R. C. Search and clustering orders of magnitude faster than BLAST. Bioinformatics 26, 2460–2461 (2010). 190. Shpaer, E. G. et al. Sensitivity and Selectivity in Protein Similarity Searches: A Comparison of SmithWaterman in Hardware to BLAST and FASTA. Genomics 38, 179–191 (1996). 191. Pearson, W. R. &amp; Lipman, D. J. Improved tools for biological sequence comparison. Proceedings of the National Academy of Sciences of the United States of America 85, 2444–2448 (1988). 192. Lipman, D. J. &amp; Pearson, W. R. Rapid and sensitive protein similarity searches. Science (New York, N.Y.) 227, 1435–1441 (1985). 193. Saripella, G. V., Sonnhammer, E. L. L. &amp; Forslund, K. Benchmarking the next generation of homology inference tools. Bioinformatics 32, 2636 (2016). 194. Finn, R. D. et al. The Pfam protein families database: towards a more sustainable future. Nucleic Acids Research 44, D279 (2016). 195. Essoussi, N. &amp; Fayech, S. A comparison of four pair-wise sequence alignment methods. Bioinformation 2, 166–168 (2007). 196. Karlin, S. &amp; Altschul, S. F. Methods for assessing the statistical significance of molecular sequence features by using general scoring schemes. Proceedings of the National Academy of Sciences 87, 2264–2268 (1990). 197. Mott, R. Alignment: Statistical Significance. in (John Wiley &amp; Sons, Ltd, 2005). doi:10.1038/npg.els.0005264. 198. Buchfink, B., Xie, C. &amp; Huson, D. H. Fast and sensitive protein alignment using DIAMOND. Nature Methods 12, 59–60 (2015). 199. Buchfink, B., Reuter, K. &amp; Drost, H.-G. Sensitive protein alignments at tree-of-life scale using DIAMOND. Nature Methods 18, 366–368 (2021). 200. Bray, N., Dubchak, I. &amp; Pachter, L. AVID: A global alignment program. Genome Research 13, 97–102 (2003). 201. Delcher, A. L., Phillippy, A., Carlton, J. &amp; Salzberg, S. L. Fast algorithms for large-scale genome alignment and comparison. Nucleic Acids Research 30, 2478–2483 (2002). 202. Ferragina, P. &amp; Manzini, G. Proceedings 41st annual symposium on foundations of computer science. in 390–398 (2000). doi:10.1109/SFCS.2000.892127. 203. Burrows, M. &amp; Wheeler, D. A block-sorting lossless data compression algorithm. (1994). 204. Lam, T. W., Sung, W. K., Tam, S. L., Wong, C. K. &amp; Yiu, S. M. Compressed indexing and local alignment of DNA. Bioinformatics 24, 791–797 (2008). 205. Langmead, B. &amp; Salzberg, S. L. Fast gapped-read alignment with Bowtie 2. Nat Methods 9, 357–359 (2012). 206. Li, H. &amp; Durbin, R. Fast and accurate short read alignment with burrowswheeler transform. Bioinformatics 25, 1754–1760 (2009). 207. Li, H. &amp; Durbin, R. Fast and accurate long-read alignment with burrowswheeler transform. Bioinformatics 26, 589–595 (2010). 208. Li, H. Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. https://arxiv.org/abs/1303.3997 (2013). 209. Liu, Y. &amp; Schmidt, B. Long read alignment based on maximal exact match seeds. Bioinformatics 28, i318–i324 (2012). 210. Multiple Sequence Alignment Methods. vol. 1079 (Humana Press, 2014). 211. Wang, L. &amp; Jiang, T. On the complexity of multiple sequence alignment. Journal of Computational Biology 1, 337–348 (1994). 212. Just, W. Computational complexity of multiple sequence alignment with SP-score. Journal of Computational Biology 8, 615–623 (2001). 213. Feng, D.-F. &amp; Doolittle, R. F. Progressive sequence alignment as a prerequisitetto correct phylogenetic trees. Journal of Molecular Evolution 25, 351–360 (1987). 214. Jones, D. T., Taylor, W. R. &amp; Thornton, J. M. The rapid generation of mutation data matrices from protein sequences. Bioinformatics 8, 275–282 (1992). 215. Blaisdell, B. E. A measure of the similarity of sets of sequences not requiring sequence alignment. Proceedings of the National Academy of Sciences 83, 5155–5159 (1986). 216. Altschul, S. F., Carroll, R. J. &amp; Lipman, D. J. Weights for data related by a tree. Journal of Molecular Biology 207, 647–653 (1989). 217. Edgar, R. C. &amp; Sjölander, K. A comparison of scoring functions for protein sequence profile alignment. Bioinformatics 20, 1301–1308 (2004). 218. Notredame, C., Holm, L. &amp; Higgins, D. G. COFFEE: An objective function for multiple sequence alignments. Bioinformatics 14, 407–422 (1998). 219. Thompson, J. D., Higgins, D. G. &amp; Gibson, T. J. CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice. Nucleic Acids Research 22, 4673–4680 (1994). 220. Thompson, J. D., Gibson, T. J., Plewniak, F., Jeanmougin, F. &amp; Higgins, D. G. The CLUSTAL_x windows interface: Flexible strategies for multiple sequence alignment aided by quality analysis tools. Nucleic Acids Research 25, 4876–4882 (1997). 221. Notredame, C., Higgins, D. G. &amp; Heringa, J. T-coffee: a novel method for fast and accurate multiple sequence alignment11Edited by J. Thornton. Journal of Molecular Biology 302, 205–217 (2000). 222. Edgar, R. C. MUSCLE: A multiple sequence alignment method with reduced time and space complexity. BMC Bioinformatics 5, 113 (2004). 223. Edgar, R. C. MUSCLE: Multiple sequence alignment with high accuracy and high throughput. Nucleic Acids Research 32, 1792–1797 (2004). 224. Do, C. B., Mahabhashyam, M. S. P., Brudno, M. &amp; Batzoglou, S. ProbCons: Probabilistic consistency-based multiple sequence alignment. Genome Research 15, 330–340 (2005). 225. Notredame, C. Recent Evolutions of Multiple Sequence Alignment Algorithms. PLOS Computational Biology 3, e123 (2007). 229. Thompson, J. D., Plewniak, F. &amp; Poch, O. BAliBASE: a benchmark alignment database for the evaluation of multiple alignment programs. Bioinformatics 15, 87–88 (1999). 230. Eddy, S. R. Multiple Alignment Using Hidden Markov Models. 7. 231. Liu, Y., Schmidt, B. &amp; Maskell, D. L. MSAProbs: Multiple sequence alignment based on pair hidden markov models and partition function posterior probabilities. Bioinformatics 26, 1958–1964 (2010). 232. Lemoine, F., Blassel, L., Voznica, J. &amp; Gascuel, O. COVID-align: Accurate online alignment of hCoV-19 genomes using a profile HMM. Bioinformatics (2020) doi:10.1093/bioinformatics/btaa871. 233. Aksamentov, I., Roemer, C., Hodcroft, E. &amp; Neher, R. Nextclade: clade assignment, mutation calling and quality control for viral genomes. Journal of Open Source Software 6, 3773 (2021). 234. Kim, J., Pramanik, S. &amp; Chung, M. J. Multiple sequence alignment using simulated annealing. Bioinformatics 10, 419–426 (1994). 236. Huo, H. &amp; Stojkovic, V. Third international conference on natural computation (ICNC 2007). in vol. 2 270–274 (2007). 237. Chowdhury, B. &amp; Garai, G. A review on multiple sequence alignment from the perspective of genetic algorithm. Genomics 109, 419–431 (2017). 238. Zhang, C. &amp; Wong, A. K. C. A genetic algorithm for multiple molecular sequence alignment. Bioinformatics 13, 565–581 (1997). 239. Notredame, C. &amp; Higgins, D. G. SAGA: Sequence alignment by genetic algorithm. Nucleic Acids Research 24, 1515–1524 (1996). 240. Naznin, F., Sarker, R. &amp; Essam, D. Vertical decomposition with genetic algorithm for multiple sequence alignment. BMC Bioinformatics 12, 353 (2011). 241. Naznin, F., Sarker, R. &amp; Essam, D. Progressive alignment method using genetic algorithm for multiple sequence alignment. IEEE Transactions on Evolutionary Computation 16, 615–631 (2012). 242. Garriga, E. et al. Large multiple sequence alignments with a root-to-leaf regressive method. Nature Biotechnology 37, 1466–1470 (2019). 243. Alser, M. et al. Technology dictates algorithms: Recent developments in read alignment. Genome Biology 22, 249 (2021). 244. Schbath, S. et al. Mapping reads on a genomic sequence: An algorithmic overview and a practical comparative analysis. Journal of Computational Biology 19, 796–813 (2012). 246. Canzar, S. &amp; Salzberg, S. L. Short read mapping: An algorithmic tour. Proceedings of the IEEE 105, 436–458 (2017). 247. Břinda, K., Boeva, V. &amp; Kucherov, G. RNF: A general framework to evaluate NGS read mappers. Bioinformatics 32, 136–139 (2016). 248. Ruffalo, M., LaFramboise, T. &amp; Koyutürk, M. Comparative analysis of algorithms for next-generation sequencing read alignment. Bioinformatics (Oxford, England) 27, 2790–2796 (2011). 249. Langmead, B. A tandem simulation framework for predicting mapping quality. Genome Biology 18, 152 (2017). 250. Lin, H.-N. &amp; Hsu, W.-L. Kart: a divide-and-conquer algorithm for NGS read alignment. Bioinformatics (Oxford, England) 33, 2281–2287 (2017). 251. Olson, C. B. et al. 2012 IEEE 20th international symposium on field-programmable custom computing machines. in 161–168 (2012). doi:10.1109/FCCM.2012.36. 252. Chen, P., Wang, C., Li, X. &amp; Zhou, X. Accelerating the next generation long read mapping with the FPGA-based system. IEEE/ACM Transactions on Computational Biology and Bioinformatics 11, 840–852 (2014). 254. Zeni, A. et al. 2020 IEEE international parallel and distributed processing symposium (IPDPS). in 462–471 (2020). doi:10.1109/IPDPS47924.2020.00055. 255. Chaisson, M. J. &amp; Tesler, G. Mapping single molecule sequencing reads using basic local alignment with successive refinement (BLASR): Application and theory. BMC Bioinformatics 13, 238 (2012). 256. Haghshenas, E., Sahinalp, S. C. &amp; Hach, F. lordFAST: sensitive and Fast Alignment Search Tool for LOng noisy Read sequencing Data. Bioinformatics (Oxford, England) 35, 20–27 (2019). 257. Sović, I. et al. Fast and sensitive mapping of nanopore sequencing reads with GraphMap. Nature Communications 7, 11307 (2016). 258. Sedlazeck, F. J. et al. Accurate detection of complex structural variations using single-molecule sequencing. Nature Methods 15, 461–468 (2018). 259. Jain, C., Dilthey, A., Koren, S., Aluru, S. &amp; Phillippy, A. M. A fast approximate algorithm for mapping long reads to large reference databases. Journal of Computational Biology 25, 766–779 (2018). 260. Prodanov, T. &amp; Bansal, V. Sensitive alignment using paralogous sequence variants improves long-read mapping and variant calling in segmental duplications. Nucleic Acids Research 48, e114 (2020). 261. Jain, C., Rhie, A., Hansen, N. F., Koren, S. &amp; Phillippy, A. M. Long-read mapping to repetitive reference sequences using Winnowmap2. Nature Methods 19, 705–710 (2022). 262. Mikheenko, A., Bzikadze, A. V., Gurevich, A., Miga, K. H. &amp; Pevzner, P. A. TandemTools: Mapping long reads and assessing/improving assembly quality in extra-long tandem repeats. Bioinformatics 36, i75–i83 (2020). "],["HPC-paper.html", "Chapter 3 Contribution 1: Improving read alignment by exploring a sequence transformation space Abstract 3.1 Introduction 3.2 Methods 3.3 Datasets and Pipelines 3.4 Results 3.5 Discussion 3.6 Limitations of this study 3.7 Code availability Supplementary information", " Chapter 3 Contribution 1: Improving read alignment by exploring a sequence transformation space Intro to this chapter within the context of the thesis to go here! Recall that: Homopolymers are a problem (c.f. 1.4.2) Mapping is hard (c.f. 2.4) HPC has been used successfully used to improve mapping (c.f. 1.4.3.2) This chapter was written as an article titled: “Mapping-friendly sequence reductions: going beyond homopolymer compression” it was published in DATE HERE, in the iScience proceedings of the RECOMB-SEQ 2022 conference (doi:10.1371/journal.pcbi.1008873). The author list, complete with affiliations is given below: Luc Blassel1,2*, Paul Medvedev3,4,5, Rayan Chikhi1 1 Sequence Bioinformatics, Department of Computational Biology, Institut Pasteur, Paris, France 2 Sorbonne Université, Collège doctoral, Paris, France 3 Department of Computer Science and Engineering, Pennsylvania State University, University Park, Pennsylvania, United States of America 4 Department of Biochemistry and Molecular Biology, Pennsylvania State University, University Park, Pennsylvania, United States of America 5 Center for Computational Biology and Bioinformatics, Pennsylvania State University, University Park, Pennsylvania, United States of America Abstract Sequencing errors continue to pose algorithmic challenges to methods working with sequencing data. One of the simplest and most prevalent techniques for ameliorating the detrimental effects of homopolymer expansion/contraction errors present in long read data is homopolymer compression. It collapses runs of repeated nucleotides, with the intuitive goal of removing some of the sequencing errors and often improving mapping sensitivity. Though our intuitive understanding justifies why homopolymer compression works, it in no way implies that it is the best transformation that can be done. In this paper, we explore if there are transformations that can be applied in the same pre-processing manner as homopolymer compression that would achieve better alignment sensitivity. We introduce a more general framework than homopolymer compression, called mapping-friendly sequence reductions. We transform the reference and the reads using these reductions and then apply an alignment algorithm. We demonstrate that some mapping-friendly sequence reductions lead to improved mapping accuracy, outperforming homopolymer compression. 3.1 Introduction Sequencing errors continue to pose algorithmic challenges to methods working with read data. In short-read technologies, these tend to be substitution errors, but in long reads, these tend to be short insertions and deletions; most common are expansions or contractions of homopolymers (i.e. reporting 3 As instead of 4) 96. Many algorithmic problems, such as alignment, become trivial if not for sequencing errors 125. Error correction can often decrease the error rate but does not eliminate all errors. Most tools therefore incorporate the uncertainty caused by errors into their underlying algorithms. The higher the error rate, the more detrimental its effect on algorithm speed, memory, and accuracy. While the sequencing error rate of any given technology tends to decrease over time, new technologies entering the market typically have high error rates (e.g. Oxford Nanopore Technologies). Finding better ways to cope with sequencing error therefore remains a top priority in bioinformatics. One of the simplest and most prevalent techniques for ameliorating the detrimental effects of homopolymer expansion/contraction errors is homopolymer compression (abbreviated HPC). HPC simply transforms runs of the same nucleotide within a sequence into a single occurrence of that nucleotide. For example, HPC applied to the sequence AAAGGTTA yields the sequence AGTA. To use HPC in an alignment algorithm, one first compresses the reads and the reference, then aligns each compressed read to the compressed reference, and finally reports all alignment locations, converted into the coordinate system of the uncompressed reference. HPC effectively removes homopolymer expansion/contraction errors from the downstream algorithm. Though there is a trade-off with specificity of the alignment (e.g. some of the compressed alignments may not correspond to true alignments) the improvement in mapping sensitivity usually outweighs it 114. The first use of HPC that we are aware of was in 2008 as a pre-processing step for 454 pyrosequencing data in the Celera assembler 110. It is used by a wide range of error-correction algorithms, e.g. for 454 data 263, PacBio data 112, and Oxford Nanopore data 264. HPC is used in alignment, e.g. by the widely used minimap2 aligner 114. HPC is also used in long-read assembly, e.g. HiCanu 107, SMARTdenovo 265, or mdBG 108. HPC is also used for clustering transcriptome reads according to gene family of origin 111. Overall, HPC has been widely used, with demonstrated benefits. Though our intuitive understanding justifies why HPC works, it in no way implies that it is the best transformation that can be done. Are there transformations that can be applied in the same pre-processing way as HPC that would achieve better alignment sensitivity? In this work, we define a more general notion which we call mapping-friendly sequence reductions. In order to efficiently explore the performance of all reductions, we identify two heuristics to reduce the search space of reductions. We then identify a number of mapping-friendly sequence reductions which are likely to yield better mapping performance than HPC. We evaluate them using two mappers (minimap2 and winnowmap2) on three simulated datasets (whole human genome, human centromere, and whole Drosophila genome). We show that some of these functions provide vastly superior performance in terms of correctly placing high mapping quality reads, compared to either HPC or using raw reads. For example, one function increased the mapping accuracy of minimap2 by an order of magnitude over the entire human genome, keeping an identical fraction of reads mapped. We also evaluate whether HPC sensitivity gains continue to outweigh the specificity cost with the advent of telomere-to-telomere assemblies 4. These contain many more low-complexity and/or repeated regions such as centromeres and telomeres. HPC may increase mapping ambiguity in these regions by removing small, distinguishing, differences between repeat instances. Indeed, we find that neither HPC nor our mapping-friendly sequence reductions perform better than mapping raw reads on centromeres, hinting at the importance of preserving all sequence information in repeated regions. 3.2 Methods 3.2.1 Streaming sequence reductions We wish to extend the notion of homopolymer compression to a more general function while maintaining its simplicity. What makes HPC simple is that it can be done in a streaming fashion over the sequence while maintaining only a local context. The algorithm can be viewed simply as scanning a string from left to right and, at each new character, outputting that character if and only if it is different from the previous character. In order to prepare for generalizing this algorithm, let us define a function \\(g^\\text{HPC} : \\Sigma^2\\rightarrow\\Sigma\\cup\\{\\varepsilon\\}\\) where \\(\\Sigma\\) is the DNA alphabet, \\(\\varepsilon\\) is the empty character, and \\[\\begin{align*} &amp; g^\\text{HPC}(x_1\\cdot x_2) = \\begin{cases} x_2 &amp; \\text{if } x_1 \\neq x_2 \\\\ \\varepsilon &amp; \\text{if } x_1 = x_2 \\end{cases} \\end{align*}\\] Now, we can view HPC as sliding a window of size 2 over the sequence and at each new window, applying \\(g^\\text{HPC}\\) to the window and concatenating the output to the growing compressed string. Formally, let \\(x\\) be a string, which we index starting from 1. Then, the HPC transformation is defined as \\[\\begin{equation} f(x) = x[1,\\ell-1]\\cdot g(x[1,\\ell]) \\cdot g(x[2, \\ell+1])\\cdots g(x[|x|-\\ell+1,|x|]) \\tag{3.1} \\end{equation}\\] where \\(\\ell = 2\\) and \\(g=g^\\text{HPC}\\). In other words, \\(f\\) is the concatenation of the first \\(\\ell-1\\) characters of \\(x\\) and the sequence of outputs of \\(g\\) applied to a sliding window of length \\(\\ell\\) over \\(x\\). The core of the transformation is given by \\(g\\) and the size of the context \\(\\ell\\), and \\(f\\) is simply the wrapper for \\(g\\) so that the transformation can be applied to arbitrary length strings. With this view in mind, we can generalize HPC while keeping its simplicity by 1) considering different functions \\(g\\) that can be plugged into Equation (3.1) increasing the context that \\(g\\) uses (i.e. setting \\(\\ell&gt;2\\)). Formally, for a given alphabet \\(\\Sigma\\) and a context size \\(\\ell\\), a function \\(T\\) mapping strings to strings is said to be an order-\\(\\ell\\) Streaming sequence reduction (abbreviated SSR) if there exists some \\(g : \\Sigma^\\ell\\rightarrow\\Sigma\\cup\\{\\varepsilon\\}\\) such that \\(T=f\\). Figure 3.1A shows how an SSR can be visualized as a directed graph. Observe that an order-\\(\\ell\\) SSR is defined by a mapping between \\(|\\Sigma|^\\ell\\) inputs and \\(|\\Sigma| + 1\\) outputs. For example, for \\(\\ell=2\\), there are \\(n=16\\) inputs and \\(k=5\\) outputs. Figure 3.1B visualizes HPC in this way. Figure 3.1: Representing and counting mapping-friendly sequence reductions. A: General representation of an order-2 mapping-friendly sequence reduction as a mapping of 16 input dinucleotides, to the 4 nucleotide outputs and the empty character \\(\\varepsilon\\). B: Homopolymer compression is an order-2 MSR. All dinucleotides except those that contain the same nucleotide twice map to the second nucleotide of the pair. The 4 dinucleotides that are the two same nucleotides map to the empty character \\(\\varepsilon\\). C: Our RC-core-insensitive order-2 MSRs are mappings of the 6 representative dinucleotide inputs to the 4 nucleotide outputs and the empty character \\(\\varepsilon\\). The 4 dinucleotides that are their own reverse complement are always mapped to \\(\\varepsilon\\). The remaining 6 dinucleotides are mapped to the complement of the mapped output of the reverse complement dinucleotide input. For example, if AA is mapped to C, then TT (the reverse complement of AA) will be mapped to G (the complement of C). D: Number of possible MSR mappings under the different restrictions presented in the main text. All mappings from 16 dinucleotide inputs to 5 outputs (as in panel A) are represented by the outermost circle. All RC-core-insensitive mappings (as in panel C) are represented by the medium circle. All RC-core-insensitive mappings with only one representative of each equivalence class are represented by the innermost circle. Since we aim to use SSRs in the context of sequencing data, we need to place additional restrictions on how they handle reverse complements. For example, given two strings \\(x\\) (e.g. a read) and \\(y\\) (e.g. a substring of the reference), a mapper might check if \\(x = RC(y)\\). When strings are pre-processed using an SSR \\(f\\), it will end up checking if \\(f(x) = RC(f(y))\\). However, \\(x = RC(y)\\) only implies that \\(f(x) = f(RC(y))\\). In order to have it also imply that \\(f(x) = RC(f(y))\\), we need \\(f\\) to be commutative with RC, i.e. applying SSR then RC needs to be equivalent to applying RC then SSR. We say that \\(f\\) is RC-insensitive if for all \\(x\\), \\(f(RC(x))= RC(f(x))\\). Observe that HPC is RC-insensitive. 3.2.2 Restricting the space of Streaming sequence reductions To discover SSRs that improve mapping performance, our strategy is to put them all to the test by evaluating the results of an actual mapping software over a simulated test dataset reduced by each SSR. However, even with only \\(16\\) inputs and \\(5\\) outputs, the number of possible \\(g\\) mappings for order-2 SSRs is \\(5^{16}\\approx 1.5\\cdot10^{11}\\), which is prohibitive to enumerate. In this section, we describe two ideas for reducing the space of SSRs that we will test. In subsection 3.2.2.1, we show how the restriction to RC-insensitive mappings can be used to reduce the search space. In subsection 3.2.2.2, we exploit the natural symmetry that arises due to Watson-Crick complements to further restrict the search space. These restrictions reduce the number of order-2 SSRs to only , making it feasible to test all of them. Figure 3.1D shows an overview of our restriction process. 3.2.2.1 Reverse complement-core-insensitive Streaming sequence reductions Consider an SSR defined by a function \\(g\\), as in Equation (3.1). Throughout this paper we will consider SSRs that have a related but weaker property than RC-insensitive. We say that an SSR is RC-core-insensitive if the function \\(g\\) that defines it has the property that for every \\(\\ell\\)-mer\\(x\\) and its reverse complement \\(y\\), we have that either \\(g(x)\\) is the reverse complement of \\(g(y)\\) or \\(g(x) = g(y) = \\varepsilon\\). We will restrict our SSR search space to RC-core-insensitive reductions in order to reduce the number of SSRs we will need to test. Let us consider what this means for the case of \\(\\ell=2\\), which will be the focal point of our experimental analysis. There are 16 \\(\\ell\\)-mers(i.e. dinucleotides) in total. Four of them are their own reverse complement: AT, TA, GC, CG. The RC-core-insensitive restriction forces \\(g\\) to map each of these to \\(\\varepsilon\\), since a single nucleotide output cannot be its own reverse complement. This leaves 12 \\(\\ell\\)-mers, which can be broken down into 6 pairs of reverse complements. For each pair, we can order them in lexicographical order and write them as \\((AA,TT), (AC,GT), (AG,CT), (CA,TG), (CC,GG),\\) and \\((GA,TC)\\). Defining \\(g\\) can then be done by assigning an output nucleotide to the first \\(\\ell\\)-mer in each of these pairs (Figure 3.1C). For example, we can define an SSR by assigning \\(g(AA) = C\\), \\(g(AC) = C\\), \\(g(AG) = A\\), \\(g(CA) = A\\), \\(g(CC) = T\\), and \\(g(GA) = G\\). As an example, let us apply the corresponding SSR to an example read \\(r\\): \\[\\begin{align*} r &amp; = \\text{TAAGTTGA} &amp; f(RC(r)) &amp;=\\color{red}{\\text{T}}\\color{green}{\\text{CACCTG}} \\\\ f(r) &amp; =\\text{TCAGGTG} &amp; RC(f(r)) &amp;=\\;\\;\\;\\color{green}{\\text{CACCTG}}\\color{red}{\\text{A}} \\\\ RC(r) &amp; =\\text{TCAACTTA} &amp; &amp; \\end{align*}\\] Observe that the first \\(\\ell-1\\) nucleotides of \\(r\\) (shown in red) are copied as-is, since we do not apply \\(g\\) on them (as per Equation (3.1)). As we see in this example, this implies that \\(f(RC(r))\\) is not necessarily equal to \\(RC(f(r))\\); thus an RC-core-insensitive SSR is not necessarily an RC-insensitive SSR. However, an RC-core-insensitive SSR has the property that for all strings \\(r\\), we have \\(f(RC(r))[\\ell, |r|]) = RC(f(r))[1, |r| - \\ell + 1]\\). In other words, if we drop the \\(\\ell - 1\\) prefix of \\(f(RC(r))\\) and the \\(\\ell - 1\\) suffix of \\(RC(f(r))\\), then the two strings are equal. Though we no longer have the strict RC-insensitive property, this new property suffices for the purpose of mapping long reads. Since the length of the read sequences will be much greater than \\(\\ell\\) (in our results we will only use \\(\\ell=2\\)), having a mismatch in the first or last nucleotide will be practically inconsequential. It is important to note though that there may be other RC-insensitive functions not generated by this construction. For instance, HPC cannot be derived using this method (as it does not map the di-nucleotides AT,TA,GC and CG to \\(\\varepsilon\\)), and yet it is RC-insensitive. We can count the number of RC-core-insensitive SSRs. Let us define \\(i(\\ell)\\) the number of input assignments necessary to fully determine the RC-core-insensitive SSR; one can think of this as the degrees-of-freedom in choosing \\(g\\). As we showed, for \\(\\ell=2\\), we have \\(i(\\ell)=6\\). The number of RC-core-insensitive SSRs is then \\(5^{i(\\ell)}\\). Therefore, for \\(\\ell=2\\), instead of \\(5^{16}\\) possible mappings we have at most \\(5^{6}\\approx1.5\\cdot10^{4}\\) RC-core-insensitive mappings (Figure 3.1D). For an odd \\(\\ell&gt;2\\), there are no \\(\\ell\\)-mers that are their own reverse complements, hence \\(i(\\ell)=4^\\ell/2\\). If \\(\\ell\\) is even then there are \\(4^{\\ell/2}\\) inputs that are their own reverse complements (i.e. we take all possible sequences of length \\(\\ell/2\\) and reconstruct the other half with reverse complements). Thus, \\(i(\\ell)=(4^\\ell- 4^{\\ell/2})/2\\). 3.2.2.2 Equivalence classes of SSRs When performing preliminary tests, we noticed that swapping \\(A\\leftrightarrow T\\) and/or \\(C\\leftrightarrow G\\), as well as swapping the whole \\(A/T\\) pair with the \\(C/G\\) pair in the SSR outputs did not affect the performance. In other words, we could exchange the letters of the output in a way that preserves the Watson-Crick complementary relation. Intuitively, this can be due to the symmetry induced by reverse complements in nucleic acid strands, though we do not have a more rigorous explanation for this effect. In this section, we will formalize this observation by defining the notion of SSR equivalence. This will reduce the space of SSRs that we will need to consider by allowing us to evaluate only one SSR from each equivalence class. Consider an RC-core-insensitive SSR defined by a function \\(g\\), as in Equation (3.1). An \\(\\ell\\)-mer is canonical if it is the not lexicographically larger than its reverse complement. Let \\(I\\) be the set of all \\(\\ell\\)-mers that are canonical and are not reverse complements of each other. Such an SSR’s dimension \\(k\\) is the number of distinct nucleotides that can be output by \\(g\\) on inputs from \\(I\\) (not counting \\(\\varepsilon\\)). The dimension can range from \\(1\\) to \\(4\\). Next, observe that \\(g\\) maps all elements of \\(I\\) to one of \\(k+ 1\\) values (i.e. \\(\\Sigma \\cup \\varepsilon\\)). The output of \\(g\\) on \\(\\ell\\)-mers not in \\(I\\) is determined by its output on \\(\\ell\\)-mers in \\(I\\), since we assume the SSR is RC-core-insensitive. We can therefore view it as a partition of \\(I\\) into \\(k+1\\) sets \\(S_0\\), …, \\(S_k\\), and then having a function \\(t\\) that is an injection from \\(\\{1, \\ldots, k\\}\\) to \\(\\Sigma\\) that assigns an output letter to each partition. Further, we permanently assign the output letter for \\(S_0\\) to be \\(\\varepsilon\\). Note that while \\(S_0\\) could be empty, \\(S_1, \\ldots, S_k\\) cannot be empty by definition of dimension. For example, the SSR used in Section 3.2.2.1 has dimension four and corresponds to the partition \\(S_0 = \\{\\},S_1=\\{AG,CA\\}\\), \\(S_2=\\{CC\\}\\), \\(S_3=\\{AA,AC\\}\\), \\(S_4=\\{GA\\}\\), and to the injection \\(t(1) = A\\), \\(t(2) =T\\), \\(t(3) = C\\), and \\(t(4) = G\\). Let \\(IsComp(x,y)\\) be a function that returns true if two nucleotides \\(x, y \\in \\Sigma \\cup \\{\\varepsilon\\}\\) are Watson-Crick complements, and false otherwise. Consider two SSRs of dimension \\(k\\) defined by \\(S_0, \\ldots, S_k, t\\) and \\(S&#39;_0, , S&#39;_k, t&#39;\\), respectively. We say that they are equivalent iff all the following conditions are met: \\(S_0 = S&#39;_0\\), there exists a permutation \\(\\pi\\) of \\(\\{1,\\ldots, k\\}\\) such that for all \\(1 \\leq i \\leq k\\), we have \\(S_i = S&#39;_{\\pi(i)}\\), for all \\(1 \\leq i &lt; j \\leq k\\), we have \\(IsComp(t(i), t(j)) = IsComp(t&#39;(\\pi(i)), t&#39;(\\pi(j)))\\). One can verify that this definition is indeed an equivalence relation, i.e. it is reflexive, symmetric, and transitive. Therefore, we can partition the set of all SSRs into equivalence classes based on this equivalence relation. One caveat is that a single SSR defined by a function \\(g\\) may correspond to multiple SSRs of the form \\(S_0,\\ldots,S_k,t\\). However, these multiple SSRs are equivalent, hence the resulting equivalence classes are not affected. Furthermore, we can assume that there is some rule to pick one representative SSR for its equivalence class; the rule itself does not matter in our case. Figure 3.1 shows the equivalence classes for \\(\\ell=2\\), for a fixed partition. An equivalence class can be defined by which pair of classes \\(S_i\\) and \\(S_j\\) have complementary outputs under \\(t\\) and \\(t&#39;\\). Let us define \\(o(k)\\) as the number of equivalence classes for a given partition and a given \\(k\\). Then Figure 3.1 shows that \\(o(1)=1\\), \\(o(2)=2\\) and \\(o(3) = o(4) = 3\\). There are thus only 9 equivalence classes for a given partition. Figure 3.2: MSR equivalence classes for a fixed partition of the inputs. \\(S_0\\) is always assigned \\(\\varepsilon\\), so it is represented by a gray node. A blue link between \\(S_i\\) and an \\(S_j\\) denotes that \\(IsComp(t(i), t(j))=\\text{true}\\). The equivalence classes are determined by the Watson-Crick complementary relationships between the rest of the parts, i.e. by all the possible ways to draw the blue links. 3.2.2.3 Counting the number of restricted SSRs In this section, we derive a formula for the number of restricted MSRs, i.e. MSRs that are RC-core-insensitive and that are representative for their equivalence class. Consider the class of RC-core-insensitive MSRs with dimension \\(k\\). In subsection 3.2.2.1, we derived that the degrees-of-freedom in assigning \\(\\ell\\)-mers to an output is \\(i(\\ell) = 4^\\ell/2\\) if \\(\\ell\\) is odd and \\(i(\\ell) = (4^\\ell - 4^{\\ell / 2})/2\\) if \\(\\ell\\) is even. Let \\(C(\\ell,k)\\) be the number of ways that \\(i(\\ell)\\) \\(\\ell\\)-mers can be partitioned into \\(k+1\\) sets \\(S_0, \\ldots, S_k\\), with \\(S_1, \\ldots, S_k\\) required to be non-empty. Then, in subsection 3.2.2.2, we have derived \\(o(k)\\), the number of MSR equivalence classes for each such partition. The number of restricted MSRs can then be written as \\[\\begin{equation} N(\\ell) = \\sum_{k=1}^{4} C(\\ell, k) \\cdot o(k) \\tag{3.2} \\end{equation}\\] To derive the formula for \\(C(\\ell, k)\\), we first recall that the number of ways to partition \\(n\\) elements into \\(k\\) non-empty sets is known as the Stirling number of the second kind and is denoted by \\(\\tiny\\bigg\\{% \\begin{matrix} n \\\\ k \\end{matrix} \\bigg\\} \\)266. It can be computed using the formula \\[\\begin{equation*} \\bigg\\{% \\begin{matrix} n \\\\ k \\end{matrix} \\bigg\\} = \\frac{1}{k!}\\sum_{i=0}^k(-1)^i\\bigg( \\begin{matrix} k \\\\ i \\end{matrix} \\bigg) (k-i)^n \\end{equation*}\\] Let \\(j\\) be the number of the \\(i(\\ell)\\) \\(\\ell\\)-mers that are assigned to \\(S_0\\). Note this does not include the \\(\\ell\\)-mers that are self-complementary that are forced to be in \\(S_0\\). Let \\(C(\\ell,k,j)\\) be the number of ways that \\(i(\\ell)\\) \\(\\ell\\)-mers can be partitioned into \\(k+1\\) sets \\(S_0, \\ldots, S_k\\), such that \\(j\\) of the \\(\\ell\\)-mers go into \\(|S_0|\\) and \\(S_1, \\ldots, S_k\\) to are non-empty. We need to consider several cases depending on the value of \\(j\\): In the case that \\(j = 0\\), we are partitioning the \\(i(\\ell)\\) inputs among non-empty sets \\(S_1, \\ldots, S_k\\). Then \\(C(\\ell, k,j) = \\tiny{\\bigg\\{% \\begin{matrix} i(\\ell) \\\\ k \\end{matrix} \\bigg\\} }\\). In the case that \\(1 \\leq j \\leq i(\\ell) - k\\), there are \\(\\tiny{\\bigg( \\begin{matrix} i(\\ell) \\\\ j \\end{matrix} \\bigg) }\\) ways to choose which \\(j\\) \\(\\ell\\)-mers are in \\(S_0\\), and \\(\\tiny{\\bigg\\{% \\begin{matrix} i(\\ell) - j \\\\ k \\end{matrix} \\bigg\\} }\\) ways to partition the remaining \\(\\ell\\)-mers into \\(S_1, \\ldots, S_k\\). Hence, \\(C(\\ell, k,j) = \\tiny{\\bigg( \\begin{matrix} i(\\ell) \\\\ j \\end{matrix} \\bigg) }\\tiny{\\bigg\\{% \\begin{matrix} i(\\ell) - j \\\\ k \\end{matrix} \\bigg\\} }\\). In the case that \\(j &gt; i(\\ell) - k\\), it is impossible to partition the remaining \\(k\\) (or fewer) \\(\\ell\\)-mers into \\(S_1, \\ldots, S_k\\) such that the sets are non-empty. Recall that as we assume the dimension is \\(k\\), each set must contain at least one element. Hence, \\(C(\\ell, k,j) = 0\\). Putting this together into Equation (3.2), we get \\[\\begin{equation*} N(\\ell) = \\sum_{k=1}^4 o(k) \\bigg( \\bigg\\{% \\begin{matrix} i(\\ell) \\\\ k \\end{matrix} \\bigg\\} + \\sum_{j=1}^{i(\\ell) - k}\\bigg( \\begin{matrix} i(\\ell) \\\\ j \\end{matrix} \\bigg) \\bigg\\{% \\begin{matrix} i(\\ell)-j \\\\ k \\end{matrix} \\bigg\\} \\bigg) \\end{equation*}\\] For \\(\\ell=2\\), we have \\(N(2)=2,135\\) restricted MSRs, which is several orders of magnitude smaller than the initial \\(5^{16}\\) possible MSRs and allows us to test the performance of all of them. for order-3 MSRs we get \\(N(3)=2.9\\cdot10^{21}\\) which much smaller than the full search space of \\(5^{4^3}\\approx5.4\\cdot10^{44}\\), for order-4 MSRs we get a similar reduction in search space with \\(N(4)=9.4\\cdot10^{84}\\) as opposed to the full search space of \\(5^{4^4}\\approx8.6\\cdot10^{178}\\). For these higher order MSRs, although the restricted search space is much smaller than the full naive one, it is still too large to exhaustively search. 3.3 Datasets and Pipelines 3.3.1 Datasets The following three reference sequences were used for evaluation: Whole human genome: This reference sequence is a whole genome assembly of the CHM13hTERT human cell line by the Telomere-to-Telomere consortium@ 4. We used the 1.1 assembly release (Genbank Assembly ID GCA_009914755.3). Whole Drosophila genome: This reference sequence is a whole genome assembly of a Drosophila melanogaster, release 6.35 (Genbank Assembly ID GCA_000001215.4)267. Synthetic centromeric sequence: This sequence was obtained from the TandemTools mapper test data262. It is a simulated centromeric sequence that is inherently difficult to map reads to. Appendix A.1 describes how it was constructed. 3.3.2 Simulation pipeline Given a reference sequence, simulated reads were obtained using nanosim268 with the human_NA12878_DNA_FAB49712_guppy_flipflop pre-trained model, mimicking sequencing with an Oxford Nanopore instrument. The number of simulated reads was chosen to obtain a theoretical coverage of whole genomes around 1.5x, this resulted in simulating \\(\\approx 6.6\\cdot10^5\\) reads for the whole human genome and \\(\\approx 2.6\\cdot10^4\\) reads for the whole Drosophila genome. Since the centromeric sequence is very short, we aimed for a theoretical coverage of 100x which resulted in \\(\\approx 1.3\\cdot10^4\\) simulated reads. For each evaluated SSR, the reads as well as the reference sequence were reduced by applying the SSR to them. The reduced reads were then mapped to the reduced reference using minimap2114 with the map-ont preset and the -c flag to generate precise alignments. Although HPC is an option in minimap2 we do not use it and we evaluate HPC as any of the other SSRs by transforming the reference and reads prior to mapping. The starting coordinates of the reduced reads on the reduced reference were updated to reflect deletions incurred by the reduction process. The mapping results with translated coordinates were filtered to keep only the primary alignments. This process was done for each of our 2135 SSRs as well as with HPC and the original untransformed reads (denoted as raw). 3.3.3 Evaluation pipeline We use two metrics to evaluate the quality of a mapping of a simulated read set. The first is the fraction of reads mapped, i.e. that have at least one alignment. The second is the error rate, which is the fraction of mapped reads that have an incorrect location as determined by paftools mapeval114. This tool considers a read as correctly mapped if the intersection between its true interval of origin, and the interval where it has been mapped to, is at least 10% of the union of both intervals. Furthermore, we measure the error rate as a function of a given mapping quality threshold. Mapping quality (abbreviated mapq) is a metric reported by the aligner that indicates its confidence in read placement; the highest value (60) indicates that the mapping location is likely correct and unique with high probability, and a low value (e.g. 0) indicates that the read has multiple equally likely candidate mappings and that the reported location cannot be trusted. The error rate at a mapq threshold \\(t\\) is then defined as the error rate of reads whose mapping quality is \\(t\\) or above. For example, the error rate at \\(t=0\\) is the error rate of the whole read set, while the error rate at \\(t=60\\) is the error rate of only the most confident read mappings. Observe that the error rate decreases as \\(t\\) increases. 3.4 Results 3.4.1 Selection of mapping-friendly sequence reductions We selected a set of “promising” SSRs starting from all of the SSRs enumerated in Section 3.2.2, that we call mapping-friendly sequence reductions (abbreviated MSR). The selection was performed by considering an independent read set of lower (0.5x) coverage, simulated from the whole human genome reference. This dataset is separate from the ones used for evaluation. Note that overfitting MSRs to a particular genome is acceptable in applications where a custom MSR can be used for each genome. Yet in this work, the same set of selected MSRs will be used across all genomes. Figure 3.3: Illustration of how a respective mapq threshold is chosen for each of our evaluated MSRs. The orange dot shows the error rate and fraction of reads mapped for HPC at mapq threshold 60. Anything below and to the right of this point is strictly better than HPC 60, i.e. it has both a lower error rate and higher fraction of reads mapped. If an evaluated MSR does not pass through this region, then it is discarded from further consideration. In the figure, the blue MSR does pass through this region, indicating that it is better than HPC 60. We identify the leftmost point (marked as a blue dot) and use the mapq threshold at that point as the respective threshold. For each evaluated SSR, we selected, if it exists, the highest mapq threshold for which the mapped read fraction is higher and the error rate is lower than HPC at mapq 60 (\\(0.93\\) and \\(2.1\\cdot 10^{-3}\\) respectively). Figure 3.3 illustrates the idea. Then we identified the 20 SSRs that have the highest fraction of reads mapped at their respective thresholds. Similarly we identified the 20 SSRs with the lowest error rate. Finally we select the 20 SSRs that have the higest percentage of thresholds “better” than HPC at mapq 60; i.e. the number of mapq thresholds for which the SSR has both a higher fraction of reads mapped and lower error rate than HPC at a mapq threshold of 60, divided by the total number of thresholds (=60). The union of these 3 sets of 20 SSRs resulted in a set of 58 “promising” MSRs. Furthermore, we will highlight three MSRs that are “best in their category”, i.e. MSR\\(_{\\text{F}}\\): The MSR with the highest fraction of mapped reads at a mapq threshold of 0. MSR\\(_{\\text{E}}\\): The MSR with the lowest error rate at its respective mapq threshold. MSR\\(_{\\text{P}}\\): The MSR with the highest percentage of mapq thresholds for which it is “better” than HPC at mapq 60. Figure 3.4 shows the actual functions MSR\\(_{\\text{F}}\\), MSR\\(_{\\text{E}}\\), MSR\\(_{\\text{P}}\\). An intriguing property is that they output predominantly As and Ts, with MSR\\(_{\\text{P}}\\) assigning 2 input pairs to the G/C output whereas MSR\\(_{\\text{E}}\\) and MSR\\(_{\\text{F}}\\) assign only one. Additionally, MSR\\(_{\\text{E}}\\) and MSR\\(_{\\text{P}}\\) both assign the {CC,GG} input pair to the deletion output \\(\\varepsilon\\) removing any information corresponding to repetitions of either G or C from the reduced sequence. Overall this means the reduced sequences are much more AT-rich than their raw counterparts, but somehow information pertinent to mapping is retained. Figure 3.4: Graph representations of our highlighted MSRs: MSR\\(_{\\text{E}}\\), MSR\\(_{\\text{F}}\\), and MSR\\(_{\\text{P}}\\). MSR\\(_{\\text{E}}\\) has the lowest error rate of among MSRs at the highest mapq threshold for which it performs better than HPC at mapq 60, MSR\\(_{\\text{F}}\\) has the highest fraction of reads mapped at mapq 60 and MSR\\(_{\\text{P}}\\) has the highest percentage of mapq thresholds for which it outperforms HPC at mapq 60. The grayed out nodes represent the reverse complement of input dinucleotides and outputs, as in Figure 3.1C. For example for MSR\\(_{\\text{E}}\\), AA is mapped to T, so TT is mapped to A. 3.4.2 Mapping-friendly sequence reductions lead to lower mapping errors on whole genomes Across the entire human genome, at high mapping quality thresholds (above 50), our selected 58 MSRs generally have lower mapping error rate than HPC and raw Figure 3.5A and Table 3.1. This is not surprising, as we selected those MSRs partly on the criteria of outperforming HPC at mapq 60; however, it does demonstrate that we did not overfit to the simulated reads used to select the MSRs. Figure 3.5: Performance of our 58 selected mapping-friendly sequence reductions across genomes on reads simulated by nanosim Panel A) shows the whole human genome assembly, B) the subset of mapped reads from panel B that originate from repetitive regions, and C) the “TandemTools” synthetic centromeric reference sequence. We highlighted the best-performing mapping-friendly sequence reductions as MSR E, F and P, respectively in terms of cumulative mapeval error rate, fraction of reads mapped, and percentage of better thresholds than HPC. Each point on a line represents, from left to right, the mapping quality thresholds 60, 50, 40, 30, 20, 10 and 0. For the first point of each line, only reads of mapping quality 60 are considered, and the y value represents the rate of these reads that are not correctly mapped, the x value represents the fraction of simulated reads that are mapped at this threshold. The next point is computed for all reads of mapping quality \\(\\geq50\\), etc. The rightmost point on any curve represents the mapping error rate and the fraction of mapped reads for all primary alignments. The x-axes are clipped for lower mapped read fractions to better differentiate HPC, raw and MSRs E, F and P. Mapping quality is only an indication from the aligner to estimate whether a read mapping is correct, and according to Figure 3.5A the mapping error rate of most MSRs is low even for mapping qualities lower than 60. Therefore, we choose to compare MSR-mapped reads with lower mapping qualities against raw or HPC-mapped reads with the highest (60) mapping quality (which is the mapping quality thresholds most practitioners would use by default). Table 3.1 shows that the three selected MSRs outperform both HPC and raw in terms of mapping error rate, with similar fractions of mapped reads overall. For example on the human genome, at mapq\\(\\geq50\\), MSR\\(_{\\text{F}}\\), MSR\\(_{\\text{P}}\\) and MSR\\(_{\\text{E}}\\) all map more reads than either HPC or raw at mapq=60, and MSR\\(_{\\text{P}}\\) and MSR\\(_{\\text{E}}\\) also have error rates an order of magnitude lower than either HPC or raw. To evaluate the robustness of MSRs E, F and P we investigated the impact of mapping to a different organism or using another mapper. To this effect we repeated the evaluation pipeline in these different settings: Using the Drosophila melanogaster whole genome assembly as reference and mapping with minimap2 Using the whole human genome assembly as reference but mapping with winnowmap2(version 2.02)115. The same options as minimap2 were used, and k-mers were counted using meryl269, considering the top \\(0.02\\%\\) as repetitive (as suggested by the winnowmap2 usage guide). MSRs E, F and P behave very similarly in both of these contexts compared to HPC/raw: by selecting mapped reads with mapq\\(\\geq\\) 50 for the three MSRs we obtain a similar fraction of mapped reads with much lower error rates (Table 3.1). A noticeable exception is the winnowmap2 experiment, where a larger fraction of raw reads are mapped than any other MSR and even HPC. A more detailed results table can be found in Table A.1, and a graph of MSR performance on the whole Drosophila genome in Figure A.7. As Figure A.7 shows, we also evaluated these MSRs on a whole Escherichia coli (Genbank ID U00096.2) genome, where we observed similar results, albeit the best MSRs do not seem to be one of our three candidates. This might mean that specific MSRs are more suited to particular types of genomes. .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-b784015a{table-layout:auto;width:100%;}.cl-b77d7538{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b77d754c{font-family:'Helvetica';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;top:3.3pt;}.cl-b77d7556{font-family:'Helvetica';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b77d8726{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b77d8730{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b77dd3f2{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd410{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd411{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd41a{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd41b{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd424{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd425{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd42e{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b77dd42f{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelmapqWhole human genome (minimap2)Whole human genome (winnowmap2)Whole Drosophila genome (minimap2)fractionerrorfractionerrorfractionerrorHPC600.935 +0%1.85e-03 +0%0.894 +0%1.43e-03 +0%0.957 +0%2.27e-03 +0%raw600.921 -1%1.86e-03 +0%0.932 +4%1.75e-03 +23%0.958 +0%2.27e-03 -0%MSRF500.938 +0%1.29e-03 -30%0.886 -1%3.82e-04 -73%0.960 +0%1.37e-03 -39%MSRE500.936 +0%1.17e-04 -94%0.820 -8%8.93e-05 -94%0.954 -0%0 -100%MSRP500.938 0%4.15e-04 -78%0.845 -6%1.14e-04 -92%0.957 +0%8.11e-04 -64% Table 3.1: Performance of MSRs, HPC, and raw mappings across different mappers and reference sequences. For each reference sequence and mapper pair, we report the fraction of reads mapped (“fraction” columns), the paftools mapeval mapping error rate (“error” columns). The percentage differences are computed w.r.t to the respective HPC value. For HPC and the raw these metrics were obtained for alignments of mapping quality of 60. For MSRs E, F and P these metrics were obtained for alignments of mapping quality \\(\\geq 50\\). 3.4.3 Mapping-friendly sequence reductions increase mapping quality on repeated regions of the human genome To evaluate the performance of our MSRs specifically on repeats, we extracted the simulated reads for which an overlap with repeated region of the whole human genome was greater than \\(50\\%\\) of the read length. We then evaluated the MSRs on these reads only. Repeated regions were obtained from https://t2t.gi.ucsc.edu/chm13/hub/t2t-chm13-v1.1/rmsk/rmsk.bigBed. We obtained similar results as on the whole human genome, with MSRs E, F and P performing better than HPC at mapq 50 (Figure 3.5B). At a mapq threshold of 50, the error rate is \\(53\\%\\), \\(31\\%\\), and \\(39\\%\\) lower than HPC at mapq 60 for MSRs E, F and P respectively, while the fraction of mapped reads remains slightly higher. At mapq=60, raw has a error rate \\(40\\%\\) lower than HPC but it the mapped fraction is also \\(17\\%\\) lower. 3.4.4 Raw mapping improves upon HPC on centromeric regions On the “TandemTools” centromeric reference, HPC consistently maps a smaller fraction of reads than raw, across all mapping quality thresholds (Figure 3.5C). Additionally, the error rate for raw is often inferior to that of HPC. The same is true for our selected MSRs: most of them have comparable performance to HPC, but none of them outperform raw mapping (Figure 3.5C). We conjecture this is due to the highly repetitive nature of centromeres. HPC likely removes small unique repetitions in the reads and the reference that might allow mappers to better match reads to a particular occurrence a centromeric pattern. Mapping raw reads on the other hand preserves all bases in the read and better differentiates repeats. Therefore it seems inadvisable to use HPC when mapping reads to highly repetitive regions of a genome, such as a centromere. 3.4.5 Positions of incorrectly mapped reads across the entire human genome To study how MSRs E, F, and P improve over HPC and raw mapping in terms of error rate on the human genome, we selected all the primary alignments that paftools mapeval reported as incorrectly mapped. For HPC and raw, only alignments of mapping quality equal to 60 were considered. To report a comparable fraction of aligned reads, we selected alignments of mapping quality \\(\\geq 50\\) for MSRs. We then reported the origin of those incorrectly mapped reads on whole human genome reference, shown per-chromosome in Appendix A.1. We observe that erroneously mapped reads are not only those from centromeres, and instead originate from many other genomic regions. MSRs E and P have a markedly lower number of these incorrect mappings than either HPC or raw, with 1118 incorrect mappings for raw mappings and 1130 for HPC as opposed to 549, 970 and 361 for MSRs E, F and P respectively. This stays true even for difficult regions of the genome such as chromosome X, where raw and HPC have 70 incorrect mappings as opposed MSRs E and P that have 39, and 27 errors respectively. We also investigated where all simulated reads were mapped on the whole human genome assembly, for raw, HPC and MSRs E,F and P in Figures A.2 to A.6. The correctly mapped reads are, as expected, evenly distributed along each chromosome. The incorrectly mapped reads are however unevenly distributed. For most chromosomes there is a sharp peak in the distribution of incorrectly mapped reads, located at the position of the centromere. For the acrocentric chromosomes, there is a second peak corresponding to the “stalk” satellite region, with an enrichment of incorrectly mapped reads. This is expected since both centromeres and “stalks” are repetitive regions which are a challenge for mapping. For chromosomes 1, 9 and 16 however the majority of incorrectly mapped reads originate in repeated regions just after the centromere. 3.5 Discussion We have introduced the concept of mapping-friendly sequence reduction and shown that it improves the accuracy of the popular mapping tool minimap2 on simulated Oxford Nanopore long reads. We focused on reads with high mapping quality (50-60), as it is a common practice to disregard reads with low mapping quality 260,270,271. However across all mapped reads (mapq \\(\\geq 0\\)), HPC and our MSRs have lower mapping accuracies than raw reads, consistent with the recommendation made in minimap2 to not apply HPC to ONT data. Despite this, we newly show the benefit of using HPC (and our MSRs) with minimap2 on ONT data when focusing on high mapping quality reads. Furthermore MSRs provide a higher fraction of high-mapq reads compared to both raw and HPC, as shown on the human and Drosophila genomes. A natural future direction is to also test whether our MSRs perform well on mapping Pacific Biosciences long reads. Furthermore, it is important to highlight that our sampling of MSRs is incomplete. This is of course due to only looking at functions having \\(\\ell=2\\), but also to the operational definition of RC-core-insensitive functions, and finally to taking representatives of equivalence classes. An interesting future direction would consist in exploring other families of MSRs, especially those that would include HPC and/or close variations of it. Additionally, our analyses suggests to not perform HPC on centromeres and other repeated regions, hinting at applying sequence transformations to only some parts of the genomes. We leave this direction for future work. 3.6 Limitations of this study Our proposed MSRs improve upon HPC at mapq 60, both in terms of fraction of reads mapped and error rate, on whole human and Drosophila melanogaster genomes. We chose these sequences because they were from organisms that we deemed different enough, however it would be interesting to verify if our proposed MSRs are still advantageous on very different organisms, e.g. more bacterial or viral genomes. This would allow us to assess the generalizability of our proposed MSRs. We made the choice of using simulated data to be able to compute a mapping error rate. Some metrics, such as fraction of reads mapped might still be informative with regards to the mapping performance benefits of MSRs, even on real data. Evaluating the MSRs on real data might be more challenging but would offer insight into real-world usage of such pre-processing transformations. Finally, the restrictions we imposed to define RC-core-insensitive MSRs though intuitively understandable are somewhat arbitrary, so exploring a larger search space might be beneficial. Alternatively for higher order MSRs, even with our restrictions, the search spaces remain much too large to be explored exhaustively. To mitigate this problem, either further restrictions need to be found, or an alternative, optimization-based exploration method should be implemented. 3.7 Code availability The scripts and pipelines used to obtain the results, as well as do the analysis and figures are available in an online repository at github.com/lucblassel/MSR_discovery Supplementary information Supporting Information can be found in Appendix A References 4. Nurk, S. et al. The complete sequence of a human genome. Science 376, 44–53 (2022). 96. Dohm, J. C., Peters, P., Stralis-Pavese, N. &amp; Himmelbauer, H. Benchmarking of long-read correction methods. NAR Genomics and Bioinformatics 2, (2020). 107. Nurk, S. et al. HiCanu: Accurate assembly of segmental duplications, satellites, and allelic variants from high-fidelity long reads. Genome Res. 30, 1291–1305 (2020). 108. Ekim, B., Berger, B. &amp; Chikhi, R. Minimizer-space de Bruijn graphs: Whole-genome assembly of long reads in minutes on a personal computer. Cell Systems 12, 958–968.e6 (2021). 110. Miller, J. R. et al. Aggressive assembly of pyrosequencing reads with mates. Bioinformatics 24, 2818–2824 (2008). 111. Sahlin, K. &amp; Medvedev, P. De Novo Clustering of Long-Read Transcriptome Data Using a Greedy, Quality Value-Based Algorithm. Journal of Computational Biology 27, 472–484 (2020). 112. Au, K. F., Underwood, J. G., Lee, L. &amp; Wong, W. H. Improving PacBio Long Read Accuracy by Short Read Alignment. PLOS ONE 7, e46679 (2012). 114. Li, H. Minimap2: Pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018). 115. Jain, C. et al. Weighted minimizer sampling improves long read mapping. Bioinformatics 36, i111–i118 (2020). 125. Gusfield, D. Algorithms on strings, trees, and sequences: Computer science and computational biology. (Cambridge University Press, 1997). doi:10.1017/CBO9780511574931. 260. Prodanov, T. &amp; Bansal, V. Sensitive alignment using paralogous sequence variants improves long-read mapping and variant calling in segmental duplications. Nucleic Acids Research 48, e114 (2020). 262. Mikheenko, A., Bzikadze, A. V., Gurevich, A., Miga, K. H. &amp; Pevzner, P. A. TandemTools: Mapping long reads and assessing/improving assembly quality in extra-long tandem repeats. Bioinformatics 36, i75–i83 (2020). 263. Bragg, L., Stone, G., Imelfort, M., Hugenholtz, P. &amp; Tyson, G. W. Fast, accurate error-correction of amplicon pyrosequences using Acacia. Nat Methods 9, 425–426 (2012). 264. Sahlin, K. &amp; Medvedev, P. Error correction enables use of Oxford Nanopore technology for reference-free transcriptome analysis. Nat Commun 12, 2 (2021). 265. Liu, H. et al. SMARTdenovo: A de novo assembler using long noisy reads. Gigabyte 2021, 1–9 (2021). 266. Graham, R. L., Knuth, D. E. &amp; Patashnik, O. Concrete mathematics: A foundation for computer science. (Addison-Wesley, 1994). 267. Adams, M. D. et al. The genome sequence of Drosophila melanogaster. Science 287, 2185–2195 (2000). 268. Yang, C., Chu, J., Warren, R. L. &amp; Birol, I. NanoSim: Nanopore sequence read simulator based on statistical characterization. GigaScience 6, (2017). 269. Rhie, A., Walenz, B. P., Koren, S. &amp; Phillippy, A. M. Merqury: Reference-free quality, completeness, and phasing assessment for genome assemblies. Genome Biology 21, 245 (2020). 270. Li, H. New strategies to improve Minimap2 alignment accuracy. https://arxiv.org/abs/2108.03515 (2021). 271. Li, H. et al. A synthetic-diploid benchmark for accurate variant-calling evaluation. Nat Methods 15, 595–597 (2018). "],["learning-from-alignments.html", "Chapter 4 Learning from alignments 4.1 Alignments are a rich source of information 4.2 Preprocessing the alignment for machine learning 4.3 How to learn from ALNs", " Chapter 4 Learning from alignments 4.1 Alignments are a rich source of information 4.1.1 Pairwise alns we can compare sequences and say if an organism, or in the case of mapping get an idea of where on the genome we are sequencing 4.1.2 MSA Here we have richer 4.1.2.1 Clustering Phylogenetic trees Evolutionary inference Protein structure prediction 4.1.2.2 ML Alphafold Predict location / function predict characteristics i.e. resistance, … 4.2 Preprocessing the alignment for machine learning In order to do some learning we need to have the data in digestible form 4.2.1 Embedding the alignment We need a way to represent, the position and the character in a sequence 4.2.1.1 Physico-chemical embeddings AAIndex, or other embeddings, we add extra info, but we also make a string choice when deciding what features to add 4.2.1.2 Generalistic categorical embeddings One-Hot, etc…, easily interpretable… 4.2.1.3 Learned embeddings language models, transformers, etc… Powerful but hard to interpret what the model actually learns. i.e. “black box” 4.2.2 Choosing a learning target Of course one we have the data in digestible form we need an objective, a goal and once again a multitude 4.2.2.1 Regression Either resistance level, IC50, … 4.2.2.2 Classification Resistant or not, compartments in the cell, … 4.2.2.3 Task-based… end-to-end training like aligning sequences, this is harder because it requires developing a custom differentiable scoring function based on the task. 4.3 How to learn from ALNs 4.3.1 Tests and statistical learning correlation Fisher Multiple testing ? 4.3.2 Taking interactions into account Regressions w/ regularization RF … 4.3.3 Deep Learning Steiner et al… plenty of other refs (DRMs + ML section from our minireview in Current opinions in virology 2021) "],["viruses-hiv-and-drug-resistance.html", "Chapter 5 Viruses, HIV and drug resistance 5.1 What are viruses ? 5.2 Getting to know HIV 5.3 Drug resistance in HIV", " Chapter 5 Viruses, HIV and drug resistance 5.1 What are viruses ? Viruses occupy a strange place in the tree of life, with many debating if they are actually alive or not. André Lwoff gave what is probably the most fitting definition: “viruses are viruses”272. Despite this ambiguity, viruses share some common characteristics which allow us to define them as intracellular parasites273: Viruses have some type of genetic information, contained in either DNA or RNA This genetic information is protected by some form of envelope They use the cellular machinery of host cells to make copies of themselves. While we all know that viruses can be pathogenic and dangerous (the recent example of SARS-CoV2 springs to mind), that is not necessarily the case and some viruses like GBV-C274 and certain strains of H5N1 Influenza275 are non pathogenic and essentially harmless. Viruses have been discovered for all three domains of life: Eukaryota, Bacteria and Archea. In Eukaryota many viruses have been discovered for animals (both vertebrate276 and invertebrate277), plants278, protozoa279, chromista280 and even fungi281. Bacterial viruses known as phages have been known to exists since the beginning of the 20th century282,283. These bacteriophages are being considered as a therapeutic alternative to antibiotics284,285 which could help with multi-drug-resistant bacterial pathogens. Archea are also known to have their own viral infections286,287. Strangely even viruses of viruses seem to exist such as the plant satellite virus288,289 or hepatitis delta virus290,291. These “viroids” do not infect viral hosts per se but they cannot replicate on their own. Replication must happen during co-infection with a larger virus. More recently, true viruses of viruses called virophages have been discovered. These virophages like sputnik292 or zamilon293 specifically infect giant viruses. There is a huge diversity of viruses affecting all types of life, and new viruses are being discovered all the time294. This diversity hints at a rich and long evolutionary history. When and where viruses originated is still under study295,296 and we might never know how they emerged, it is however believed that they may have played an important role in the emergence of eukaryotic cells297. This co-evolution between virus and host cell shows a strong link between the two organisms and some parts of the human genome are likely of ancient viral origin298,299. It has been estimated that 1% to 8% of the human genome are endogenous retroviral sequences300,301. The rich diversity of viruses is reflected in the variety of genetic information support, replication strategy, physical and genomic size, as well as shape. The differences in genetic information support and replication strategy form the basis of the Baltimore virus classification system302 , still used today303 to classify virus lineages. As stated above all viruses have some genetic information, this information is stored either as DNA or as RNA, which is the molecule of choice for 70% of human pathogenic viruses304 (HIV and SARS-CoV 2 are RNA viruses). For DNA viruses, the molecule can be double-stranded as for Herpesvirus305,306, single-stranded like in the case of Papillomavirus307 or even circular in the case of the Hepatitis B virus308. This molecular diversity is also present in RNA viruses where the RNA molecule can be double-stranded like for Rotavirus309, or single-stranded. Furthermore, for single-stranded RNA viruses the strand can either be positive (i.e. can be directly translated into a protein) like Hepatitis C virus310 or Poliovirus311,312; conversely there are negative-strand RNA viruses, for which the complementary strand of RNA must be synthesized before translation into a protein, such as the Influenza or Measles viruses313. This diversity in genetic information support implies a necessary diversity in replication strategy. The main replication strategies are as follows314: The RNA molecule is directly copied as RNA. This is the strategy followed by single-stranded RNA coronaviruses315, Dengue viruses316 or Hepatitis C virus317. The DNA molecule is directly replicated as DNA. this can happen for both single-stranded DNA viruses like Papillomavirus318and double-stranded DNA viruses like Herpes simplex virus319. The DNA molecule is replicated by going through an RNA intermediary like Hepatitis B virus320. The RNA molecule is replicated by going through a DNA intermediary. This strategy is used by retroviruses that integrate this viral DNA intermediary into the host DNA, like HIV-1 (see Section 5.2.2). Finally, the genetic diversity of viruses is reflected in their physical characteristics: viruses come in all shapes and sizes. Physical size range from 17nm for plant satellite viruses321 to the giant 400nm Mimivirus322. Genomic size is also quite variable, there is a stark contrast between the 860 bp Circovirus SFBeef and the 2.5 Mbp Pandoravirus salinus genomes323. Viruses come in a variety of shapes324: icosahedral for HIV, helical for the tobacco mosaic virus or a distinctive head-tail shape for bacteriophages. Although there are a large number of viruses, and many of them are of great importance for human health, we will now focus on one virus of particular importance: Human Immunodeficiency Virus otherwise known as HIV. 5.2 Getting to know HIV 5.2.1 Quick Presentation of HIV HIV is a single-stranded RNA retrovirus that is responsible for the Acquired Immune Deficiency Syndrome (AIDS) pandemic that has been around for the last couple decades. This virus is transmitted through sexual contact or through blood. Sexual activity is the largest transmission factor followed by intravenous drug use325,326. The HIV infects cells of the host immune system, specifically CD4 T-cell lymphocytes and destroys them due to it’s replication process327. CD4 T-cells are an essential part of the immune system response helping fight against infection in humans. An HIV infection typically start with an asymptomatic phase that can last years, followed by a growth in viral replication leading to a decrease in CD4 cells which progresses into AIDS328. During AIDS, when the CD4 cell count is low enough opportunistic diseases such as pneumonia or tuberculosis329 can easily infect the host, leading to death when the immune system is weak enough. The HIV/AIDS is one of the deadliest pandemics in history, estimated to have lead to the death of 36 million people330. In 2010331 approximately 33 million people were infected with HIV, 2.6 million of which were due to new infections, and 1.8 million died of AIDS. Most of the new infections happened in economically developing regions of the world, 70% of them coming from sub-Saharan Africa331. As of 2020, these numbers have decreased with “only” 1.5 million new infections and 680,000 AIDS deaths, which is encouraging from a public health perspective. The HIV-1 virus was discovered simultaneously in 1983 by Françoise Barré-Sinoussi, Luc Montagnier332 and Robert Gallo333. There exists a second HIV-2 virus discovered shortly after HIV-1334, it is however less transmissible than HIV-1 which is largely responsible for the global HIV/AIDS pandemic335. In Africa in 2006, HIV-1 infections were rising where HIV-2 were declining336. While both viruses are of zoonotic origin, from transmissions of Simian Immunodeficiency Virus (SIV) from primates to humans. HIV-1 most likely originates from an SIV present in chimpanzees337–339, and HIV-2 from an SIV present in Sooty mangabeys340–342. Several independent such transmissions have resulted in 4 lineages of HIV-1 labeled groups M, N, O and P343 (similarly HIV-2 is split into groups A to H also resulting from independent zoonotic transmissions). While Groups N and P have been identified in only a handful of individuals in Cameroon , and group O is estimated to a few thousand cases in western Africa, the majority of the pandemic is due to viruses from group M. The most most recent common ancestor, i.e. the putative virus that founded group M, is estimated to have originated in what is now the Democratic Republic of Congo344–346 at some point between 1910 and 1931344,347,348. Group M is further subdivided into 9 subtypes each with distinct genetic characteristics, labeled A to K339,349. Like in many viruses350, when 2 genetically different strains of HIV co-infect a single host there is a risk genetic recombination leading to a new strain351. During recombination, a new genome is formed from parts of the original genomes. This can lead to new strains that can spread and form lineages of their own. HIV strains resulting from recombination are called Cirulating Recombinant Forms (CRFs). There are currently 118 identifed HIV-1 CRFs in the Los Alamos National Laboratory HIV sequence database352 (1 for HIV-2). There also exist many unique recombinant forms (URFs). Recombination can be particulary bothersome, complicating evolutionary analyses353, or facilitating drug resistance and hindering vaccine development354. While subtype C represented almost half of global infections from 2004 to 2007, subtype B is the majority subtype in richer countries of North America and Western Europe355 where sequencing efforts are more common. This accounts for an over-representation of subtype B sequences in public databases such as the Los Alamos sequence database where 54% of sequences are of the B subtype and only 15% are C356. 5.2.2 The replication cycle of HIV The viruses replication cycle and its immune-cell host specificity are what makes it particularly dangerous. This replication cycle can broadly be categorized into 9 separate steps357,358 shown in Figure 5.1. An HIV virion binds itself to the CD4 host cell through membrane proteins. The virion envelope and host cell membrane fuse together allowing the viral genetic material and proteins to enter the host cell. The viral RNA is reverse-transcripted into viral DNA The viral DNA is integrated into the host cell genome The integrated viral DNA is transcribed by the host cell machinery into multiple copies of viral RNA The viral RNA is translated into immature viral polyproteins The viral polyproteins are cleaved to form individual viral proteins. The newly synthesized viral RNA and viral proteins gather around the host-cell membrane which starts budding to create a new virion Once the budding is complete, the virion is released from the host cell and matures before being able to infect other CD4 cells and replicate again. The successive infection of CD4 cells by HIV virions leads to cellular death due to inflammatory response and/or activation of apoptosis359,360. The gradual depletion of CD4 cells in the infected individual’s body lead to the suppression of the immune system, eventually leading to AIDS. Figure 5.1: Main steps of HIV-1 replication cycle The HIV virion contains viral RNA and three essential proteins: Reverse Transcriptase (RT) represented in red, Integrase (IN) represented in cyan and Protease (PR) represented in yellow. 5.2.3 Genetics of HIV The replication cycle described in Section 5.2.2 is made possible by the 15 proteins of HIV. These proteins are coded by 9 separate genes361. An overview of the HIV proteins, their structure and localization within the viral particle can be seen in Figure 5.2. The HIV genome is made up of three main genes each coding for polyproteins and six genes coding for proteins with regulatory and accessory roles. The three polyproteins correspond to long chains of amino acids which are subsequently cleaved at specific positions to result in separate viral proteins. The gag (“group-specific-antigen”) gene codes for the Gag polyprotein which, once cleaved, results in four proteins with mainly structural roles: The Matrix protein (MA or p17) lines the internal surface if the virion membrane maintaining the shape and structural integrity of the virion. The Capsid protein (CA or p24) forms an inner core (the capsid) inside the virion around the viral RNA. It helps protect the viral genetic information. The Nucleocapsid protein (NC or p7) binds with the viral RNA inside the capsid, stabilizing the molecule and further protecting the genetic information. The p6 protein is a small, largely unstructured protein362 that is suspected of playing a role in virion budding and release from the host cell at the end of the replication cycle363,364. The pol (“polymerase”) gene coding for the Pol polyprotein. After cleaving this results in the three essential viral enzymes at the heart of the replication cycle: The Protease (PR) is responsible for cleaving the Gag, Pol and Env polyproteins to get the individual viral proteins. Without it the individual viral proteins cannot come into being and therefore cannot function, stopping viral replication. The Reverse Transcriptase (RT or p51/p66) is responsible for synthesizing viral DNA from the viral RNA template contained in the virion. This is the first step in hijacking the cellular machinery for replication. Without viral DNA, HIV replication is impossible. The Integrase (IN) is responsible for integrating the viral DNA produced by RT in to the host cell DNA. Once the viral DNA is inside the host genome it can be transcribed and then translated (as described in Section 1.1) to produce new copies of the viral RNA and proteins. Without this integration step the viral genetic information cannot be expressed and the replication cycle is stopped. These three proteins are of particular importance and we will go into more detail about them in Section 5.3.2. The env (“envelope”) gene code for the Env, the third and last polyprotein. The two resulting proteins coat the membrane of the virion and are responsible for binding with the CD4 host cells. The Surface protein (SU or gp120) binds to receptors on the surface of CD4 cells and allow the virion to attach itself to the host cell365. It also enables membrane fusion, the essential first step in the viral replication cycle366. The Transmembrane protein (TM or gp41) anchors SU into the virion membrane. The 6 remaining genes all code for single proteins. Two of these have essential regulatory roles and the remaining four have accessory roles. The tat (“trans-activator of transcription”) gene codes for Tat, the first essential regulatory protein. Tat activates and promotes transcription leading to more numerous and longer copies of the viral RNA367. The rev (for “regulator of virion”) gene codes for Rev, the second essential regulatory protein. Rev helps transcribed viral RNA exist the nucleus of the host cell in order to be translated to viral proteins or be packages in new, budding virions368. The remaining four accessory genes are as follows: nef (“negative regulatory factor”) code for the Nef protein which prevents the production of the CD4 cellular defense proteins increasing infectivity369; vif (“viral infectivity factor”) codes for the Vif protein which also increases viral infectivity370; vpu (“viral protein U”) codes for Vpu which likely helps during release of new virions370,371 as well as preventing production of CD4 in the host cell, it is not believed to be present in the mature virion as it binds to host cellulat membranes372; vpr (“viral protein R”) likely helps viral DNA enter the host cell nucleus and prevents the natural host cell reproduction cycle373. The existence of a 10th HIV-1 gene was suggested in 1988374, overlapping the env gene and coding for proteins on the other strand of viral DNA than the other genes. This putative gene was named asp (“antisense protein”) and Asp transcripts were isolated during an HIV-1 infection in 2002375. The function of this protein is still unknown but it has been shown to have a strong evolutionary correlation with HIV-1 group M responsible for the pandemic376. Although this Asp protein is still a source of debate, it is under active research377. Figure 5.2: Structure and main components of a mature HIV-1 virion. Structural proteins MA, CA, SU and TM are represented in Blue, functional enzymes RT, IN and PR in pink, RNA binding proteins Rev, Tat and NC in orange and accessory proteins Vif, Nef, Vpr and Vpu in green. Viral RNA is shown in yellow. The phospholipd membrane of the virion is shown in a light purple color. The p6 protein is not represented as it is largely unsctructured. Vpu is not believed to be present in the HIV virion. Figure adapted from PDB101378 (PDB101.rcsb.org, CC By 4.0 License, detailed list of structures used available in Appendix B). 5.3 Drug resistance in HIV Although the HIV/AIDS pandemic has been very deadly around the world, we are not completely defenseless against it. The first antiretroviral therapy (ART) drugs were made available in the late eighties, only a couple years after discovery of the virus. ART reduce the viral load in an HIV positive patient reducing its transmissibility379, while ART is not a cure for an HIV infection it has been shown to drastically reduce mortality and morbidity380. ART is estimated to have saved the lives of 9.5 million individuals between 1995 and 2015381. 5.3.1 A quick history of ART ? The first available anti-HIV drug was Zidovudine (ZDV, also known as azidothymidine or AZT) approved by the FDA for usage in the USA in 1987382, a few years only after the discovery of the virus. This drug was a reverse transcriptase inhibitor (RTI) therefore preventing the viral RNA from being transcribed into viral DNA. Unfortunately, 3 years later strains of HIV resistant to ZDV were circulating383. This rapid emergence of resistance to treatment is common for HIV384 due to its very high evolution rate385 allowing it to explore many possible mutations in response to selective pressures. To counter this resistance new drugs were rapidly developed and, between 1988 and 1995, four more RTIs were approved by the FDA. Using a combination of these drugs was also shown to be effective and led to a slower rise of resistance386. Then focus was shifted to the development of a new type of drug: Protease Inhibitors (PI). Between 1995 and 1997 4 of them were approved. These, taken in combination with RTI made if harder for the virus to develop resistance387. A new class of RTIs was also explored, Non-Nucleoside RTIs (NNRTIs) that block the RT action in another manner than the previously approved Nucleoside RTIs (NRTIs). When taken in combination with other drugs they are also highly effective388. As the years advanced even more drug targets were explored, with 5 Integrase inhibitors (INSTI) being approved since 2007389, A Fusion Inhibitor (FI) in 2003, and 3 other Entry inhibitors (EI) since 2007 all targeting different steps in the replication cycle of HIV (see Table B.1 and Figure 5.3). In response to the rapid emergence of resistance in HIV when treated with a single drug, clinicians started systematically treating HIV with a combination of multiple drugs targeting different proteins, as early as 1996. This is now referred to as Highly active antiretroviral combination therapy (HAART, also known as tritherapy). HAART usually consists of 2 NRTIs coupled with another drug: NNRTI or PI at first and later FI or INSTI390. As of 2008 22 anti-HIV single drugs were approved by the FDA391, and 27 as of today. This large array of available drugs made HAART possible and gave options to clinicians to switch targets when the multi-resistant HIV emerged. With the advent of HAART, patients had access to more potent treatments, however complexity of the treatment regimen grew. Treatments often involved several pills a day to take at precise intervals. Complex drug regimens have been associated with poorer treatment adherence392,393, which can lead to poor treatment outcome as well as the emergence of multi-resistant HIV strains394 and its spread within the population. To avoid this issue, increasingly more single pill regimens are being developed with a staggering 7 new drugs approved by the FDA in 2018. These single pill regimens greatly reduce the burden of adherence for patients leading to better therapeutic outcomes and reduced healthcare costs395. Figure 5.3: Timeline of ART single drug FDA approvals. Colored by drug type: Nucleoside Reverse transcriptase inhibitors (NRTI), Non-Nucleoside Reverse transcriptase inhibitors (NNRTI), Protease Inhibitors (PI), Integrase inhibitors (INI), Fusion Inhibitors (FI), Entry Inhibitors (EI). COBI, shown in gray, is a pharmacokinetic enhancer, it enhances the effect of certain other drugs. * RPV is often also used as a pharmacokinetic enhancer in combination with other drugs. ✝ These drugs are no longer approved by the FDA or no longer recommended as first line regiment treatment. Information collected from https://hivinfo.nih.gov/understanding-hiv/fact-sheets/fda-approved-hiv-medicines, https://hivinfo.nih.gov/understanding-hiv/infographics/fda-approval-hiv-medicines and https://www.accessdata.fda.gov/scripts/cder/daf/index.cfm. See also Table B.1 Most recently, some studies explored using some of these single pill regimens (such as Truvada, c.f. Table B.1) as prophylactics i.e. Pre-exposure prophylaxis (PrEP). Putting uninfected but at risk populations on ART before any known exposure has been shown to effectively lower the risk of infection396–398. When adherence is maintained, this risk reduction has been estimated to be between 44% and 100%399. As of 2022, Truvada is the only authorized drug for PrEP in Europe400, although Descovy and Apretude are also authorized for PrEP in the USA401. All of these drugs are widely used and are by now very well studied, therefore detailed guidelines on all the aspects of ART; when to start, which drugs to use, when to change drugs; are issued and updated regularly by practitioners402 and global organisms403 alike. 5.3.2 Main mechanisms of viral proteins and antiretroviral drugs RT:404, c.f. Figure 5.4 2 subunits: p66 and p51 (i.e. same chain but 1 is cleaved). p66=functional, p51=structural mainly (except for NNIBP). Fold to form a canal -&gt; fingers/palm/thumb with the polymerase active site in the palm RNA strand and DNA go through the canal and are synthesized in the palm RNase domain at the other end of p66 to cleave the RNA strand off of the DNA once it’s RTed. Once the RNA has been RTed the RT does another pass to synthesize the complementary DNA brand, this time the RNase is not active. RTI: NRTI: nucleoside analogue RTI work by binding with the active site of RT blocking DNA polymerization -&gt; chain terminating inhibitors NNRTI: non-nucleoside analogue RTI, bind to other a hydrophobic pocket behind the active site the RT, changing its flexibility and rendering it incative405 Figure 5.4: 3D structure of HIV-1 Reverse-transcriptase the different domains of the p66 subunit are labeled and shown in different shades of blue and green. The structural p51 subunit is shown in orange. The RNA template is shown in dark gray and the newly synthesized DNA stran in light gray. The polymerase active site is shown in red although mostly hidden by the RNA template. The 3D visualization was produced with Illustrate406 using the 2hmi PDB structure. IN: It pre-processes the ends of the viral DNA, cleaves the host DNA and binds the viral DNA to the host DNA (i.e. strand transfer).407–409. Multimer -&gt; chains link up. Each chain has: Core catalytic domain: Binds with viral DNA and performs the integration C-terminal domain: Binds with any DNA, adding stability N-terminal domain: Binds with Zn2+ and helps multimerisation (i.e integrase stability) INI: prevent strand transfer where viral DNA is first linked to host DNA410 PR: cleaves gag and pol polyproteins to produce individual structural and regulatory proteins. Symetric dimer structure411,412, 2 identical chains. Ionization of an Aspartate residue in each active site produces acid-base reaction that cleaves precursor413. (active site) Flaps are flexible parts of PR that can open and close414, probably controls access of substrates to active site415 PI: bind to active site of protease to hinder action416 Other drug targets: Entry inhibitors are being found417,418. enfuvirtide binds to gp41 and prevents fusion419 However Drug resistance has emerged for most treatment types even PrEP420,421 but seem to be rare and due to pre-treatment but unknown HIV infection422 5.3.3 How can HIV evade ART ? review423,424 NRTI425,426: Prevent incorporation of NRTI, like M184V427 Remove incorporated NRTI: TAMs428,429 NNRTI: mutations limiting access to the binding pocket like Y181C or changing the shape of it like K103N430. dangerous because a single mutation produces viruses that are both fit and highly resistant423 + cross-resistance PI: make active site bigger reducing affinity to inhibitors but also to natural substrate387, also change flap conformation to deny access to active site to PI431. INI: reduce affinity to inhibitors432 5.3.4 Consequences on global health Transmission of drug resistant viruses, particularly between treatment-naive individuals which is the main transmission mode in the UK433,434 and Switzerland435, creating long lasting drug resistance reservoirs in naive population. Dangerous because there can be therapeutic failure of first line regimen.436 Fitness is lower for some DRMs437,438 which means there is evolutionary pressure for these mutations to disappear in the absence of treatment the reversion to WT can last a long time with a wide range of median loss times from 1 to 13 years439, depending on the type of mutation (NRTI &gt; NNRTI). 5.3.5 Finding DRMS (This sections build upon a review we did440) Finding and categorizing DRMs is an important task. Sequence databases useful in discovery: UK-CHIC441 and the uk HIV drug resistance database (https://www.hivrdb.org.uk/) Swiss cohort study (https://www.shcs.ch/) PANGEA442 Stanford HIV Drug resistance database (https://hivdb.stanford.edu/) with sequences32 Los alamos sequence database (http://www.hiv.lanl.gov/), mainly for general HIV knowledge, no specific resistance metadata443 Databases of mutations are kept444 with regularly update lists of important DRMs445,446 and tools to help practitioners detect and interpret resistance447. Biological tests445,448: In vitro: Site directed mutagenesis449,450 Phenotypic susceptibility testing frmo clinical isolates451 using assays like phenosense452 or antivirogram453 in vivo: sequence patients for which treatment is failing454,455 statistical tests445,448 You can use statistical association tests e.g. Fisher tests456,457; or Spearman correlation method458 multiple testing phylogenetic correlation assays: -&gt; phenotypic validation novel approaches machine learning in general deep learning … References 32. Rhee, S.-Y. et al. Human immunodeficiency virus reverse transcriptase and protease sequence database. Nucleic Acids Research 31, 298–303 (2003). 272. Lwoff, A. The concept of virus. Journal of General Microbiology 17, 239–253 (1957). 273. Minor, P. D. Viruses. in (John Wiley &amp; Sons, Ltd, 2014). doi:10.1002/9780470015902.a0000441.pub3. 274. Stapleton, J. T., Foung, S., Muerhoff, A. S., Bukh, J. &amp; Simmonds, P. The GB viruses: A review and proposed classification of GBV-a, GBV-c (HGV), and GBV-d in genus pegivirus within the family flaviviridae. The Journal of General Virology 92, 233–246 (2011). 275. Yamamoto, N. et al. Characterization of a non-pathogenic H5N1 influenza virus isolated from a migratory duck flying from siberia in hokkaido, japan, in october 2009. Virology Journal 8, 65 (2011). 276. Shi, M. et al. The evolutionary history of vertebrate RNA viruses. Nature 556, 197–202 (2018). 277. Atlas of invertebrate viruses. (CRC Press, 2017). doi:10.1201/9781315149929. 278. Lefeuvre, P. et al. Evolution and ecology of plant viruses. Nature Reviews Microbiology 17, 632–644 (2019). 279. Wang, A. L. &amp; Wang, C. C. Viruses of parasitic protozoa. Parasitology Today 7, 76–80 (1991). 280. Fermin, G., Mazumdar-Leighton, S. &amp; Tennant, P. Viruses of prokaryotes, protozoa, fungi, and chromista. in 217 (2018). 281. Sutela, S., Poimala, A. &amp; Vainio, E. J. Viruses of fungi and oomycetes in the soil environment. FEMS Microbiology Ecology 95, fiz119 (2019). 282. Twort, F. W. AN INVESTIGATION ON THE NATURE OF ULTRA-MICROSCOPIC VIRUSES. The Lancet 186, 1241–1243 (1915). 283. Delbrock, M. Bacterial Viruses or Bacteriophages. Biological Reviews 21, 30–40 (1946). 284. Clark, J. R. &amp; March, J. B. Bacterial viruses as human vaccines? Expert Review of Vaccines 3, 463–476 (2004). 285. Kan-Davelaar, H. E. van, Hest, J. C. M. van, Cornelissen, J. J. L. M. &amp; Koay, M. S. T. Using viruses as nanomedicines. British Journal of Pharmacology 171, 4001–4009 (2014). 286. Prangishvili, D., Basta, T., Garrett, R. A. &amp; Krupovic, M. Viruses of the Archaea. in 1–9 (John Wiley &amp; Sons, Ltd, 2016). doi:10.1002/9780470015902.a0000774.pub3. 287. Prangishvili, D., Forterre, P. &amp; Garrett, R. A. Viruses of the Archaea: a unifying view. Nature Reviews Microbiology 4, 837–848 (2006). 288. Francki, R. I. B. Plant virus satellites. ANNUAL REVIEW OF MICROBIOLOGY. 289. Xu, P. &amp; Roossinck, M. J. Plant Virus Satellites. in (John Wiley &amp; Sons, Ltd, 2011). doi:10.1002/9780470015902.a0000771.pub2. 290. Lai, M. M. The molecular biology of hepatitis delta virus. Annual review of biochemistry 64, 259–286 (1995). 291. Hughes, S. A., Wedemeyer, H. &amp; Harrison, P. M. Hepatitis delta virus. The Lancet 378, 73–85 (2011). 292. Desnues, C., Boyer, M. &amp; Raoult, D. Chapter 3 - Sputnik, a Virophage Infecting the Viral Domain of Life. in (eds. Łobocka, M. &amp; Szybalski, W. T.) vol. 82 63–89 (Academic Press, 2012). 293. Gaia, M. et al. Zamilon, a Novel Virophage with Mimiviridae Host Specificity. PLOS ONE 9, e94923 (2014). 294. Edgar, R. C. et al. Petabase-scale sequence alignment catalyses viral discovery. Nature 602, 142–147 (2022). 295. Nasir, A., Romero-Severson, E. &amp; Claverie, J.-M. Investigating the Concept and Origin of Viruses. Trends in Microbiology 28, 959–967 (2020). 296. Forterre, P. &amp; Prangishvili, D. The origin of viruses. Research in Microbiology 160, 466–472 (2009). 297. Forterre, P. The origin of viruses and their possible roles in major evolutionary transitions. Virus Research 117, 5–16 (2006). 298. Boeke, J. &amp; Stoye, J. Retrotransposons, Endogenous Retroviruses, and the Evolution of Retroelement. (1997). 299. Kojima, S. et al. Virus-like insertions with sequence signatures similar to those of endogenous nonretroviral RNA viruses in the human genome. Proceedings of the National Academy of Sciences 118, e2010758118 (2021). 300. Löwer, R., Löwer, J. &amp; R Kurth. The viruses in all of us: Characteristics and biological significance of human endogenous retrovirus sequences. Proceedings of the National Academy of Sciences 93, 5177–5184 (1996). 301. Griffiths, D. J. Endogenous retroviruses in the human genome sequence. Genome Biology 2, reviews1017.1 (2001). 302. Baltimore, D. Expression of animal virus genomes. Bacteriological Reviews 35, 235–241 (1971). 303. Koonin, E. V., Krupovic, M. &amp; Agol, V. I. The baltimore classification of viruses 50 years later: How does it stand in the light of virus evolution? Microbiology and Molecular Biology Reviews 85, e00053–21 (2021). 304. Domingo, E. &amp; Perales, C. RNA Virus Genomes. in 1–12 (John Wiley &amp; Sons, Ltd, 2018). doi:10.1002/9780470015902.a0001488.pub3. 305. McGeoch, D. J., Rixon, F. J. &amp; Davison, A. J. Topics in herpesvirus genomics and evolution. Virus Research 117, 90–104 (2006). 306. Boehmer, P. &amp; Nimonkar, A. Herpes Virus Replication. IUBMB Life 55, 13–22 (2003). 307. Brentjens, M. H., Yeung-Yue, K. A., Lee, P. C. &amp; Tyring, S. K. Human papillomavirus: a review. Dermatologic Clinics 20, 315–331 (2002). 308. Kay, A. &amp; Zoulim, F. Hepatitis B virus genetic variability and evolution. Virus Research 127, 164–176 (2007). 309. Parashar, U. D., Bresee, J. S., Gentsch, J. R. &amp; Glass, R. I. Rotavirus. Emerging Infectious Diseases 4, 561–570 (1998). 310. Simmonds, P. Variability of hepatitis C virus. Hepatology 21, 570–583 (1995). 311. Wimmer, E., Hellen, C. U. T. &amp; Cao, X. Genetics of poliovirus. Annual Review of Genetics 27, 353–437 (1993). 312. Racaniello, V. R. One hundred years of poliovirus pathogenesis. Virology 344, 9–16 (2006). 313. Palese, P., Zheng, H., Engelhardt, O. G., Pleschka, S. &amp; García-Sastre, A. Negative-strand RNA viruses: Genetic engineering and applications. Proceedings of the National Academy of Sciences 93, 11354–11358 (1996). 314. Domingo, E. &amp; Perales, C. Virus Evolution. in (John Wiley &amp; Sons, Ltd, 2014). doi:10.1002/9780470015902.a0000436.pub3. 315. V’kovski, P., Kratzel, A., Steiner, S., Stalder, H. &amp; Thiel, V. Coronavirus biology and replication: implications for SARS-CoV-2. Nature Reviews Microbiology 19, 155–170 (2021). 316. Bäck, A. T. &amp; Lundkvist, Å. Dengue viruses an overview. Infection Ecology &amp; Epidemiology 3, 10.3402/iee.v3i0.19839 (2013). 317. Dustin, L. B., Bartolini, B., Capobianchi, M. R. &amp; Pistello, M. Hepatitis c virus: Life cycle in cells, infection and host response, and analysis of molecular markers influencing the outcome of infection and response to therapy. Clinical microbiology and infection : the official publication of the European Society of Clinical Microbiology and Infectious Diseases 22, 826–832 (2016). 318. Kadaja, M., Silla, T., Ustav, E. &amp; Ustav, M. Papillomavirus DNA replication From initiation to genomic instability. Virology 384, 360–368 (2009). 319. Weller, S. K. &amp; Coen, D. M. Herpes simplex viruses: Mechanisms of DNA replication. Cold Spring Harbor Perspectives in Biology 4, a013011 (2012). 320. Beck, J. &amp; Nassal, M. Hepatitis b virus replication. World Journal of Gastroenterology : WJG 13, 48–64 (2007). 321. Pyle, J. D. &amp; Scholthof, K.-B. G. Chapter 58 - Biology and Pathogenesis of Satellite Viruses. in (eds. Hadidi, A., Flores, R., Randles, J. W. &amp; Palukaitis, P.) 627–636 (Academic Press, 2017). doi:10.1016/B978-0-12-801498-1.00058-9. 322. Raoult, D. et al. The 1.2-megabase genome sequence of Mimivirus. Science (New York, N.Y.) 306, 1344–1350 (2004). 323. Campillo-Balderas, J. A., Lazcano, A. &amp; Becerra, A. Viral genome size distribution does not correlate with the antiquity of the host lineages. Frontiers in Ecology and Evolution 3, (2015). 324. Cann, A. J. Virus Structure. in 1–9 (John Wiley &amp; Sons, Ltd, 2015). doi:10.1002/9780470015902.a0000439.pub2. 325. Hladik, F. &amp; McElrath, M. J. Setting the stage: host invasion by HIV. Nature Reviews Immunology 8, 447–457 (2008). 326. Shaw, G. M. &amp; Hunter, E. HIV Transmission. Cold Spring Harbor Perspectives in Medicine 2, a006965 (2012). 327. Weiss, R. A. How does HIV cause AIDS? Science 260, 1273–1279 (1993). 328. Melhuish, A. &amp; Lewthwaite, P. Natural history of HIV and AIDS. Medicine 46, 356–361 (2018). 329. Murray, J. F. et al. Pulmonary complications of the acquired immunodeficiency syndrome. New England Journal of Medicine 310, 1682–1688 (1984). 330. Sampath, S. et al. Pandemics Throughout the History. Cureus 13, (2021). 331. World Health Organization. Global report: UNAIDS report on the global AIDS epidemic 2010. (World Health Organization, 2010). 332. Barré-Sinoussi, F. et al. Isolation of a T-lymphotropic retrovirus from a patient at risk for acquired immune deficiency syndrome (AIDS). Science (New York, N.Y.) 220, 868–871 (1983). 333. Gallo, R. C. et al. Isolation of human T-cell leukemia virus in acquired immune deficiency syndrome (AIDS). Science (New York, N.Y.) 220, 865–867 (1983). 334. Clavel, F. et al. Isolation of a new human retrovirus from west african patients with AIDS. Science 233, 343–346 (1986). 335. Gilbert, P. B. et al. Comparison of HIV-1 and HIV-2 infectivity from a prospective cohort study in Senegal. Statistics in Medicine 22, 573–593 (2003). 336. Loeff, M. F. S. van der et al. Sixteen years of HIV surveillance in a West African research clinic reveals divergent epidemic trends of HIV-1 and HIV-2. International Journal of Epidemiology 35, 1322–1328 (2006). 337. Gao, F. et al. Origin of HIV-1 in the chimpanzee Pan troglodytes troglodytes. Nature 397, 436–441 (1999). 339. Sharp, P. M. &amp; Hahn, B. H. Origins of HIV and the AIDS pandemic. Cold Spring Harbor Perspectives in Medicine: 1, a006841 (2011). 340. Hirsch, V. M., Olmsted, R. A., Murphey-Corb, M., Purcell, R. H. &amp; Johnson, P. R. An African primate lentivirus (SIVsmclosely related to HIV-2. Nature 339, 389–392 (1989). 342. Chen, Z. et al. Genetic characterization of new West African simian immunodeficiency virus SIVsm: geographic clustering of household-derived SIV strains with human immunodeficiency virus type 2 subtypes and genetically diverse viruses from a single feral sooty mangabey troop. Journal of Virology 70, 3617–3627 (1996). 343. Hemelaar, J. The origin and diversity of the HIV-1 pandemic. Trends in Molecular Medicine 18, 182–192 (2012). 344. Worobey, M. et al. Direct evidence of extensive diversity of HIV-1 in Kinshasa by 1960. Nature 455, 661–664 (2008). 346. Faria, N. R. et al. The early spread and epidemic ignition of HIV-1 in human populations. Science (New York, N.Y.) 346, 56–61 (2014). 347. Korber, B. et al. Timing the ancestor of the HIV-1 pandemic strains. Science (New York, N.Y.) 288, 1789–1796 (2000). 348. Rambaut, A., Posada, D., Crandall, K. A. &amp; Holmes, E. C. The causes and consequences of HIV evolution. Nature Reviews Genetics 5, 52–61 (2004). 349. McCutchan, F. E. Global epidemiology of HIV. Journal of Medical Virology 78, S7–S12 (2006). 350. Pérez-Losada, M., Arenas, M., Galán, J. C., Palero, F. &amp; González-Candelas, F. Recombination in viruses: Mechanisms, methods of study, and evolutionary consequences. Infection, Genetics and Evolution 30, 296–307 (2015). 351. Robertson, D. L., Hahn, B. H. &amp; Sharp, P. M. Recombination in AIDS viruses. Journal of Molecular Evolution 40, 249–259 (1995). 352. HIV circulating recombinant forms (CRFs). 353. Posada, D., Crandall, K. A. &amp; Holmes, E. C. Recombination in evolutionary genomics. Annual Review of Genetics 36, 75–97 (2002). 354. Taylor, B. S., Sobieszczyk, M. E., McCutchan, F. E. &amp; Hammer, S. M. The challenge of HIV-1 subtype diversity. New England Journal of Medicine 358, 1590–1602 (2008). 355. Hemelaar, J., Gouws, E., Ghys, P. D. &amp; Osmanov, S. Global trends in molecular epidemiology of HIV-1 during 20002007. AIDS (London, England) 25, 679–689 (2011). 356. Distribution of all HIV-1 sequences: WORLD. 357. Freed, E. O. HIV-1 Replication. Somatic Cell and Molecular Genetics 26, 13–33 (2001). 358. Ferguson, M. R., Rojo, D. R., Lindern, J. J. von &amp; O’Brien, W. A. HIV-1 replication cycle. Clinics in Laboratory Medicine 22, 611–635 (2002). 359. Gougeon, M. L., Laurent-Crawford, A. G., Hovanessian, A. G. &amp; Montagnier, L. Direct and indirect mechanisms mediating apoptosis during HIV infection: contribution to in vivo CD4 T cell depletion. Seminars in Immunology 5, 187–194 (1993). 360. Vidya Vijayan, K. K., Karthigeyan, K. P., Tripathi, S. P. &amp; Hanna, L. E. Pathophysiology of CD4+ t-cell depletion in HIV-1 and HIV-2 infections. Frontiers in Immunology 8, 580 (2017). 361. Frankel, A. D. &amp; Young, J. A. HIV-1: fifteen proteins and an RNA. Annual Review of Biochemistry 67, 1–25 (1998). 362. Fossen, T. et al. Solution structure of the human immunodeficiency virus type 1 p6 protein *. Journal of Biological Chemistry 280, 42515–42527 (2005). 363. Göttlinger, H. G., Dorfman, T., Sodroski, J. G. &amp; Haseltine, W. A. Effect of mutations affecting the p6 gag protein on human immunodeficiency virus particle release. Proceedings of the National Academy of Sciences 88, 3195–3199 (1991). 364. Huang, M., Orenstein, J. M., Martin, M. A. &amp; Freed, E. O. p6Gag is required for particle production from full-length human immunodeficiency virus type 1 molecular clones expressing protease. Journal of Virology 69, 6810–6818 (1995). 365. Bour, S., Geleziunas, R. &amp; Wainberg, M. A. The human immunodeficiency virus type 1 (HIV-1) CD4 receptor and its central role in promotion of HIV-1 infection. Microbiological Reviews 59, 63–93 (1995). 366. Hernandez, L. D., Hoffman, L. R., Wolfsberg, T. G. &amp; White, J. M. Virus-cell and cell-cell fusion. Annual Review of Cell and Developmental Biology 12, 627–661 (1996). 367. Jones, K. &amp; Peterlin, B. Control of rna initiation and elongation at the hiv-1 promoter. Annual Review of Biochemistry 63, 717–743 (1994). 368. Hope, T. J. Viral RNA export. Chemistry &amp; Biology 4, 335–344 (1997). 369. Mangasarian, A. &amp; Trono, D. The multifaceted role of HIV Nef. Research in Virology 148, 30–33 (1997). 370. Cohen, é. A., Subbramanian, R. A. &amp; Göttlinger, H. G. Role of Auxiliary Proteins in Retroviral Morphogenesis. in (ed. Kräusslich, H.-G.) 219–235 (Springer, 1996). doi:10.1007/978-3-642-80145-7_7. 371. Lamb, R. A. &amp; Pinto, L. H. Do Vpu and Vpr of Human Immunodeficiency Virus Type 1 and NB of Influenza B Virus Have Ion Channel Activities in the Viral Life Cycles? Virology 229, 1–11 (1997). 372. Khan, N. &amp; Geiger, J. D. Role of viral protein u (vpu) in HIV-1 infection and pathogenesis. Viruses 13, 1466 (2021). 373. Emerman, M. HIV-1, Vpr and the cell cycle. Current Biology 6, 1096–1103 (1996). 374. Miller, R. H. Human immunodeficiency virus may encode a novel protein on the genomic DNA plus strand. Science (New York, N.Y.) 239, 1420–1422 (1988). 375. Briquet, S. &amp; Vaquero, C. Immunolocalization Studies of an Antisense Protein in HIV-1-Infected Cells and Viral Particles. Virology 292, 177–184 (2002). 376. Cassan, E., Arigon-Chifolleau, A.-M., Mesnard, J.-M., Gross, A. &amp; Gascuel, O. Concomitant emergence of the antisense protein gene of HIV-1 and of the pandemic. Proceedings of the National Academy of Sciences 113, 11537–11542 (2016). 377. Savoret, J. et al. A pilot study of the humoral response against the AntiSense protein (ASP) in HIV-1-infected patients. Frontiers in Microbiology 11, (2020). 378. Zardecki, C. et al. PDB-101: Educational resources supporting molecular explorations through biology and medicine. Protein Science 31, 129–140 (2022). 379. Eisinger, R. W., Dieffenbach, C. W. &amp; Fauci, A. S. HIV viral load and transmissibility of HIV infection: Undetectable equals untransmittable. JAMA 321, 451–452 (2019). 380. Palella, F. J. et al. Declining morbidity and mortality among patients with advanced human immunodeficiency virus infection. New England Journal of Medicine 338, 853–860 (1998). 381. Forsythe, S. S. et al. Twenty years of antiretroviral therapy for people living with HIV: Global costs, health achievements, economic benefits. Health Affairs 38, 1163–1172 (2019). 382. Fischl, M. A. et al. The efficacy of azidothymidine (AZT) in the treatment of patients with AIDS and AIDS-related complex. New England Journal of Medicine 317, 185–191 (1987). 383. Richman, D. D. Susceptibility to nucleoside analogues of zidovudine-resistant isolates of human immunodeficiency virus. The American Journal of Medicine 88, S8–S10 (1990). 384. Yeo, J. Y., Goh, G.-R., Su, C. T.-T. &amp; Gan, S. K.-E. The Determination of HIV-1 RT Mutation Rate, Its Possible Allosteric Effects, and Its Implications on Drug Resistance. Viruses 12, 297 (2020). 385. Cuevas, J. M., Geller, R., Garijo, R., López-Aldeguer, J. &amp; Sanjuán, R. Extremely High Mutation Rate of HIV-1 In Vivo. PLOS Biology 13, e1002251 (2015). 386. Gulick, R. M. et al. Treatment with indinavir, zidovudine, and lamivudine in adults with human immunodeficiency virus infection and prior antiretroviral therapy. The New England Journal of Medicine 337, 734–739 (1997). 387. Wensing, A. M. J., Maarseveen, N. M. van &amp; Nijhuis, M. Fifteen years of HIV Protease Inhibitors: raising the barrier to resistance. Antiviral Research 85, 59–74 (2010). 388. Pedersen, O. S. &amp; Pedersen, E. B. Non-Nucleoside Reverse Transcriptase Inhibitors: The NNRTI Boom. Antiviral Chemistry and Chemotherapy 10, 285–314 (1999). 389. Scarsi, K. K., Havens, J. P., Podany, A. T., Avedissian, S. N. &amp; Fletcher, C. V. HIV-1 Integrase Inhibitors: A Comparative Review of Efficacy and Safety. Drugs 80, 1649–1676 (2020). 390. Yeni, P. Update on HAART in HIV. Journal of Hepatology 44, S100–S103 (2006). 391. Palmisano, L. &amp; Vella, S. A brief history of antiretroviral therapy of HIV infection: success and challenges. Annali dell’Istituto Superiore Di Sanita 47, 44–48 (2011). 392. Mehta, S., Moore, R. D. &amp; Graham, N. M. H. Potential factors affecting adherence with HIV therapy. AIDS 11, 16651670 (1997). 393. Miller, N. H. Compliance with treatment regimens in chronic asymptomatic diseases. The American Journal of Medicine 102, 43–49 (1997). 394. Chesney, M. A., Morin, M. &amp; Sherr, L. Adherence to HIV combination therapy. Social Science &amp; Medicine 50, 1599–1605 (2000). 395. Aldir, I., Horta, A. &amp; Serrado, M. Single-tablet regimens in HIV: Does it really make a difference? Current Medical Research and Opinion 30, 89–97 (2014). 396. Grant, R. M. et al. Preexposure chemoprophylaxis for HIV prevention in men who have sex with men. New England Journal of Medicine 363, 2587–2599 (2010). 398. Buchbinder, S. P. &amp; Liu, A. Pre-exposure prophylaxis and the promise of combination prevention approaches. AIDS and behavior 15 Suppl 1, S72–79 (2011). 399. Riddell, J. I., Amico, K. R. &amp; Mayer, K. H. HIV preexposure prophylaxis: A review. JAMA 319, 1261–1268 (2018). 400. EMA. Truvada. (2018). 401. About PrEP | PrEP | HIV basics | HIV/AIDS | CDC. (2022). 402. Zolopa, A. R. The evolution of HIV treatment guidelines: Current state-of-the-art of ART. Antiviral Research 85, 241–244 (2010). 403. World Health Organization. Consolidated guidelines on HIV prevention, testing, treatment, service delivery and monitoring: recommendations for a public health approach. https://www.who.int/publications-detail-redirect/9789240031593 (2021). 404. Sarafianos, S. G. et al. Structure and function of HIV-1 reverse transcriptase: Molecular mechanisms of polymerization and inhibition. Journal of molecular biology 385, 693–713 (2009). 405. Esnouf, R. M. et al. Unique features in the structure of the complex between HIV-1 reverse transcriptase and the bis(heteroaryl)piperazine (BHAP) U-90152 explain resistance mutations for this nonnucleoside inhibitor. Proceedings of the National Academy of Sciences of the United States of America 94, 3984–3989 (1997). 406. Goodsell, D. S., Autin, L. &amp; Olson, A. J. Illustrate: Software for Biomolecular Illustration. Structure (London, England: 1993) 27, 1716–1720.e1 (2019). 407. Chiu, T. K. &amp; Davies, D. R. Structure and function of HIV-1 integrase. Current Topics in Medicinal Chemistry 4, 965–977 (2004). 409. Delelis, O., Carayon, K., Saïb, A., Deprez, E. &amp; Mouscadet, J.-F. Integrase and integration: Biochemical activities of HIV-1 integrase. Retrovirology 5, 114 (2008). 410. Pommier, Y., Johnson, A. A. &amp; Marchand, C. Integrase inhibitors to treat HIV/Aids. Nature Reviews Drug Discovery 4, 236–248 (2005). 411. Pearl, L. H. &amp; Taylor, W. R. A structural model for the retroviral proteases. Nature 329, 351–354 (1987). 412. Gulnik, S., Erickson, J. W. &amp; Xie, D. HIV protease: Enzyme function and drug resistance. in vol. 58 213–256 (Academic Press, 2000). 413. Silva, A. M., Cachau, R. E., Sham, H. L. &amp; Erickson, J. W. Inhibition and catalytic mechanism of HIV-1 aspartic protease. Journal of Molecular Biology 255, 321–340 (1996). 414. Hornak, V., Okur, A., Rizzo, R. C. &amp; Simmerling, C. HIV-1 protease flaps spontaneously open and reclose in molecular dynamics simulations. Proceedings of the National Academy of Sciences 103, 915–920 (2006). 415. Yu, Y. et al. Structural insights into HIV-1 protease flap opening processes and key intermediates. RSC Advances 7, 45121–45128 (2017). 416. Roberts, N. A. et al. Rational design of peptide-based HIV proteinase inhibitors. Science 248, 358–361 (1990). 417. Esté, J. A. &amp; Telenti, A. HIV entry inhibitors. The Lancet 370, 81–88 (2007). 418. Kilby, J. M. &amp; Eron, J. J. Novel therapies based on mechanisms of HIV-1 cell entry. New England Journal of Medicine 348, 2228–2238 (2003). 419. Fletcher, C. V. Enfuvirtide, a new drug for HIV infection. The Lancet 361, 1577–1578 (2003). 420. Knox, D. C., Anderson, P. L., Harrigan, P. R. &amp; Tan, D. H. S. Multidrug-resistant HIV-1 infection despite preexposure prophylaxis. New England Journal of Medicine 376, 501–502 (2017). 421. Hurt, C. B., Eron, J. J. &amp; Cohen, M. S. Pre-exposure prophylaxis and antiretroviral resistance: HIV prevention at a cost? Clinical Infectious Diseases: An Official Publication of the Infectious Diseases Society of America 53, 1265–1270 (2011). 422. Gibas, K. M., Berg, P. van den, Powell, V. E. &amp; Krakower, D. S. Drug Resistance During HIV Pre-Exposure Prophylaxis. Drugs 79, 609–619 (2019). 423. Ammaranond, P. &amp; Sanguansittianan, S. Mechanism of HIV antiretroviral drugs progress toward drug resistance. Fundamental &amp; Clinical Pharmacology 26, 146–161 (2012). 424. Clavel, F. &amp; Hance, A. J. HIV drug resistance. New England Journal of Medicine 350, 1023–1035 (2004). 425. Menéndez-Arias, L. Mechanisms of resistance to nucleoside analogue inhibitors of HIV-1 reverse transcriptase. Virus Research 134, 124–146 (2008). 426. Sluis-Cremer, N., Arion, D. &amp; Parniak*, M. A. Molecular mechanisms of HIV-1 resistance to nucleoside reverse transcriptase inhibitors (NRTIs). Cellular and Molecular Life Sciences CMLS 57, 1408–1422 (2000). 427. Sarafianos, S. G. et al. Lamivudine (3TC) resistance in HIV-1 reverse transcriptase involves steric hindrance with beta-branched amino acids. Proceedings of the National Academy of Sciences of the United States of America 96, 10027–10032 (1999). 428. Meyer, P. R., Matsuura, S. E., Mian, A. M., So, A. G. &amp; Scott, W. A. A mechanism of AZT resistance: an increase in nucleotide-dependent primer unblocking by mutant HIV-1 reverse transcriptase. Molecular Cell 4, 35–43 (1999). 429. Boyer, P. L., Sarafianos, S. G., Arnold, E. &amp; Hughes, S. H. Selective excision of AZTMP by drug-resistant human immunodeficiency virus reverse transcriptase. Journal of Virology 75, 4832–4842 (2001). 430. Deeks, S. G. Nonnucleoside reverse transcriptase inhibitor resistance. JAIDS Journal of Acquired Immune Deficiency Syndromes 26, S25 (2001). 431. Kurt Yilmaz, N., Swanstrom, R. &amp; Schiffer, C. A. Improving Viral Protease Inhibitors to Counter Drug Resistance. Trends in Microbiology 24, 547–557 (2016). 432. Blanco, J.-L., Varghese, V., Rhee, S.-Y., Gatell, J. M. &amp; Shafer, R. W. HIV-1 integrase inhibitor resistance and its clinical implications. The Journal of Infectious Diseases 203, 1204–1214 (2011). 433. Mourad, R. et al. A phylotype-based analysis highlights the role of drug-naive HIV-positive individuals in the transmission of antiretroviral resistance in the UK. Aids 29, 1917–1925 (2015). 434. Hué, S. et al. Demonstration of Sustained Drug-Resistant Human Immunodeficiency Virus Type 1 Lineages Circulating among Treatment-Naïve Individuals. Journal of Virology 83, 2645–2654 (2009). 435. Drescher, S. M. et al. Treatment-naive individuals are the major source of transmitted HIV-1 drug resistance in men who have sex with men in the swiss HIV cohort study. Clinical Infectious Diseases 58, 285–294 (2014). 436. Boerma, R. S. et al. High levels of pre-treatment HIV drug resistance and treatment failure in Nigerian children. Journal of the International AIDS Society 19, 21140 (2016). 437. Kühnert, D. et al. Quantifying the fitness cost of HIV-1 drug resistance mutations through phylodynamics. PLOS Pathogens 14, e1006895 (2018). 438. Mesplède, T. et al. Viral fitness cost prevents HIV-1 from evading dolutegravir drug pressure. Retrovirology 10, 22 (2013). 439. Castro, H. et al. Persistence of HIV-1 Transmitted Drug Resistance Mutations. The Journal of Infectious Diseases 208, 1459–1463 (2013). 440. Blassel, L. et al. Drug resistance mutations in HIV: new bioinformatics approaches and challenges. Current Opinion in Virology 51, 56–64 (2021). 441. UK CHIC Steering Committee. The creation of a large UK-based multicentre cohort of HIV-infected individuals: The UK Collaborative HIV Cohort (UK CHIC) Study. HIV Medicine 5, 115–124 (2004). 442. Abeler-Dörner, L. et al. PANGEA-HIV 2: Phylogenetics and networks for generalised epidemics in africa. Current Opinion in HIV and AIDS 14, 173180 (2019). 443. Kuiken, C., Korber, B. &amp; Shafer, R. W. HIV sequence databases. AIDS reviews 5, 52–61 (2003). 444. Shafer, R. W. Rationale and Uses of a Public HIV Drug-Resistance Database. The Journal of Infectious Diseases 194, S51–S58 (2006). 445. Wensing, A. M. et al. 2019 update of the drug resistance mutations in HIV-1. Topics in Antiviral Medicine 27, 111–121 (2019). 446. Clark, S. A., Calef, C. &amp; Mellors, J. W. Mutations in retroviral genes associated with drug resistance. HIV sequence compendium 58158 (2007). 447. Liu, T. F. &amp; Shafer, R. W. Web Resources for HIV Type 1 Genotypic-Resistance Test Interpretation. Clinical Infectious Diseases 42, 1608–1618 (2006). 448. Johnson, V. A. et al. Update of the drug resistance mutations in HIV-1: March 2013. Topics in Antiviral Medicine 21, 6–7 (2016). 449. Larder, B. A. &amp; Kemp, S. D. Multiple mutations in HIV-1 reverse transcriptase confer high-level resistance to zidovudine (AZT). Science (New York, N.Y.) 246, 1155–1158 (1989). 450. Vreese, K. de et al. Resistance of human immunodeficiency virus type 1 reverse transcriptase to TIBO derivatives induced by site-directed mutagenesis. Virology 188, 900–904 (1992). 451. Masquelier, B. et al. Genotypic and phenotypic resistance patterns of human immunodeficiency virus type 1 variants with insertions or deletions in the reverse transcriptase (RT): Multicenter study of patients treated with RT inhibitors. Antimicrobial Agents and Chemotherapy 45, 1836–1842 (2001). 452. Petropoulos, C. J. et al. A novel phenotypic drug susceptibility assay for human immunodeficiency virus type 1. Antimicrobial Agents and Chemotherapy 44, 920–928 (2000). 453. Hertogs, K. et al. A rapid method for simultaneous detection of phenotypic resistance to inhibitors of protease and reverse transcriptase in recombinant human immunodeficiency virus type 1 isolates from patients treated with antiretroviral drugs. Antimicrobial Agents and Chemotherapy 42, 269–276 (1998). 454. Tambuyzer, L., Nijs, S., Daems, B., Picchio, G. &amp; Vingerhoets, J. Effect of mutations at position E138 in HIV-1 reverse transcriptase on phenotypic susceptibility and virologic response to etravirine. JAIDS Journal of Acquired Immune Deficiency Syndromes 58, 1822 (2011). 455. Katzenstein, D. A. et al. Phenotypic susceptibility and virological outcome in nucleoside-experienced patients receiving three or four antiretroviral drugs. AIDS 17, 821830 (2003). 456. Villabona-Arenas, C. J. et al. In-depth analysis of HIV-1 drug resistance mutations in HIV-infected individuals failing first-line regimens in West and Central Africa. AIDS 30, 2577 (2016). 457. Shulman, N. S., Bosch, R. J., Mellors, J. W., Albrecht, M. A. &amp; Katzenstein, D. A. Genetic correlates of efavirenz hypersusceptibility. AIDS 18, 17811785 (2004). 458. Miller, M. D. et al. Genotypic and phenotypic predictors of the magnitude of response to tenofovir disoproxil fumarate treatment in antiretroviral-experienced patients. The Journal of Infectious Diseases 189, 837–846 (2004). "],["HIV-paper.html", "Chapter 6 Contribution 2: Inferring mutation roles from sequence alignments using machine learning Abstract Author summary 6.1 Introduction 6.2 Materials and methods 6.3 Results 6.4 Discussion and perspectives Acknowledgments Supporting Information", " Chapter 6 Contribution 2: Inferring mutation roles from sequence alignments using machine learning Intro to this chapter within the context of the thesis to go here! This chapter was written as an article titled: “Using Machine Learning and Big Data to Explore the Drug Resistance Landscape in HIV” it was originally published in August 2021, in PLoS Computational Biology (doi:10.1371/journal.pcbi.1008873). The author list, complete with affiliations is given below: Luc Blassel1,2*, Anna Tostevin3, Christian Julian Villabona-Arenas4,5, Martine Peeters6, Stéphane Hué4,5, Olivier Gascuel1,7# On behalf of the UK HIV Drug Resistance Database\\(\\wedge\\) 1 Unité de Bioinformatique Évolutive, Institut Pasteur, Paris, France 2 Sorbonne Université, Collège doctoral, Paris, France 3 Institute for Global Health, UCL, London, UK 4 Department of Infectious Disease Epidemiology, London School of Hygiene and Tropical Medicine, London, UK 5 Centre for Mathematical Modelling of Infectious Diseases, London School of Hygiene and Tropical Medicine, London, UK 6 TransVIHMI (Recherches Translationnelles sur VIH et Maladies Infectieuses), Université de Montpellier, Institut de Recherche pour le Développement, INSERM, Montpellier, France 7 Institut de Systématique, Evolution, Biodiversité (ISYEB), UMR 7205 - Muséum National d’Histoire Naturelle, CNRS, SU, EPHE and UA, Paris, France # Current address: Institut de Systématique, Evolution, Biodiversité (ISYEB), UMR 7205 - Muséum National d’Histoire Naturelle, CNRS, SU, EPHE and UA, Paris, France * luc.blassel@pasteur.fr (LB) * olivier.gascuel@mnhn.fr (OG) \\(\\wedge\\) Membership list can be found in the acknowledgments section Abstract Drug resistance mutations (DRMs) appear in HIV under treatment pressure. DRMs are commonly transmitted to naive patients. The standard approach to reveal new DRMs is to test for significant frequency differences of mutations between treated and naive patients. However, we then consider each mutation individually and cannot hope to study interactions between several mutations. Here, we aim to leverage the ever-growing quantity of high-quality sequence data and machine learning methods to study such interactions (i.e. epistasis), as well as try to find new DRMs. We trained classifiers to discriminate between Reverse Transcriptase Inhibitor (RTI)-experienced and RTI-naive samples on a large HIV-1 reverse transcriptase (RT) sequence dataset from the UK (\\(n\\approx 55,000\\)), using all observed mutations as binary representation features. To assess the robustness of our findings, our classifiers were evaluated on independent data sets, both from the UK and Africa. Important representation features for each classifier were then extracted as potential DRMs. To find novel DRMs, we repeated this process by removing either features or samples associated to known DRMs. When keeping all known resistance signal, we detected sufficiently prevalent known DRMs, thus validating the approach. When removing features corresponding to known DRMs, our classifiers retained some prediction accuracy, and six new mutations significantly associated with resistance were identified. These six mutations have a low genetic barrier, are correlated to known DRMs, and are spatially close to either the RT active site or the regulatory binding pocket. When removing both known DRM features and sequences containing at least one known DRM, our classifiers lose all prediction accuracy. These results likely indicate that all mutations directly conferring resistance have been found, and that our newly discovered DRMs are accessory or compensatory mutations. Moreover, apart from the accessory nature of the relationships we found, we did not find any significant signal of further, more subtle epistasis combining several mutations which individually do not seem to confer any resistance. Author summary Almost all drugs to treat HIV target the Reverse Transcriptase (RT) and Drug resistance mutations (DRMs) appear in HIV under treatment pressure. Resistant strains can be transmitted and limit treatment options at the population level. Classically, multiple statistical testing is used to find DRMs, by comparing virus sequences of treated and naive populations. However, with this method, each mutation is considered individually and we cannot hope to reveal any interaction (epistasis) between them. Here, we used machine learning to discover new DRMs and study potential epistasis effects. We applied this approach to a very large UK dataset comprising \\(\\approx 55,000\\) RT sequences. Results robustness was checked on different UK and African datasets. Six new mutations associated to resistance were found. All six have a low genetic barrier and show high correlations with known DRMs. Moreover, all these mutations are close to either the active site or the regulatory binding pocket of RT. Thus, they are good candidates for further wet experiments to establish their role in drug resistance. Importantly, our results indicate that epistasis seems to be limited to the classical scheme where primary DRMs confer resistance and associated mutations modulate the strength of the resistance and/or compensate for the fitness cost induced by DRMs. 6.1 Introduction Drug resistance mutations (DRMs) arise in Human Immunodeficiency Virus-1 (HIV-1) due to antiretroviral treatment pressure, leading to viral rebound and treatment failure459,460. Furthermore, drug-resistant HIV strains can be transmitted to treatment-naive individuals and further spread throughout the population over time433,434,461. These transmitted resistant variants limit baseline treatment options and have clinical and public health implications worldwide. Almost all drugs to treat HIV target the reverse transcriptase (RT), encoded by the pol gene. Lists of DRMs are regularly compiled and updated by experts in the field, based on genotype analyses and phenotypic resistance tests or clinical outcome in patients on ART462–464. However, with the developement of new antiretroviral drugs that target RT but also other regions of the pol gene like protease or integrase, and the use of anti-retrovirals in high risk populations by pre-exposure prophylaxis (PREP), it is important to further our understanding of HIV polymorphisms and notably the interactions between mutations and epistatic effects. Among known DRMs, some mutations, such as M184V, directly confer resistance to antiretrovirals, more precisely the commonly used NRTI, 3TC (lamivudine) and FTC (emtricitabine), and are called primary or major drug resistance mutations, while some mutations like E40F have an accessory role and increases drug resistance when appearing alongside primary DRMs. Moreover, some mutations like S68G seem to have a compensatory role, but are not known to confer any resistance nor modulate resistance induced by primary DRMs. All of these mutations might have different functions in the virus, but they are all known to be associated with drug resistance phenomena. Therefore, during the rest of this article we will refer to all of these known mutations as resistance associated mutations (RAMs), rather than DRMs which is too specific, and our goal will be to search for new RAMs and study the interactions between known RAMs and the new ones. Classically, new RAMs have been found using statistical testing and large multiple sequence alignments (MSA) of the studied protein456,465. Tests are performed for mutations of interest on a given MSA to check if they are associated with the treatment status and outcome of the individual the viral sequences were sampled from. The test significance is corrected for multiple testing as all mutations associated to every MSA position is virtually a resistance mutation and tested. After this preliminary statistical search, the selected mutations are scrutinized to remove the effects of phylogenetic correlation (i.e. typically counting two sequences which are identical or closely related due to transmission rather than independent acquisition twice466) and check that the same mutation occurred several times in different subtypes and populations being treated with the same drug. Then, these mutations can be further experimentally tested in vitro or in vivo to validate phenotypic resistance. This method has worked well, but by design it is not ideal for studying the effect of several mutations at once, since if we have to test all couples or triplets of mutations, we quickly lose statistical power when correcting for multiple testing467, due to the large number of tests to perform. Moreover, phylogenetic correlation is again a critical issue with such an approach. Machine learning has been extensively used to predict resistance to antiretrovirals from sequence data. There are two main approaches to predicting resistance from sequence data. Regression, where machine learning models are trained to predict the value of a drug resistance indicator, typically \\(IC_{50}\\) fold change in response to a given drug468 or other indicators from phenotypic resistance assays such as PhenoSense469. Many methods have been used to predict a resistance level: Support Vector Machines (SVMs)470, k-Nearest Neighbors (KNN) and Random Forests (RFs)471, and more recently Artificial Neural Networks (ANNs)472,473. Alternatively, this task has also been approached as a classification problem. Given a certain threshold on a phenotypic resistance measure, sequences are given a label of \"resistant\" or \"susceptible\" to a certain drug. Machine learning classifiers are then trained to predict that label. For this task, SVMs and decision trees have been used474,475, ensemble classifier chains476,477 and also ANNs478. Most recently Steiner et al.479 have used Deep Learning Architectures to predict resistance status (i.e. classification) from sequence data. Since phenotypic assays are more complicated and costly to perform than simple genotyping, there is a limited number of sequences paired with a resistance level. This is the main limitation of these studies since machine learning methods typically benefit from a large amount of training data. This is especially true for deep neural networks which can need hundreds of thousands of training samples for certain tasks and architectures. However, despite this limitation, approaches proposed in these studies seem to have fairly good predictive accuracy. It is important to note that all of these studies aim to predict if a given sequence is resistant or not to a given drug, they do not aim to find new potential RAMs. Although Steiner et al.479 have checked that known DRM positions are captured by their models and found several positions potentially associated to resistance, it is not the main goal of their method. It is accepted in machine learning that there is a trade-off between model accuracy and model interpretability. In these previous studies the goal was to make the most accurate predictions possible, using complex models such as SVMs and ANNs, therefore sacrificing interpretability. Here, we have a different approach, using simpler models that might be less accurate but whose predictions we can understand and interpret. We train these models to discriminate RTI-naive from RTI-experienced sequences. Without the need for phenotypic data, we are able to use much larger HIV-1 RT sequence datasets from the UK (\\(n\\approx55,000\\)) (http://www.hivrdb.org.uk/) and Africa (\\(n\\approx4,000\\))456. By using interpretable models, we can extract mutations that are important for determining if a sequence is treated or not and potentially find new mutations potentially associated to resistance. Furthermore, we aim to detect associations between mutations and their effect on antiretroviral resistance in order to study potential underlying epistasis. The African and UK datasets are very different both from genetic and treatment history standpoints, therefore training classifiers on the UK dataset and testing them on the African one, should guarantee the robustness of our findings and greatly alleviate phylogenetic correlation effects. In the following sections, we first describe the data then the methods used. Our results include the assessment of the performance of our classifiers even when trained on data devoid of any known resistance-associated signal; as well as a description of the main features (prevalence and correlation to known mutations, genetic barrier and structural analysis) of six potentially resistance associated mutations, newly discovered thanks to our approach. These results and perspectives are discussed in the concluding section. 6.2 Materials and methods 6.2.1 Data In this study, we used all the drug resistance mutations that appeared in the Stanford HIV Drug resistance database, both for NRTI (Nucleoside Reverse Transcriptase Inhibitors; https://hivdb.stanford.edu/dr-summary/comments/NRTI/) and NNRTI (Non Nucleoside RTI; https://hivdb.stanford.edu/dr-summary/comments/NNRTI/) as known RAMs. To discover new RAMs, assess their statistical significance and study potential epistatic effects, we used two datasets of HIV-1 RT sequences. A large one (\\(n=55,539\\)) from the UK HIV Drug Resistance Database (http://www.hivrdb.org.uk/) and a smaller (\\(n=3,990\\)) one from 10 different western, eastern and central African countries456. In the UK dataset, sequences from RTI-naive individuals formed the majority class with 41,921 sequences (75%). In the African dataset, both classes were more balanced with 2,316 RTI-naive sequences (58%). In the UK dataset, RTI-naive sequences had at least one known RAM in 25% of cases, most likely due to transmissions to naive patients or undisclosed treatment history, against 48% in RTI-experienced sequences, thus making the discrimination between the RTI-experienced and RTI-naive sequences particularly difficult. In the African dataset this distribution was more contrasted, with only 14% of RTI-naive sequences having at least one known RAM, versus 83% of RTI-experienced sequences. The African dataset was also much more genetically diverse with 24 different subtypes and CRFs compared to the 2 subtypes (B and C) that we retained for this study from the UK cohort. The majority of the sequences from the African dataset were samples from Cameroon (27%), Democratic Republic of Congo (17%), Burundi (15%), Burkina Faso (13%) and Togo (11%). It is important to note that RTI-experienced sequences in both of these datasets can be considered as resistant to treatment. Since the viral load was sufficiently high to allow for sequencing of the virus, we can consider that the ART has failed. However, in some cases this resistance might be caused by non adherence to ART, rather than by the presence of RAMs, therefore adding some noise to the relationship between treatment status and resistance. In addition to differences in size, balance between RTI-naive and experienced classes, and the genetic difference between the UK and African datasets, there are also significant differences resulting from differing treatment strategies. In the UK and other higher income countries, the treatment is often tailored to the individual with genotype testing, which result in specific treatment as well as thorough follow-ups and high treatment adherence. In the African countries of the dataset that we used, the treatment is ZDV/ d4T (NRTI) + 3TC (NRTI) + NVP/EFV (NNRTI) in most cases456, and this treatment is generalized to the affected population, with poorer follow-up and adherence than in the UK. This discrepancy could lead to different mutations arising in both datasets, however since the treatment strategy is a combination of both NRTI and NNRTI drug classes, as in many countries, similar RAMs arise456. Furthermore, there is potentially more uncertainty in the African dataset than in the UK. For example some individuals may have unofficially taken antiretroviral drugs, but still identify themselves as RTI-naive, or report having some form of ART while not having been treated for HIV480. All of this explains the high prevalence of multiple resistance in the African data set: the median number of RAMs in sequences containing at least one RAM is 3 in the African sequences, while it is 1 in UK sequences (Table 6.1). Thus, we can say that African sequences are highly resistant, with possibly different mutations and epistatic effects, compared to their UK counterparts. .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-54398774{table-layout:auto;width:90%;}.cl-5431f6bc{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-54320332{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-5432033c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-543242de{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-543242df{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-543242e8{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-543242f2{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-543242fc{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-543242fd{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}UKAfricasize55,5393,990RTI naïvewith known RAMs11,429(21%)318(8%)without known RAMs30,492(55%)1,998(50%)RTI experiencedwith known RAMs6,633(12%)1,388(35%)without known RAMs6,985(13%)286(7%)sequences with ≥ 2 known RAMs8,034(14%)1,308(33%)max known RAM number1317Median known RAM number13number of subtypes / CRFs224subtypes / CRFsA0(0%)472(12%)B37,806(68%)64(2%)C17,733(32%)702(18%)CRF02 AG0(0%)1,477(37%) Table 6.1: Summary of the UK and Afican datasets Percentages are computed with regards to the size of the considered dataset (e.g. 21% of the sequences of the UK dataset are RTI-naive and have at least one known RAM). The median number of RAMs was computed only on sequences that had at least one known RAM. All these differences between the two datasets helped us to assess the generalizability of our method and the robustness of the results. That is to say, if signal extracted from the UK dataset was still relevant on such a different dataset as the African one, we could be fairly reassured in regard to the biological and epidemiological relevance of the observed signal. Sequences in both African and UK datasets were already aligned. In order to avoid overly gappy regions of our alignment we selected only positions 41 to 235 of RT for our analysis. We used the Sierra web service (https://hivdb.stanford.edu/page/webservice/) to get amino acid positions relative to the reference HXB2 HIV genome. This allowed us to determine all the amino acids present at each reference position in both datasets, among which we distinguished the “reference amino acids” for each position, corresponding to the B and C subtype reference sequences obtained from the Los Alamos sequence database (http://www.hiv.lanl.gov/). All the other, non-reference amino acids are named “mutations” in the following, and the set of mutations was explored to reveal new potential RAMs. To train our supervised classification methods481–483, the sequence data needed to be encoded to numerical vectors. A common and intuitive way to do so is to create a single feature in the dataset for each position of the sequence to encode. Each amino acid is then assigned an integer value, and an amino acid sequence is represented by a succession of integers corresponding to each amino acid. There is, however, one drawback with this method: by assigning an integer value to amino acids, we transform a categorical variable into an ordinal variable. Any ordering of amino acids is hard to justify and might introduce bias. To avoid this, we represented each sequence by a binary vector using one-hot encoding. For each position in the sequence to be encoded, amino acids corresponding to mutations are mapped to a binary vector denoting its presence or absence in the sequence. For example, at site 184, amino acids M, G, I, L, T and V are present in the UK dataset. After encoding we will have 5 binary features corresponding to the M184G, M184I, M184L, M184T and M184V mutations. We did not encode the reference amino acid M, but only the mutated amino acids. With this method each mutation in the dataset (\\(n=1,318\\)) corresponds to a single feature. Some of these features corresponded to known RAMs (e.g., M184I and M184V) and are named (known) RAM features in the following (\\(n=121\\)). This encoding allows the classifiers to consider specific mutations and potentially link them to resistance. 6.2.2 Classifier training In order to find new potential RAMs, we first followed the conventional multiple testing approach456. We first used Fisher exact tests to identify which of these mutations were significantly associated with anti-retroviral treatment. All the resulting p-values were then corrected for multiple testing using the Bonferroni correction484. Those for which the corrected p-value was \\(≤ 0.05\\) were then considered as significantly associated with treatment and potentially implicated in resistance. This method was complemented by our parallel, machine learning based approach. In order to extract potential RAMs, we trained several classifiers to discriminate between RTI-experienced and RTI-naive sequences represented by the binary vectors described above. This classification task does not need any phenotypic resistance measure, allowing us to use much larger and more readily available datasets than other machine learning based approaches previously mentioned. Once the classifiers were trained, we extracted the most important representation features, which corresponded to potentially resistance-associated mutations (PRAM in short). To this aim we chose three interpretable supervised learning classification methods so as to be able to extract those features: Multinomial naive Bayes (NB), which estimates conditional probabilities of being in the RTI-experienced class given a set of representation features485; the higher (\\(\\approx 1.0\\)) and the lower (\\(\\approx0\\)) conditional probabilities correspond to the most important features. Logistic regression (LR) with L1 regularization (LASSO)481 which assigns weights to each of the features, whose sign denotes the importance to one of the 2 classes, and whose absolute value denotes the weight of this importance. Random Forest (RF) , which has feature importance measures based on the Gini impurity in the decision trees486. Interpretability was the main driver behind our classification method choice, with the conditional probabilities of NB, the weight or LR and the importance values of RF, we can easily extract which mutations are driving the discrimination of RT sequences. This is why we did not choose to use ANNs which could have led to an increase in accuracy at the cost of interpretability487–489. Moreover, these three classification methods have the potential to detect epistatic effects. With RF, the discrimination is based on the combination of a few features (i.e. mutations), while with LR the features are weighted positively or negatively, thus making it possible to detect cumulative effects resulting from a large number of mutations, which individually have no discrimination power. Naive Bayes is a very simple approach, generally fairly accurate, and in between the two others in terms of explanatory power483. In order to be able to compare all these approaches in a common framework, we devised a very simple classifier out of the results of the Fisher exact tests. This \"Fisher classifier\" (FC) predicts a sequence as RTI-experienced if it has at least one of the mutations significantly associated to treatment. In this way, we were able to compute metrics for all classification methods and compare their performance. It is important to note that in all of these approaches we chose to discriminate RTI-naive from RTI-experienced sequences, regardless of the type of RTI received. One of the reasons is that we did not have detailed enough treatment history for sequences in the UK and African datasets. Moreover, even without segmenting by treatment type, the size of the training set and the power of our classification methods were both high enough to be able to detect all kinds of resistance associated mutations. We shall see (Result section) that we were able to determine the likely treatment involved by further examining the important extracted features and comparing them to known RAMs. Furthermore, since the treatment strategies are so different between the UK and African sequences, training on sequences having received different treatments should increase the robustness of our classifiers and the relevance of the mutations selected as potentially associated to resistance. To avoid phylogenetic confounding factors (e.g. transmitted mutations within a specific country or region), and avoid finding mutations potentially specific to a given subtype, we split the training and testing sets by HIV-1 M subtype. This resulted in training a set of classifiers on all subtype B sequences of the UK dataset and testing them on subtype C sequences from the UK dataset, training another set of classifiers on the subtype C sequences of the UK dataset and testing on the subtype B sequences from the UK dataset, as well as training a final set of classifiers on the whole UK dataset, but testing it on the smaller African dataset with a completely different phylogenetic makeup and treatment context456. Furthermore, in order to identify novel RAMs and study the behavior of the classifiers, we repeated this training scheme on both datasets, each time removing resistance-associated signal incrementally: first by removing all representation features corresponding to known RAMs from the dataset, and second by removing all sequences that had at least one known RAM. This resulted in each type of classifier being trained and tested 9 times, on radically different sets to ensure the interpretability and robustness of the results (see Table 6.2). .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-545c3b0c{table-layout:auto;width:90%;}.cl-5456ad90{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-5456baec{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-5456ef58{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5456ef62{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5456ef6c{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Signal removal levelTrained onTested onNoneUKsubtype B(37806)UKsubtype C(17733)UKsubtype C(17733)UKsubtype B(37806)UKsubtypes B &amp; C(55539)Africaall subtypes(3990)Known RAM features removedUKsubtype B(37806)UKsubtype C(17733)UKsubtype C(17733)UKsubtype B(37806)UKsubtypes B &amp; C(55539)Africaall subtypes(3990)Known RAM features sequences with ≥1 known RAM removedUKsubtype B(24422)UKsubtype C(13055)UKsubtype C(13055)UKsubtype B(24422)UKsubtypes B &amp; C(37477)Africaall subtypes(2284) Table 6.2: All training and testing datasets used during this study. The number of sequences in each dataset is shown in parentheses 6.2.3 Measuring classifier performance To compare the performance of our classifiers we used balanced accuracy490, which is the average of accuracies (i.e. percentages of well-classified sequences) computed separately on each class of the test set. This score takes into account, and corrects for, the imbalance between RTI-naive and RTI-experienced samples, which would lead to a classifier always predicting a sequence as RTI-naive getting a classical accuracy score of up to 77% (i.e. the frequency of naive sequences in the UK dataset). We also computed the adjusted mutual information (AMI) between predicted and true sequence labels, which is a normalized version of MI allowing comparison of performance on differently sized test sets145. Additionally, mutual information (MI) was used to compute p-values and assess the significance of the classifiers’ predictive power. The probabilistic performance of the classifiers was evaluated using an adapted Brier score482 more suited to binary classification, which is the mean squared difference between the actual class (coded by 1 and 0 for the RTI-experienced and RTI-naive samples respectively) and the predicted probability of being RTI-experienced. This approach refines the standard accuracy measure by rewarding methods that well approximate the true status of the sample (eg. predicting a probability of 0.9 while the true status is 1); conversly, binary methods (predicting 0 or 1, but no probabilities) will be penalized if they are often wrong. The Brier approach thus assigns better scores to methods that recognize their ignorance than to methods producing random predictions. 6.3 Results 6.3.1 Classifier performance &amp; interpretation As can be seen in Fig 6.1A and 6.1B, when all RAM features and sequences were kept in the training and testing sets, classifiers had good prediction accuracy, with the machine learning classifiers slightly outperforming the “Fisher” classifier. When removing RAM features from the training and testing sets, the classifiers retained a significant prediction accuracy, especially with the African data set and its multiple RAMs that are observed in a large number of sequences (but removed in this experiment). In this configuration the ML classifiers had a similar performance to the “Fisher” classifier, except for the random forest that is slightly less accurate, likely due to overfitting. Also, when removing sequences that had known RAMs, every classifier lost all prediction accuracy, and none could distinguish RTI-naive from RTI-experienced sequences. Regarding the Brier sore, we see the advantage of the machine learning classifiers over the “Fisher” classifier, which is worse than random predictions when known RAMs are removed. The ability of machine learning classifiers to quantify the resistance status should be an asset for many applications. Figure 6.1: Classifier Performance on UK and African datasets. NB: naive Bayes, LR: Logistic Regression with Lasso regularization, RF: Random Forest, FC: Fisher Classifier, RD: Agnostic random probabilistic classifier (this classifier predicts, as the probability of a sample belonging to a class, the frequency of that class in the training data). A) Adjusted mutual information (higher is better) between ground truth and predictions by classifiers trained on dataset with all features (blue), without features corresponding to known RAMs (orange) and without RAM features and without sequences that have at least 1 known RAM (green). Hatching indicates the training set on which a classifier was trained and the testing set on which the performance was measured. The expected value for a null classifier is 0, and 1 for a perfect classifier and a * denotes that the p-value derived from mutual information is \\(\\leq 0.05\\). For example when trained with all features all the classifiers have a significative MI. Conversly when removing RAM features and RAM sequences none of the classifiers have a significative MI and only LR trained on the entirety of the UK dataset has an AMI \\(&gt;10^{-3}\\) B) Balanced Accuracy score, i.e. average of accuracies per-class (higher is better) for the same classifiers as in a). The red line at \\(y=0.5\\) is the expected balanced accuracy for a null classifier that only predicts the majority class as well as a random uniform (i.e. 50/50) classifier. C) Brier score, which is the mean squared difference between the sample’s experience to RTI and the predicted probability of being RTI experienced (lower is better), for the same classifiers as in A) and B). The fact that classifiers retained prediction accuracy after removing known RAM corresponding features suggests that there was some residual, unknown resistance-associated signal in the data. The fact that this same power was non-existent when removing the known RAM-containing sequences from the training and testing sets, indicates that this residual signal was contained in these already mutated sequences. This suggests that the mutations that are found in the RAM removed experiment (see list below) are most likely accessory mutations that accompany known RAMs. This also suggests that all primary DRMs (i.e., that directly confer antiretroviral resistance) have been identified, which is reassuring from a public health perspective. The performance discrepancy between the UK and African test sets can be explained by several factors. Firstly, African sequences that have known RAMs are more likely to have multiple RAMs, and thus more (known and unknown) resistance-associated features than their UK counterparts (c.f. Table 6.1). This means that resistant African sequences are easier to detect even when removing known RAMs. Secondly, RTI-naive sequences in the UK test sets are more likely to have known RAMs than their African counterparts (c.f. Table 6.1) and therefore more companion mutations. This means that the RTI-naive sequences in the UK test set are more likely to be misclassified as RTI-experienced than in the African test set. 6.3.2 Additional classification results The fact that, when looking at classifiers trained without known RAMs , “Fisher” classifiers perform as well as the machine learning ones, leads us to believe that there is little interaction between mutations that would explain resistance better than taking each mutation separately. It is therefore likely that the kind of epistatic phenomena we were looking for, combining several mutations that do not induce any resistance when taken separately, do not come into play here. We are in a classical scheme where primary DRMs confer resistance and associated mutations reinforce the strength of the resistance and/or compensate for the fitness cost induced by primary DRMs. It is important to remember that in the previous section we were trying (as usual, e.g. see456) to find novel mutations associated with resistance by discriminating RTI-naive from RTI-experienced sequences, both with the statistical tests and the classifiers. However, this is intrinsically biased and noisy. Indeed, a RTI-naive sequence is not necessarily susceptible to RTIs as a resistant strain could have been transmitted to the individual. Conversely, an RTI-experienced sequence may not be resistant to treatment, due to poor ART adherence for example. We must therefore keep in mind that the noisy nature of the relationship between resistance and treatment status is partly responsible for the lower performance of classifiers trained on the UK sequences with reduced signal. Moreover, as all the additional resistance signal we detected is associated to the sequences having at least one known RAM (see above), we performed another analysis trying to discriminate between the sequences having at least one known RAM and those having none. The goal was to check that the mutations we discovered by discriminating RTI-experienced from RTI-naive samples, are truly accessory and compensatory mutations. As can be seen in Fig 6.2A and 6.2B, the classifiers trained to discriminate sequences that have at least one known RAM from those that have none, on datasets from which all features corresponding to known RAMs were removed, perform much better than classifiers trained to discriminate RTI-experienced from RTI-naive sequences. This increase in performance is especially visible for classifiers tested on UK sequences (more difficult to classify than the African ones, see above), with an AMI often almost one order of magnitude higher for the known-RAM presence/absence classification task. This further reinforces our belief that all there is a fairly strong residual resistance-signal in sequences that contain known RAMs, due to new accessory and compensatory mutations identified by our classifiers and Fisher tests. As a side note, Logistic regression (LR) consistently outperforms other classifiers, a tendency already observed in Fig 6.1. Figure 6.2: Discrimination between sequences having at least one RAM, and those having none on sequences with training features corresponding to known RAMs removed. NB: naive Bayes, LR: Logistic Regression with Lasso regularization, RF: Random Forest, FC: Fisher Classifier. A) Adjusted mutual information (higher is better) for classifiers trained without features corresponding to known RAMs. The classifiers are either trained to discriminate RTI-naive from RTI-experienced sequences (blue), or sequences with at least one known RAM from sequences that have none (orange). Hatching and braced annotations indicate the training and testing sets resulting in a given performance measure. B) Balanced accuracy, i.e. average of accuracies per-class for the same classifiers as in A) (higher is better). The red line at \\(y=0.5\\) is the expected value for a classifier only predicting the majority class as well as a random uniform (50/50) classifier. 6.3.3 Identifying new mutations from classifiers We assessed the importance of each mutation in the learned internal model of all the classifiers, in the setting where all known RAMs have been removed from the training dataset. For the Fisher classifier, we used one minus the p-value of the exact Fisher test as the importance value, therefore the more significantly associated mutations have the higher importance value and were ranked first. For a given classification task, we ranked each mutation according to the appropriate importance value for each classifier (see above), trained on the B or C subtypes, with the highest importance value having a rank of 0. We then computed the average rank for each mutation and each classification task (RTI-naive/RTI-experienced and RAM present/RAM absent). This gave us, for each classification task, a ranking of mutations potentially associated with resistance that took into account the importance given to this new mutation by each classifier trained on this task. Mutations that were in the 10 most important mutations for both of the classification tasks were considered of interest. Based on these criteria we selected the following potentially resistance-associated mutations (w.r.t. the HXB2 reference genome): L228R, L228H, E203K, D218E, I135L and H208Y. These mutations are referred to as “new mutations” in the rest of this study. To check the epistatic nature of these selected mutations we computed the relative risk \\(RR(new, X)\\) between a new mutation and a binary character \\(X\\). \\(RR(new,X)\\) was computed from the contingency table between \\(new\\) and \\(X\\) as follows: .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-5a1d3bcc{table-layout:auto;width:40%;}.cl-59ed57b8{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-59ed6604{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-59ed9a34{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-59ed9a48{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-59ed9a49{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} nameX presentX absentnew presentABnew absentCD \\[ RR(new,X) = \\frac{A}{A+C} \\div \\frac{B}{B+D} \\] The RR gives us a measure for how over-represented each of our new mutations is in sequences that have the \\(X\\) character compared to those that don’t. To get a general idea of this over-representation, for each new mutation we computed \\(RR(new, treatment)\\) comparing the prevalence of the new mutation in RTI-experienced and RTI-naive sequences. We also computed \\(RR(new, with RAM)\\) comparing the prevalence the new mutation in sequences having at least one known RAM and sequences that have none. Both of these RRs are shown in Table 6.3 for each new mutation. We then computed \\(RR(new, RAM)\\) for each known RAM present in more than 0.1% of UK sequences and the new mutations. In Fig 6.3 we see the RRs for which the lower bound of the 95% confidence interval, computed on 1000 bootstrap samples from the UK dataset, was greater than 4. 6.3.4 Detailed analysis of potentially resistance-associated mutations As can be seen in Table 6.3, all of these new mutations except for I135L, are highly over-represented in RTI-experienced sequences and sequences that already have known RAMs, with lower bounds on the 95% RR CI always greater than 5, and often exceeding 10. When looking at the RRs computed for individual RAMs on the UK dataset (Fig 6.3), this impression is confirmed with very high over-representation of these new mutations potentially associated with resistance in sequences that have a given known RAM, with 95% RR lower CI bounds sometimes greater than 80 (H208Y/L210W and D218E/D67N), and most of the time greater than 10. with the noticeable exception of I135L where only 2 known RAMs give RRs with lower CI bounds greater than 4. The RRs computed on the African dataset (C.1) tell a similar story albeit with smaller RR values due to a smaller number of occurrences of both new mutations and known RAMs. .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-5a3e178e{table-layout:auto;width:90%;}.cl-5a3879fa{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-5a388ea4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-5a388eae{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-5a38ecaa{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5a38ecbe{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5a38ecbf{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5a38ecc0{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5a38ecc8{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-5a38ecc9{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}UKAfricasize55,5393,990RTI naïvewith known RAMs11,429(21%)318(8%)without known RAMs30,492(55%)1,998(50%)RTI experiencedwith known RAMs6,633(12%)1,388(35%)without known RAMs6,985(13%)286(7%)sequences with ≥ 2 known RAMs8,034(14%)1,308(33%)max known RAM number1317Median known RAM number13number of subtypes / CRFs224subtypes / CRFsA0(0%)472(12%)B37,806(68%)64(2%)C17,733(32%)702(18%)CRF02 AG0(0%)1,477(37%) Table 6.3: Analysis of new potential RAMs. Codon distance: For each new mutation we computed the minimum number of nucleotide mutations to go from the wild amino acid codons to those of the mutated amino acid, as well as the average codon distance between both amino acids, weighted by the prevalence of each wild and mutated codon at the given position in the UK dataset. B62: BLOSUM62 similarity values (e.g. D218E = 2, reflecting that E and D are both negatively charged and highly similar). Count: We looked at the number of occurrences of each new potential RAM in the UK dataset and the corresponding prevalence in parentheses. Relative risks: We computed \\(RR(new, treatment)\\) (e.g. L228R is 18.1 times more prevalent in RTI-experienced sequences compared to RTI-naive sequences in the UK dataset). We also computed \\(RR(new, any~RAM)\\) (e.g. L228R is 115.7 times more prevalent in sequences that have at least one known RAM than in sequences that have none in the UK dataset). The 95% confidence intervals shown under each RR were computed with 1000 bootstrap samples of size \\(n=55,000\\) drawn with replacement from the whole UK dataset. p-values: Fisher exact tests were done on the African dataset (to avoid confounding effects due to phylogenetic correlation) to see if each of these new mutations were more prevalent in RTI-experienced sequences. The same metrics were computed for all known RAMs, the median values are shown in the last two lines of this table, as well as the 5th and 95th percentiles which are shown underneath. \\(RR(RAM,any~RAM)\\) values were computed for any RAM except itself to avoid always having infinite ratios. Figure 6.3: Relative risk of the new mutations with regards to known RAMs on the UK dataset (i.e. the prevalence of the new mutation in sequences with a given known RAM divided by the prevalence of the new mutation in sequences without this RAM). RRs were only computed for mutations (new and RAMs) that appeared in at least 0.1% (=55) sequences. 95% confidence intervals, represented by vertical bars, were computed with 1000 bootstrap samples of UK sequences. Only RRs with a lower CI boundary greater than 4 are shown. The shape and color of the point represents the type of RAM as defined by Stanford’s HIVDB. Blue circle: NRTI, orange square: NNRTI, green diamond: Other. RR values are shown from left to right, by order of decreasing values on the lower bound of the 95% CI. The genetic barrier to resistance for each of these new mutations is quite low, with a minimum of 1 base change for each of them (Table 6.3 ). We also computed the average codon distance (i.e. number of different bases), weighted by the prevalence of wild and mutated codons at the given positions in the UK (Table 6.3 ) and Africa (Table C.5) datasets, and in each case the average codon distance was always close to 1. In other words, at the amino acid level these mutations are expected to be relatively frequent. However, their frequencies are much higher in treated/with-RAM sequences than in naive/without-RAM ones (Table 6.3 ). Moreover, if we look at the BLOSUM62 scores (Table 6.3 ), some of these mutations induce some substantial changes in physicochemical properties, most notably at site 228, which reinforces again the likelihood that these mutations are associated with resistance. These metrics were also computed for all known RAMs (Table 6.3 ). For all these metrics, and the 6 new potential RAMs, values are contained between the 5th and 95th percentiles computed on known RAMs, except for the BLOSUM score of L228H that corresponds to a drastic physicochemical change. To gain more insight on these new mutations we also observed their spatial location on the 3-D HIV-1 RT structure using PyMol491. HIV-1 RT is a heterodimer with two subunits translated from the same sequence with different lengths and 3-D structures. The smaller p51 subunit (440 AAs) has a mainly structural role, while the larger p66 (560 AAs) subunit has the active site at positions 110, 185 and 186. The p66 subunit also has a regulatory pocket behind the active site: the non-nucleoside inhibitor binding pocket (NNIBP) formed of several sites of the p66 subunit as well as site 138 of the p51 subunit. Nucleoside RT Inhibitors (NRTI) are nucleotide analogs and bind in the active site, blocking reverse transcription. Non-Nucleoside RT Inhibitors (NNRTI) bind in the NNIBP, changing the protein conformation and blocking reverse transcription. More details on the structure and function of HIV-1 RT can be found in404. A general view of where the new mutations are situated with regards to the other important sites of HIV-1 RT is shown in Fig 6.4, and is detailed below. Figure 6.4: Structure of HIV-1 RT with highlighted important sites. The p66 subunit is colored dark gray and the p51 subunit white. The active site is highlighted in blue, and the NNIBP is highlighted in yellow. The sites of new mutations are colored in red. 6.3.4.1 L228R / L228H L228R is the most important of these new mutations according to the feature importance ranking done above. This is reflected in the very high over-representation in RTI-experienced sequences and sequences with known RAMs shown in Table 6.3 . When looking at the detailed RRs shown in Fig 6.3, we observe that L228R presents high RR values with mainly NRTI RAMs, but also with NNRTI RAMs such as Y181C and L100I, and this is even more so h for RRs computed on the African dataset (C.1). L228H is very similar in all regards to L228R, however its highest RRs are exclusively with NRTI RAMs. Site 228 of the p66 subunit is located very close to the active site of RT, where NRTIs operate (Figs 6.4 and C.3) which could explain the role that L228R and L228H seem to have in NRTI resistance. However, site 228 of the p66 subunit is also between sites 227 and 229 which are both part of the NNIBP. Furthermore, both L228H and L228R have very low BLOSUM62 score, of -3 and -2 respectively (Table 6.3 ). Arginine (R) and Histidine (H) are both less hydrophobic that Leucine (L), and have positively charged side-chains. This important change in physicochemical properties could explain the role they both seem to have in NRTI resistance. However, while both Arginine and Histidine are larger than Leucine, Arginine is also fairly larger than Histidine, which is aromatic. This difference between both residues might explain the association L228R seems to have with NNRTI resistance that L228H does not have. 6.3.4.2 E203K / H208Y Both E203K and H208Y are highly over-represented in RTI-experienced sequences and sequences with known RAMs. They both have high RR values for NRTI RAMs. Furthermore the most highly valued RAM RRs in Fig 6.3, are very similar for E203K and H208Y. Structurally they are close to each other on an alpha helix which is close to the active site. Both E203K and H208Y have positive, albeit not maximal, BLOSUM62 scores, meaning they are fairly common substitutions. However, these mutations induce some change in physicochemical properties with Tyrosine (Y) being less polar than Histidine (H), and the change from Glutamic Acid (E) to Lysine (K) corresponding to a change from a negatively charged side chain to a positively charged one. All this, combined with their structural proximity and the shared high RR values for single RAMs, suggests a similar role in NRTI resistance. 6.3.4.3 I135L In Table 6.3 and Fig 6.3, we observe that I135L has the lowest RR values of all the new mutations, with CI bounds lower than 2 in Table 6.3’s general RRs. However, it is the most prevalent of the new mutations. If we look at the detailed RRs of Fig 6.3, we see that I135L is significantly over-represented in sequences with NNRTI RAMs, specifically A98G and P225H. Structurally this makes sense: On the p66 subunit, site 135 is on the outside, far from both the active site and the NNIBP. However, site 135 on the p51 subunit is located very close to the NNIBP (Figs 6.3 and C.2). The BLOSUM62 score for this substitution is quite high (Table 6.3), which is expected since both residues are very similar to one another, differing only by the positioning of one methyl group. However, Leucine (L) is less hydrophobic than Isoleucine (I), despite they are still both classified as hydrophobic residues (Table C.5). The proximity between site 135 and the pocket in which NNRTI RAMs bind, as well as the high RR values for these NNRTI RAMs leads us to believe that I135L could play a subtle accessory role in NNRTI resistance, either by enhancing the effect of some NNRTI RAMs (typically, A98G and P225H), or by compensating for loss of fitness. 6.3.4.4 D218E D218E is also highly over-represented in both RTI-experienced sequences and sequences with known RAMs. It has infinite RR values in the African dataset (Table 6.3), because it is quite rare in this dataset, and all of its 25 occurrences are in sequences that have at least one known RAM and are RTI-experienced. In fact, from the UK dataset we can see that D218E has some of the highest RR values for individual RAMs (along with H208Y). The majority of these very high RR values occur for NRTI RAMs. Site 218 on the p66 subunit is quite close to the RT active site, which could explain the role D218E seems to have in NRTI resistance. Aspartic acid (D) and Glutamic acid (E) are very similar amino acids, both acidic with negatively charged side-chains, as reflected in their fairly high BLOSUM62 score, the main difference between both being molecular weight, with E being slightly larger than D. 6.4 Discussion and perspectives Our method has allowed us to identify six mutations that might play a role in drug resistance in HIV. These mutations are significantly over-represented in RTI-experienced sequences, as well as sequences exhibiting at least one other known RAM. The fact that models trained on the UK are still performant on such a different dataset as the African one strongly suggests that the learned classifier models have acquired generalized knowledge on resistance. For all of these new mutations their spatial positioning on HIV-1 RT is consistent with our conclusions, as all were either close to the active site or the regulatory binding pocket. Some of the mutations we have identified as potentially associated with resistance have been mentioned in previous studies. L228R/H have been observed before492 and were suggested to be associated with reduced susceptibility to didanosine493,494. I135L has been observed in sequences with reduced susceptibility to NNRTIs495. H208Y has been associated with NNRTI and NRTI resistance496 and it has been suggested that it has an accessory role in NRTI resistance497. E203K, D218E, L228RH and H208Y have all been mentioned in498 as probably linked to phenotypic resistance to NRTI and NNRTI. However, none of these mutations has been experimentally confirmed as conferring or helping with drug resistance to the best of our knowledge. The fact that we find them again with a big data analysis of highly different sequences and involved statistical selection procedure combining multiple testing and machine learning, and that we have very high significance, clearly indicates their potential role in resistance. Therefore, we believe they are sufficiently linked to drug resistance that they garner a closer inspection either in-vitro or in-vivo to determine the mechanisms that could allow them to play a role in resistance. With our machine classifiers we seem to have found some RAMs of an accessory nature, over-represented in sequences already containing known RAMs. This is a form of epistasis, where the interaction between the main RAM and the accessory RAM is important. However, we did not manage to find subtler forms of epistasis, in our dataset, where two mutations separately have no effect on resistance but have an effect together. This is partly indicated by the fact that there is a limited performance gap between the Fisher exact tests and more sophisticated classifiers, that are able to reveal significant association of mutations, while each individual mutation has low prediction power. However, one advantage of machine learning classifiers, is that they are probabilistic, meaning that they can give more nuanced insights into the nature or resistance level of a given sequence than the classical binary presence/absence of RAMs approach. In this regard logistic regression appears as a method of choice, showing similar or better performance than other classifiers, and an easy interpretation that is facilitated by the lasso regularization which performs a simple feature selection and retains the most important ones. Similar results were already observed on other sequence analysis tasks499. In order to investigate the second form of epistasis further we tested each pair of mutations in the UK dataset (\\(n=867,903\\)) with Fisher exact tests to see if they were linked to treatment status. In order to mitigate the effects of phylogenetic correlation which are sure to have an effect in this type of setting, we tested the pairs that were significantly associated to treatment (\\(n=1,309\\)) again on the African dataset. We also compared these results to the Fisher exact tests executed for each single mutation. We did not find any pair of mutations that was significantly associated, to treatment where neither member were significantly associated individually. Moreover, we only found 3 significantly associated pairs of mutations that did not include at least one known RAM, and they all included one of our newly found potential RAM: L228R + I142V, L228R + F214L and L228H + F214L (see appendix C.6 for details). With therapeutic strategies targeting multiple proteins that are now used, there might be some epistatic effects with other regions of the HIV genome that are targeted by some of the drugs. These potential effects however, lie outside the scope of this study. Because of the lack of detailed treatment history metadata, we did not distinguish mutations arising from NRTIs or NNRTIs. We believe that a large amount of high quality sequence data, along with a sufficiently detailed log of treatments and drugs the sequences were exposed to, could allow us to use our machine-learning approach to find mutations related to specific drugs and thus furthering our knowledge of HIV drug resistance, giving clinicians more tools to manage and help infected patients. Acknowledgments We thank Anna Zhukova, Frédéric Lemoine and Marie Morel for their help and suggestions. We also thank the UK HIV Drug Resistance Database and the UK Collaborative HIV Cohort: Steering committee: David Asboe, Anton Pozniak (Chelsea &amp; Westminster Hospital, London); Patricia Cane (Public Health England, Porton Down); David Chadwick (South Tees Hospitals NHS Trust, Middlesbrough); Duncan Churchill (Brighton and Sussex University Hospitals NHS Trust); Simon Collins (HIV i-Base, London); Valerie Delpech (National Infection Service, Public Health England); Samuel Douthwaite (Guy’s and St. Thomas’ NHS Foundation Trust, London); David Dunn, Kholoud Porter, Anna Tostevin, Oliver Stirrup (Institute for Global Health, UCL); Christophe Fraser (University of Oxford); Anna Maria Geretti (Institute of Infection and Global Health, University of Liverpool); Rory Gunson (Gartnavel General Hospital, Glasgow); Antony Hale (Leeds Teaching Hospitals NHS Trust); Stéphane Hué (London School of Hygiene and Tropical Medicine); Michael Kidd (Public Health England, Birmingham Heartlands Hospital); Linda Lazarus (Expert Advisory Group on AIDS Secretariat, Public Health England); Andrew Leigh-Brown (University of Edinburgh); Tamyo Mbisa (National Infection Service, Public Health England); Nicola Mackie (Imperial NHS Trust, London); Chloe Orkin (Barts Health NHS Trust, London); Eleni Nastouli, Deenan Pillay, Andrew Phillips, Caroline Sabin (University College London, London); Kate Templeton (Royal Infirmary of Edinburgh); Peter Tilston (Manchester Royal Infirmary); Erik Volz (Imperial College London, London); Ian Williams (Mortimer Market Centre, London); Hongyi Zhang (Addenbrooke’s Hospital, Cambridge). Coordinating Center: Institute for Global Health, UCL (David Dunn, Keith Fairbrother, Anna Tostevin, Oliver Stirrup) Centers contributing data: Clinical Microbiology and Public Health Laboratory, Addenbrooke’s Hospital, Cambridge (Justine Dawkins); Guy’s and St Thomas’ NHS Foundation Trust, London (Emma Cunningham, Jane Mullen); PHE – Public Health Laboratory, Birmingham Heartlands Hospital, Birmingham (Michael Kidd); Antiviral Unit, National Infection Service, Public Health England, London (Tamyo Mbisa); Imperial College Health NHS Trust, London (Alison Cox); King’s College Hospital, London (Richard Tandy); Medical Microbiology Laboratory, Leeds Teaching Hospitals NHS Trust (Tracy Fawcett); Specialist Virology Centre, Liverpool (Elaine O’Toole); Department of Clinical Virology, Manchester Royal Infirmary, Manchester (Peter Tilston); Department of Virology, Royal Free Hospital, London (Clare Booth, Ana Garcia-Diaz); Edinburgh Specialist Virology Centre, Royal Infirmary of Edinburgh (Lynne Renwick); Department of Infection &amp; Tropical Medicine, Royal Victoria Infirmary, Newcastle (Matthias L Schmid, Brendan Payne); South Tees Hospitals NHS Trust, Middlesbrough (David Chadwick); Department of Virology, Barts Health NHS Trust, London (Mark Hopkins); Molecular Diagnostic Unit, Imperial College, London (Simon Dustan); University College London Hospitals (Stuart Kirk); West of Scotland Specialist Virology Laboratory, Gartnavel, Glasgow (Rory Gunson, Amanda Bradley-Stewart). Supporting Information Supporting Information can be found in the appendix C References 145. Vinh, N. X., Epps, J. &amp; Bailey, J. Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance. Journal of Machine Learning Research 11, 18 (2010). 404. Sarafianos, S. G. et al. Structure and function of HIV-1 reverse transcriptase: Molecular mechanisms of polymerization and inhibition. Journal of molecular biology 385, 693–713 (2009). 433. Mourad, R. et al. A phylotype-based analysis highlights the role of drug-naive HIV-positive individuals in the transmission of antiretroviral resistance in the UK. Aids 29, 1917–1925 (2015). 434. Hué, S. et al. Demonstration of Sustained Drug-Resistant Human Immunodeficiency Virus Type 1 Lineages Circulating among Treatment-Naïve Individuals. Journal of Virology 83, 2645–2654 (2009). 456. Villabona-Arenas, C. J. et al. In-depth analysis of HIV-1 drug resistance mutations in HIV-infected individuals failing first-line regimens in West and Central Africa. AIDS 30, 2577 (2016). 459. Lepri, A. C. et al. Resistance Profiles in Patients with Viral Rebound on Potent Antiretroviral Therapy. The Journal of Infectious Diseases 181, 1143–1147 (2000). 460. Verhofstede, C. et al. Detection of drug resistance mutations as a predictor of subsequent virological failure in patients with HIV-1 viral rebounds of less than 1,000 RNA copies/ml. Journal of Medical Virology 79, 1254–1260 (2007). 461. Zhukova, A., Cutino-Moguel, T., Gascuel, O. &amp; Pillay, D. The Role of Phylogenetics as a Tool to Predict the Spread of Resistance. The Journal of Infectious Diseases 216, S820–S823 (2017). 462. Bennett, D. E. et al. Drug Resistance Mutations for Surveillance of Transmitted HIV-1 Drug-Resistance: 2009 Update. PLOS ONE 4, e4724 (2009). 464. Wensing, A. M. et al. 2017 Update of the Drug Resistance Mutations in HIV-1., 2017 Update of the Drug Resistance Mutations in HIV-1. Topics in antiviral medicine, Topics in Antiviral Medicine 24, 24, 132, 132–133 (2016). 465. Dudoit, S. &amp; Laan, M. J. van der. Multiple Testing Procedures with Applications to Genomics. (Springer Science &amp; Business Media, 2007). 466. Maddison, W. P. &amp; FitzJohn, R. G. The Unsolved Challenge to Phylogenetic Correlation Tests for Categorical Characters. Systematic Biology 64, 127–136 (2015). 467. Sham, P. C. &amp; Purcell, S. M. Statistical power and significance testing in large-scale genetic studies. Nature Reviews Genetics 15, 335–346 (2014). 468. Lengauer, T. &amp; Sing, T. Bioinformatics-assisted anti-HIV therapy. Nature Reviews Microbiology 4, 790–797 (2006). 469. Zhang, J., Rhee, S.-Y., Taylor, J. &amp; Shafer, R. W. Comparison of the Precision and Sensitivity of the Antivirogram and PhenoSense HIV Drug Susceptibility Assays. JAIDS Journal of Acquired Immune Deficiency Syndromes 38, 439–444 (2005). 470. Beerenwinkel, N. et al. Geno2pheno: Estimating phenotypic drug resistance from HIV-1 genotypes. Nucleic Acids Research 31, 3850–3855 (2003). 471. Shen, C., Yu, X., Harrison, R. W. &amp; Weber, I. T. Automated prediction of HIV drug resistance from genotype data. BMC Bioinformatics 17, 278 (2016). 472. Yu, X., Weber, I. T. &amp; Harrison, R. W. Prediction of HIV drug resistance from genotype with encoded three-dimensional protein structure. BMC Genomics 15, S1 (2014). 473. Sheik Amamuddy, O., Bishop, N. T. &amp; Tastan Bishop, Ö. Improving fold resistance prediction of HIV-1 against protease and reverse transcriptase inhibitors using artificial neural networks. BMC Bioinformatics 18, 369 (2017). 474. Beerenwinkel, N. et al. Geno2pheno: Interpreting genotypic HIV drug resistance tests. IEEE Intelligent Systems 16, 35–41 (2001). 475. Araya, S. T. &amp; Hazelhurst, S. Support vector machine prediction of HIV-1 drug resistance using the viral nucleotide patterns. Transactions of the Royal Society of South Africa 64, 62–72 (2009). 476. Riemenschneider, M., Senge, R., Neumann, U., Hüllermeier, E. &amp; Heider, D. Exploiting HIV-1 protease and reverse transcriptase cross-resistance information for improved drug resistance prediction by means of multi-label classification. BioData Mining 9, 10 (2016). 477. Heider, D., Senge, R., Cheng, W. &amp; Hüllermeier, E. Multilabel classification for exploiting cross-resistance information in HIV-1 drug resistance prediction. Bioinformatics 29, 1946–1952 (2013). 478. Drăghici, S. &amp; Potter, R. B. Predicting HIV drug resistance with neural networks. Bioinformatics 19, 98–107 (2003). 479. Steiner, M. C., Gibson, K. M. &amp; Crandall, K. A. Drug Resistance Prediction Using Deep Learning Techniques on HIV-1 Sequence Data. Viruses 12, 560 (2020). 480. Mooney, A. C. et al. Beyond Social Desirability Bias: Investigating Inconsistencies in Self-Reported HIV Testing and Treatment Behaviors Among HIV-Positive Adults in North West Province, South Africa. AIDS and Behavior 22, 2368–2379 (2018). 481. Tibshirani, R. Regression Shrinkage and Selection Via the Lasso. Journal of the Royal Statistical Society: Series B (Methodological) 58, 267–288 (1996). 482. Brier, G. W. Verification of Forecasts Expressed in Terms of Probability. Monthly Weather Review 78, 1–3 (1950). 483. Gascuel, O. et al. Twelve Numerical, Symbolic and Hybrid Supervised Classification Methods. International Journal of Pattern Recognition and Artificial Intelligence 12, 517–571 (1998). 484. Goeman, J. J. &amp; Solari, A. Multiple hypothesis testing in genomics. Statistics in Medicine 33, 1946–1978 (2014). 485. Rennie, J. D., Shih, L., Teevan, J. &amp; Karger, D. R. Tackling the Poor Assumptions of Naive Bayes Text Classifiers. in Proceedings of the 20th international conference on machine learning (ICML-03) 616–623 (2003). 486. Breiman, L. Random Forests. Machine Learning 45, 5–32 (2001). 487. Alvarez Melis, D. &amp; Jaakkola, T. Towards Robust Interpretability with Self-Explaining Neural Networks. in Advances in Neural Information Processing Systems 31 (eds. Bengio, S. et al.) 7775–7784 (Curran Associates, Inc., 2018). 489. Zhang, Q., Wu, Y. N. &amp; Zhu, S.-C. Interpretable Convolutional Neural Networks. in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition 8827–8836 (2018). 490. Brodersen, K. H., Ong, C. S., Stephan, K. E. &amp; Buhmann, J. M. The Balanced Accuracy and Its Posterior Distribution. in 2010 20th International Conference on Pattern Recognition 3121–3124 (2010). doi:10.1109/ICPR.2010.764. 491. Schrödinger, LLC. The PyMOL molecular graphics system, version 1.8. (2015). 492. Rhee, S.-Y., Liu, T. F., Holmes, S. P. &amp; Shafer, R. W. HIV-1 Subtype B Protease and Reverse Transcriptase Amino Acid Covariation. PLOS Computational Biology 3, e87 (2007). 493. De Luca, A. et al. Improved Interpretation of Genotypic Changes in the HIV-1 Reverse Transcriptase Coding Region That Determine the Virological Response to Didanosine. The Journal of Infectious Diseases 196, 1645–1653 (2007). 494. Marcelin, A.-G. et al. Impact of HIV-1 reverse transcriptase polymorphism at codons 211 and 228 on virological response to didanosine. Antiviral Therapy 8 (2006). 495. Brown, A. J. L. et al. Reduced Susceptibility of Human Immunodeficiency Virus Type 1 (HIV-1) from Patients with Primary HIV Infection to Nonnucleoside Reverse Transcriptase Inhibitors Is Associated with Variation at Novel Amino Acid Sites. Journal of Virology 74, 10269–10273 (2000). 496. Clark, S. A., Shulman, N. S., Bosch, R. J. &amp; Mellors, J. W. Reverse transcriptase mutations 118I, 208Y, and 215Y cause HIV-1 hypersusceptibility to non-nucleoside reverse transcriptase inhibitors. AIDS 20, 981–984 (2006). 497. Nebbia, G., Sabin, C. A., Dunn, D. T. &amp; Geretti, A. M. Emergence of the H208Y mutation in the reverse transcriptase (RT) of HIV-1 in association with nucleoside RT inhibitor therapy. Journal of Antimicrobial Chemotherapy 59, 1013–1016 (2007). 498. Saracino, A. et al. Impact of unreported HIV-1 reverse transcriptase mutations on phenotypic resistance to nucleoside and non-nucleoside inhibitors. Journal of Medical Virology 78, 9–17 (2006). 499. Wu, T. T., Chen, Y. F., Hastie, T., Sobel, E. &amp; Lange, K. Genome-wide association analysis by lasso penalized logistic regression. Bioinformatics 25, 714–721 (2009). "],["learning-alignments-an-interesting-perspective.html", "Chapter 7 Learning alignments, an interesting perspective 7.1 Learning pairwise alignment 7.2 What else could we learn ?", " Chapter 7 Learning alignments, an interesting perspective 7.1 Learning pairwise alignment 7.1.1 DEDAL reference to transformer embedding Predict substitution matrix Reference other similar works drawback: only on proteins 7.1.2 predicting an alignment Transformer models can also predict tokens -&gt; predict “CIGAR string” or a an aligned sequence. Challenges: Longer sequences in DNA Size difference in the case of mapping Less information in a single nucleotide token than in proteins…. 7.2 What else could we learn ? 7.2.1 Learn to predict seeds or starting positions DeepMinimizer predict start position given a pair of sequences 7.2.2 Learn pre-processing functions i.e. either connections in MSR graph or sequence 2 sequence models "],["global-conclusion.html", "Global conclusion HPC part HIV part Final words", " Global conclusion HPC part We have developed a method to improve mapping by pre-processing biological sequences In terms of error rate and fraction of mapped reads Although transformations selected on whole human genome generalises to D. melanogaster and E coli genomes. Where to go next ? explore a larger space of transformations: develop more efficient ways to explore search space new search space reduction mehods Explore different applications: assembly, clustering, … Explore different types of transformations, i.e. less constraints given by us, ML/Seq2Seq,… HIV part We have used machine learning in order to find new drug resistance mutations in HIV We have showed a link to drug resistance for 6 mutations of the RT-pol protein, currently not classified as DRMS, but they have been identified as potentially linked to resistance previously These mutations seem to be accessory mutations and do not There seems to be no complex epistasis phenomena Where to go next: Confirm experimentally / in vivo the role these mutations have in resistance Explore more sensitive methods, lots of work on interpretable DL -&gt; restricted by dataset size… Explore metadata rich data, e.g. per treatment, Explore other organisms for which we have data -&gt; HCV ? Final words Alignments are fundamental, improvements in the creation and analysis steps are crucial and likely to help other people gain insight in biological processes. etc… "],["global-references.html", "Global References", " Global References 1. Watson, J. D. &amp; Crick, F. H. C. The Structure of Dna. Cold Spring Harbor Symposia on Quantitative Biology 18, 123–131 (1953). 2. Sanger, F. et al. Nucleotide sequence of bacteriophage φX174 DNA. Nature 265, 687–695 (1977). 3. Archer, C. T. et al. The genome sequence of e. Coli w (ATCC 9637): Comparative genome analysis and an improved genome-scale reconstruction of e. coli. BMC Genomics 12, 9 (2011). 4. Nurk, S. et al. The complete sequence of a human genome. Science 376, 44–53 (2022). 5. Pellicer, J., Fay, M. F. &amp; Leitch, I. J. The largest eukaryotic genome of them all? Botanical Journal of the Linnean Society 164, 10–15 (2010). 6. Macgregor, H. C. C-Value Paradox. in (eds. Brenner, S. &amp; Miller, J. H.) 249–250 (Academic Press, 2001). doi:10.1006/rwgn.2001.0301. 7. Alberts, B. et al. Molecular Biology of the Cell. 4th edition. (Garland Science, 2002). 8. Crick, F. H. C., Barnett, L., Brenner, S. &amp; Watts-Tobin, R. J. General Nature of the Genetic Code for Proteins. Nature 192, 1227–1232 (1961). 9. International Human Genome Sequencing Consortium. Finishing the euchromatic sequence of the human genome. Nature 431, 931–945 (2004). 10. Elkon, R. &amp; Agami, R. Characterization of noncoding regulatory DNA in the human genome. Nature Biotechnology 35, 732–746 (2017). 11. Omenn, G. S. Reflections on the HUPO human proteome project, the flagship project of the human proteome organization, at 10 years. Molecular &amp; Cellular Proteomics : MCP 20, 100062 (2021). 12. Shabalina, S. A. &amp; Spiridonov, N. A. The mammalian transcriptome and the function of non-coding DNA sequences. Genome Biology 5, 105 (2004). 13. ENCODE Project Consortium. An integrated encyclopedia of DNA elements in the human genome. Nature 489, 57–74 (2012). 14. Chatterjee, N. &amp; Walker, G. C. Mechanisms of DNA damage, repair, and mutagenesis: DNA Damage and Repair. Environmental and Molecular Mutagenesis 58, 235–263 (2017). 15. Fijalkowska, I. J., Schaaper, R. M. &amp; Jonczyk, P. DNA replication fidelity in escherichia coli: A multi-DNA polymerase affair. FEMS microbiology reviews 36, 1105–1121 (2012). 16. Pray, L. DNA replication and causes of mutation. Nature education 1, 214 (2008). 17. Gout, J.-F., Thomas, W. K., Smith, Z., Okamoto, K. &amp; Lynch, M. Large-scale detection of in vivo transcription errors. Proceedings of the National Academy of Sciences 110, 18584–18589 (2013). 18. Gout, J.-F. et al. The landscape of transcription errors in eukaryotic cells. Science Advances 3, e1701484 (2017). 19. Shcherbakov, D. et al. Ribosomal mistranslation leads to silencing of the unfolded protein response and increased mitochondrial biogenesis. Communications Biology 2, 1–16 (2019). 20. Desouky, O., Ding, N. &amp; Zhou, G. Targeted and non-targeted effects of ionizing radiation. Journal of Radiation Research and Applied Sciences 8, 247–254 (2015). 21. Kiefer, J. Effects of Ultraviolet Radiation on DNA. in (eds. Obe, G. &amp; Vijayalaxmi) 39–53 (Springer, 2007). doi:10.1007/978-3-540-71414-9_3. 22. Bennett, J. W. &amp; Klich, M. Mycotoxins. Clinical Microbiology Reviews 16, 497–516 (2003). 23. Kantidze, O. L., Velichko, A. K., Luzhin, A. V. &amp; Razin, S. V. Heat stress-induced DNA damage. Acta Naturae 8, 75–78 (2016). 24. Gregory, C. D. &amp; Milner, A. E. Regulation of cell survival in Burkitt lymphoma: implications from studies of apoptosis following cold-shock treatment. International Journal of Cancer 57, 419–426 (1994). 25. Gafter-Gvili, A. et al. Oxidative stress-induced DNA damage and repair in human peripheral blood mononuclear cells: Protective role of hemoglobin. PLoS ONE 8, e68341 (2013). 26. Roth, J. R. Frameshift mutations. Annual Review of Genetics 8, 319–346 (1974). 27. Kujovich, J. L. Factor V Leiden thrombophilia. Genetics in Medicine 13, 1–16 (2011). 28. Cutting, G. R. Cystic fibrosis genetics: from molecular understanding to clinical application. Nature Reviews Genetics 16, 45–56 (2015). 29. Fuchsberger, C. et al. The genetic architecture of type 2 diabetes. Nature 536, 41–47 (2016). 30. Morris, A. P. et al. Large-scale association analysis provides insights into the genetic architecture and pathophysiology of type 2 diabetes. Nature genetics 44, 981–990 (2012). 31. Woodford, N. &amp; Ellington, M. J. The emergence of antibiotic resistance by mutation. Clinical Microbiology and Infection 13, 5–18 (2007). 32. Rhee, S.-Y. et al. Human immunodeficiency virus reverse transcriptase and protease sequence database. Nucleic Acids Research 31, 298–303 (2003). 33. Sanger, F., Nicklen, S. &amp; Coulson, A. R. DNA sequencing with chain-terminating inhibitors. Proceedings of the National Academy of Sciences 74, 5463–5467 (1977). 34. Smith, L. M., Fung, S., Hunkapiller, M. W., Hunkapiller, T. J. &amp; Hood, L. E. The synthesis of oligonucleotides containing an aliphatic amino group at the 5′ terminus: Synthesis of fluorescent DNA primers for use in DNA sequence analysis. Nucleic Acids Research 13, 2399–2412 (1985). 35. Smith, L. M. et al. Fluorescence detection in automated DNA sequence analysis. Nature 321, 674–679 (1986). 36. Ansorge, W., Sproat, B., Stegemann, J., Schwager, C. &amp; Zenke, M. Automated DNA sequencing: Ultrasensitive detection of fluorescent bands during electrophoresis. Nucleic Acids Research 15, 4593–4602 (1987). 37. Shendure, J. &amp; Ji, H. Next-generation DNA sequencing. Nature Biotechnology 26, 1135–1145 (2008). 38. Collins, F. S., Morgan, M. &amp; Patrinos, A. The human genome project: Lessons from large-scale biology. Science 300, 286–290 (2003). 39. Liu, L. et al. Comparison of Next-Generation Sequencing Systems. Journal of Biomedicine and Biotechnology 2012, e251364 (2012). 40. The Cost of Sequencing a Human Genome. 41. Metzker, M. L. Sequencing technologies — the next generation. Nat Rev Genet 11, 31–46 (2010). 42. Canard, B. &amp; Sarfati, R. S. DNA polymerase fluorescent substrates with reversible 3’-tags. Gene 148, 1–6 (1994). 43. Nyren, P., Pettersson, B. &amp; Uhlen, M. Solid Phase DNA Minisequencing by an Enzymatic Luminometric Inorganic Pyrophosphate Detection Assay. Analytical Biochemistry 208, 171–175 (1993). 44. Mardis, E. R. A decade’s perspective on DNA sequencing technology. Nature 470, 198–203 (2011). 45. Stoler, N. &amp; Nekrutenko, A. Sequencing error profiles of illumina sequencing instruments. NAR Genomics and Bioinformatics 3, lqab019 (2021). 46. Sequencing Technology | Sequencing by synthesis. 47. Pollard, M. O., Gurdasani, D., Mentzer, A. J., Porter, T. &amp; Sandhu, M. S. Long reads: Their purpose and place. Human Molecular Genetics 27, R234–R241 (2018). 48. Eid, J. et al. Real-time DNA sequencing from single polymerase molecules. Science 323, 133–138 (2009). 49. Levene, M. J. et al. Zero-mode waveguides for single-molecule analysis at high concentrations. Science 299, 682–686 (2003). 50. Clarke, J. et al. Continuous base identification for single-molecule nanopore DNA sequencing. Nature Nanotechnology 4, 265–270 (2009). 51. Deamer, D., Akeson, M. &amp; Branton, D. Three decades of nanopore sequencing. Nature Biotechnology 34, 518–524 (2016). 52. Wick, R. R., Judd, L. M. &amp; Holt, K. E. Performance of neural network basecalling tools for Oxford Nanopore sequencing. Genome Biology 20, 129 (2019). 53. Rhoads, A. &amp; Au, K. F. PacBio Sequencing and Its Applications. Genomics, Proteomics &amp; Bioinformatics 13, 278–289 (2015). 54. Ip, C. L. C. et al. MinION analysis and reference consortium: Phase 1 data release and analysis. F1000Research 4, 1075 (2015). 55. Logsdon, G. A., Vollger, M. R. &amp; Eichler, E. E. Long-read human genome sequencing and its applications. Nat Rev Genet 21, 597–614 (2020). 56. Jain, M. et al. Nanopore sequencing and assembly of a human genome with ultra-long reads. Nature Biotechnology 36, 338–345 (2018). 57. Thar she blows! Ultra long read method for nanopore sequencing · loman labs. 58. Payne, A., Holmes, N., Rakyan, V. &amp; Loose, M. BulkVis: A graphical viewer for oxford nanopore bulk FAST5 files. Bioinformatics 35, 2193–2198 (2019). 59. Murigneux, V. et al. Comparison of long-read methods for sequencing and assembly of a plant genome. GigaScience 9, giaa146 (2020). 60. Chaisson, M. J. P. et al. Resolving the complexity of the human genome using single-molecule sequencing. Nature 517, 608–611 (2015). 61. Jain, M., Olsen, H. E., Paten, B. &amp; Akeson, M. The Oxford Nanopore MinION: delivery of nanopore sequencing to the genomics community. Genome Biology 17, 239 (2016). 62. Hong, M. et al. RNA sequencing: New technologies and applications in cancer research. Journal of Hematology &amp; Oncology 13, 166 (2020). 63. Ozsolak, F. &amp; Milos, P. M. RNA sequencing: advances, challenges and opportunities. Nature Reviews Genetics 12, 87–98 (2011). 64. Hunt, D. F., Yates, J. R., Shabanowitz, J., Winston, S. &amp; Hauer, C. R. Protein sequencing by tandem mass spectrometry. Proceedings of the National Academy of Sciences 83, 6233–6237 (1986). 65. Smith, B. J. Protein Sequencing Protocols. (Springer Science &amp; Business Media, 2002). 66. Restrepo-Pérez, L., Joo, C. &amp; Dekker, C. Paving the way to single-molecule protein sequencing. Nature Nanotechnology 13, 786–796 (2018). 67. Weirather, J. L. et al. Comprehensive comparison of pacific biosciences and oxford nanopore technologies and their applications to transcriptome analysis. F1000Research 6, 100 (2017). 68. Wang, Y., Zhao, Y., Bollas, A., Wang, Y. &amp; Au, K. F. Nanopore sequencing technology, bioinformatics and applications. Nature Biotechnology 39, 1348–1365 (2021). 69. Ma, X. et al. Analysis of error profiles in deep next-generation sequencing data. Genome Biology 20, 50 (2019). 70. Lima, L. et al. Comparative assessment of long-read error correction software applied to nanopore RNA-sequencing data. Briefings in Bioinformatics 21, 1164–1181 (2020). 71. Fu, S., Wang, A. &amp; Au, K. F. A comparative evaluation of hybrid error correction methods for error-prone long reads. Genome Biology 20, 26 (2019). 72. Zhang, H., Jain, C. &amp; Aluru, S. A comprehensive evaluation of long read error correction methods. BMC Genomics 21, 889 (2020). 73. Amarasinghe, S. L. et al. Opportunities and challenges in long-read sequencing data analysis. Genome Biology 21, 30 (2020). 74. Ruan, J. &amp; Li, H. Fast and accurate long-read assembly with wtdbg2. Nature Methods 17, 155–158 (2020). 75. Koren, S. et al. Canu: scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation. Genome Research 27, 722–736 (2017). 76. Tischler, G. &amp; Myers, E. W. Non Hybrid Long Read Consensus Using Local De Bruijn Graph Assembly. 106252 https://www.biorxiv.org/content/10.1101/106252v1 (2017) doi:10.1101/106252. 77. Warren, R. L. et al. ntEdit: Scalable genome sequence polishing. Bioinformatics 35, 4430–4432 (2019). 78. Hepler, N. L. et al. An improved circular consensus algorithm with an application to detect HIV-1 drug-resistance associated mutations (DRAMs). in (2016). 79. Simpson, J. T. et al. Detecting DNA cytosine methylation using nanopore sequencing. Nature Methods 14, 407–410 (2017). 80. Hackl, T., Hedrich, R., Schultz, J. &amp; Förster, F. Proovread : Large-scale high-accuracy PacBio correction through iterative short read consensus. Bioinformatics 30, 3004–3011 (2014). 81. Miclotte, G. et al. Jabba: Hybrid error correction for long sequencing reads. Algorithms for Molecular Biology 11, 10 (2016). 82. Koren, S. et al. Hybrid error correction and de novo assembly of single-molecule sequencing reads. Nature Biotechnology 30, 693–700 (2012). 83. Salmela, L. &amp; Rivals, E. LoRDEC: Accurate and efficient long read error correction. Bioinformatics 30, 3506–3514 (2014). 84. Walker, B. J. et al. Pilon: An Integrated Tool for Comprehensive Microbial Variant Detection and Genome Assembly Improvement. PLOS ONE 9, e112963 (2014). 85. Vaser, R., Sović, I., Nagarajan, N. &amp; Šikić, M. Fast and accurate de novo genome assembly from long uncorrected reads. Genome Research 27, 737–746 (2017). 86. Wenger, A. M. et al. Accurate circular consensus long-read sequencing improves variant detection and assembly of a human genome. Nature Biotechnology 37, 1155–1162 (2019). 87. Timp, W., Comer, J. &amp; Aksimentiev, A. DNA Base-Calling from a Nanopore Using a Viterbi Algorithm. Biophysical Journal 102, L37–L39 (2012). 88. Perešíni, P., Boža, V., Brejová, B. &amp; Vinař, T. Nanopore base calling on the edge. Bioinformatics 37, 4661–4667 (2021). 89. Boža, V., Brejová, B. &amp; Vinař, T. DeepNano: Deep recurrent neural networks for base calling in MinION nanopore reads. PLOS ONE 12, e0178751 (2017). 90. Karst, S. M. et al. High-accuracy long-read amplicon sequences using unique molecular identifiers with Nanopore or PacBio sequencing. Nature Methods 18, 165–169 (2021). 91. Chen, Z. et al. Highly accurate fluorogenic DNA sequencing with information theorybased error correction. Nature Biotechnology 35, 1170–1178 (2017). 92. High Performance Long Read Assay Enables Contiguous Data up to 10Kb on Existing Illumina Platforms. 93. Booeshaghi, A. S. &amp; Pachter, L. Pseudoalignment facilitates assignment of error-prone Ultima Genomics reads. doi:10.1101/2022.06.04.494845. 94. Delahaye, C. &amp; Nicolas, J. Sequencing DNA with nanopores: Troubles and biases. PLOS ONE 16, e0257521 (2021). 95. Goodwin, S. et al. Oxford Nanopore sequencing, hybrid error correction, and de novo assembly of a eukaryotic genome. Genome Research 25, 1750–1756 (2015). 96. Dohm, J. C., Peters, P., Stralis-Pavese, N. &amp; Himmelbauer, H. Benchmarking of long-read correction methods. NAR Genomics and Bioinformatics 2, (2020). 97. Foox, J. et al. Performance assessment of DNA sequencing platforms in the ABRF Next-Generation Sequencing Study. Nature Biotechnology 39, 1129–1140 (2021). 98. Huang, Y.-T., Liu, P.-Y. &amp; Shih, P.-W. Homopolish: A method for the removal of systematic errors in nanopore sequencing by homologous polishing. Genome Biology 22, 95 (2021). 99. Rang, F. J., Kloosterman, W. P. &amp; Ridder, J. de. From squiggle to basepair: Computational approaches for improving nanopore sequencing read accuracy. Genome Biology 19, 90 (2018). 100. Sarkozy, P., Jobbágy, Á. &amp; Antal, P. Calling Homopolymer Stretches from Raw Nanopore Reads by Analyzing k-mer Dwell Times. in (eds. Eskola, H., Väisänen, O., Viik, J. &amp; Hyttinen, J.) 241–244 (Springer, 2018). doi:10.1007/978-981-10-5122-7_61. 101. Hawkins, J. A., Jones, S. K., Finkelstein, I. J. &amp; Press, W. H. Indel-correcting DNA barcodes for high-throughput sequencing. Proceedings of the National Academy of Sciences 115, E6217–E6226 (2018). 102. Srivathsan, A. et al. A MinION-based pipeline for fast and cost-effective DNA barcoding. Molecular Ecology Resources 18, 1035–1049 (2018). 103. Wang, Y., Noor-A-Rahim, Md., Gunawan, E., Guan, Y. L. &amp; Poh, C. L. Construction of bio-constrained code for DNA data storage. IEEE Communications Letters 23, 963–966 (2019). 104. R10.3: the newest nanopore for high accuracy nanopore sequencing now available in store. 105. Zhou, L. et al. Detection of DNA homopolymer with graphene nanopore. Journal of Vacuum Science &amp; Technology B 37, 061809 (2019). 106. Goto, Y., Yanagi, I., Matsui, K., Yokoi, T. &amp; Takeda, K. Identification of four single-stranded DNA homopolymers with a solid-state nanopore in alkaline CsCl solution. Nanoscale 10, 20844–20850 (2018). 107. Nurk, S. et al. HiCanu: Accurate assembly of segmental duplications, satellites, and allelic variants from high-fidelity long reads. Genome Res. 30, 1291–1305 (2020). 108. Ekim, B., Berger, B. &amp; Chikhi, R. Minimizer-space de Bruijn graphs: Whole-genome assembly of long reads in minutes on a personal computer. Cell Systems 12, 958–968.e6 (2021). 109. Shafin, K. et al. Nanopore sequencing and the Shasta toolkit enable efficient de novo assembly of eleven human genomes. Nature Biotechnology 38, 1044–1053 (2020). 110. Miller, J. R. et al. Aggressive assembly of pyrosequencing reads with mates. Bioinformatics 24, 2818–2824 (2008). 111. Sahlin, K. &amp; Medvedev, P. De Novo Clustering of Long-Read Transcriptome Data Using a Greedy, Quality Value-Based Algorithm. Journal of Computational Biology 27, 472–484 (2020). 112. Au, K. F., Underwood, J. G., Lee, L. &amp; Wong, W. H. Improving PacBio Long Read Accuracy by Short Read Alignment. PLOS ONE 7, e46679 (2012). 113. Hu, R., Sun, G. &amp; Sun, X. LSCplus: a fast solution for improving long read accuracy by short read alignment. BMC Bioinformatics 17, 451 (2016). 114. Li, H. Minimap2: Pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018). 115. Jain, C. et al. Weighted minimizer sampling improves long read mapping. Bioinformatics 36, i111–i118 (2020). 116. Van Neste, C., Van Nieuwerburgh, F., Van Hoofstat, D. &amp; Deforce, D. Forensic STR analysis using massive parallel sequencing. Forensic Science International: Genetics 6, 810–818 (2012). 117. Short-read sequencing by binding. 118. Cetin, A. E. et al. Plasmonic sensor could enable label-free DNA sequencing. ACS Sensors 3, 561–568 (2018). 119. Almogy, G. et al. Cost-efficient whole genome-sequencing using novel mostly natural sequencing-by-synthesis chemistry and open fluidics platform. doi:10.1101/2022.05.29.493900. 120. Sunagawa, S. et al. Tara Oceans: towards global ocean ecosystems biology. Nature Reviews Microbiology 18, 428–445 (2020). 121. Lewin, H. A. et al. Earth BioGenome project: Sequencing life for the future of life. Proceedings of the National Academy of Sciences 115, 4325–4333 (2018). 122. Lightbody, G. et al. Review of applications of high-throughput sequencing in personalized medicine: Barriers and facilitators of future progress in research and clinical application. Briefings in Bioinformatics 20, 1795–1811 (2019). 123. Sung, W.-K. Algorithms in bioinformatics: A practical introduction. (Chapman; Hall/CRC, 2011). doi:10.1201/9781420070347. 124. Hamming, R. W. Coding and Information Theory. (Prentice-Hall, 1980). 125. Gusfield, D. Algorithms on strings, trees, and sequences: Computer science and computational biology. (Cambridge University Press, 1997). doi:10.1017/CBO9780511574931. 126. Levenshtein, V. I. Binary codes capable of correcting deletions, insertions and reversals. Soviet Physics Doklady 10, 707 (1966). 127. Hardison, R. C. Comparative Genomics. PLOS Biology 1, e58 (2003). 128. Felsenstein, J. Evolutionary trees from DNA sequences: A maximum likelihood approach. Journal of Molecular Evolution 17, 368–376 (1981). 129. Kumar, S., Tamura, K. &amp; Nei, M. MEGA: Molecular evolutionary genetics analysis software for microcomputers. Bioinformatics 10, 189–191 (1994). 130. Kozlov, A. M., Darriba, D., Flouri, T., Morel, B. &amp; Stamatakis, A. RAxML-NG: A fast, scalable and user-friendly tool for maximum likelihood phylogenetic inference. Bioinformatics 35, 4453–4455 (2019). 131. Guindon, S. et al. New algorithms and methods to estimate maximum-likelihood phylogenies: Assessing the performance of PhyML 3.0. Systematic Biology 59, 307–321 (2010). 132. Price, M. N., Dehal, P. S. &amp; Arkin, A. P. FastTree 2 Approximately Maximum-Likelihood Trees for Large Alignments. PLOS ONE 5, e9490 (2010). 133. Jumper, J. et al. Highly accurate protein structure prediction with AlphaFold. Nature 596, 583–589 (2021). 134. Karplus, K. et al. Predicting protein structure using only sequence information. Proteins: Structure, Function, and Bioinformatics 37, 121–125 (1999). 135. Watson, J. D., Laskowski, R. A. &amp; Thornton, J. M. Predicting protein function from sequence and structural data. Current Opinion in Structural Biology 15, 275–284 (2005). 136. Lee, D., Redfern, O. &amp; Orengo, C. Predicting protein function from sequence and structure. Nature Reviews Molecular Cell Biology 8, 995–1005 (2007). 137. Salmela, L. &amp; Schröder, J. Correcting errors in short reads by multiple alignments. Bioinformatics 27, 1455–1461 (2011). 138. Medvedev, P., Stanciu, M. &amp; Brudno, M. Computational methods for discovering structural variation with next-generation sequencing. Nature Methods 6, S13–S20 (2009). 139. Mahmoud, M. et al. Structural variant calling: the long and the short of it. Genome Biology 20, 246 (2019). 140. Needleman, S. B. &amp; Wunsch, C. D. A general method applicable to the search for similarities in the amino acid sequence of two proteins. Journal of Molecular Biology 48, 443–453 (1970). 141. Smith, T. F. &amp; Waterman, M. S. Identification of common molecular subsequences. Journal of Molecular Biology 147, 195–197 (1981). 142. Bradley, S. P., Hax, A. C. &amp; Magnanti, T. L. Applied Mathematical Programming. (Addison-Wesley Publishing Company, 1977). 143. Bellman, R. The theory of dynamic programming. Bulletin of the American Mathematical Society 60, 503–515 (1954). 144. Masek, W. J. &amp; Paterson, M. S. A faster algorithm computing string edit distances. Journal of Computer and System Sciences 20, 18–31 (1980). 145. Vinh, N. X., Epps, J. &amp; Bailey, J. Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance. Journal of Machine Learning Research 11, 18 (2010). 146. Ullman, J. D., Aho, A. V. &amp; Hirschberg, D. S. Bounds on the complexity of the longest common subsequence problem. Journal of the ACM 23, 112 (1976). 147. Hirschberg, D. S. A linear space algorithm for computing maximal common subsequences. Communications of the ACM 18, 341343 (1975). 148. Myers, E. W. &amp; Miller, W. Optimal alignments in linear space. Bioinformatics 4, 11–17 (1988). 149. Rice, P., Longden, I. &amp; Bleasby, A. EMBOSS: The european molecular biology open software suite. Trends in genetics 16, 276277 (2000). 150. Huang, X. &amp; Miller, W. A time-efficient, linear-space local similarity algorithm. Advances in Applied Mathematics 12, 337–357 (1991). 151. Waterman, M. S. &amp; Eggert, M. A new algorithm for best subsequence alignments with application to tRNA-rRNA comparisons. Journal of Molecular Biology 197, 723–728 (1987). 152. Stajich, J. E. et al. The Bioperl Toolkit: Perl Modules for the Life Sciences. Genome Research 12, 1611–1618 (2002). 153. Gentleman, R. C. et al. Bioconductor: open software development for computational biology and bioinformatics. Genome Biology 5, R80 (2004). 154. Daily, J. Parasail: SIMD c library for global, semi-global, and local pairwise sequence alignments. BMC Bioinformatics 17, 81 (2016). 155. Frohmberg, W., Kierzynka, M., Blazewicz, J. &amp; Wojciechowski, P. G-PAS 2.0 an improved version of protein alignment tool with an efficient backtracking routine on multiple GPUs. Bulletin of the Polish Academy of Sciences: Technical Sciences 60, 491–494 (2012). 156. Altschul, S. F. Substitution Matrices. in (John Wiley &amp; Sons, Ltd, 2013). doi:10.1002/9780470015902.a0005265.pub3. 157. Dayhoff, M. O., Schwartz, R. M. &amp; Orcutt, B. C. A model of evolutionary change in proteins. A Model of Evolutionary Change in Proteins 345–352 (1978). 158. Müller, T. &amp; Vingron, M. Modeling amino acid replacement. Journal of Computational Biology: A Journal of Computational Molecular Cell Biology 7, 761–776 (2000). 159. Henikoff, S. &amp; Henikoff, J. G. Amino acid substitution matrices from protein blocks. Proceedings of the National Academy of Sciences 89, 10915–10919 (1992). 160. Whelan, S. &amp; Goldman, N. A general empirical model of protein evolution derived from multiple protein families using a maximum-likelihood approach. Molecular Biology and Evolution 18, 691–699 (2001). 161. Le, S. Q. &amp; Gascuel, O. An improved general amino acid replacement matrix. Molecular Biology and Evolution 25, 1307–1320 (2008). 162. Müller, T., Rahmann, S. &amp; Rehmsmeier, M. Non-symmetric score matrices and the detection of homologous transmembrane proteins. Bioinformatics 17, S182–S189 (2001). 163. Ng, P. C., Henikoff, J. G. &amp; Henikoff, S. PHAT: a transmembrane-specific substitution matrix. Predicted hydrophobic and transmembrane. Bioinformatics (Oxford, England) 16, 760–766 (2000). 164. Trivedi, R. &amp; Nagarajaram, H. A. Amino acid substitution scoring matrices specific to intrinsically disordered regions in proteins. Scientific Reports 9, 16380 (2019). 165. Goonesekere, N. C. W. &amp; Lee, B. Context-specific amino acid substitution matrices and their use in the detection of protein homologs. Proteins: Structure, Function, and Bioinformatics 71, 910–919 (2008). 166. Paila, U., Kondam, R. &amp; Ranjan, A. Genome bias influences amino acid choices: analysis of amino acid substitution and re-compilation of substitution matrices exclusive to an AT-biased genome. Nucleic Acids Research 36, 6664–6675 (2008). 167. Nickle, D. C. et al. HIV-specific probabilistic models of protein evolution. PLoS ONE 2, e503 (2007). 168. Sardiu, M. E., Alves, G. &amp; Yu, Y.-K. Score statistics of global sequence alignment from the energy distribution of a modified directed polymer and directed percolation problem. Physical Review. E, Statistical, Nonlinear, and Soft Matter Physics 72, 061917 (2005). 169. Chiaromonte, F., Yap, V. B. &amp; Miller, W. Scoring pairwise genomic sequence alignments. in 115–126 (WORLD SCIENTIFIC, 2001). doi:10.1142/9789812799623_0012. 170. Schneider, A., Cannarozzi, G. M. &amp; Gonnet, G. H. Empirical codon substitution matrix. BMC bioinformatics 6, 134 (2005). 171. Doron-Faigenboim, A. &amp; Pupko, T. A combined empirical and mechanistic codon model. Molecular Biology and Evolution 24, 388–397 (2007). 172. Gotoh, O. An improved algorithm for matching biological sequences. Journal of Molecular Biology 162, 705–708 (1982). 173. Benner, S. A., Cohen, M. A. &amp; Gonnet, G. H. Empirical and Structural Models for Insertions and Deletions in the Divergent Evolution of Proteins. Journal of Molecular Biology 229, 1065–1082 (1993). 174. Gu, X. &amp; Li, W.-H. The size distribution of insertions and deletions in human and rodent pseudogenes suggests the logarithmic gap penalty for sequence alignment. Journal of Molecular Evolution 40, 464–473 (1995). 175. Waterman, M. S. Efficient sequence alignment algorithms. Journal of Theoretical Biology 108, 333–337 (1984). 176. Pearson, W. R. &amp; Miller, W. [27] Dynamic programming algorithms for biological sequence comparison. in vol. 210 575–601 (Academic Press, 1992). 177. Chao, J., Tang, F. &amp; Xu, L. Developments in Algorithms for Sequence Alignment: A Review. Biomolecules 12, 546 (2022). 178. Spouge, J. L. Speeding up dynamic programming algorithms for finding optimal lattice paths. SIAM Journal on Applied Mathematics 49, 1552–1566 (1989). 179. Fickett, J. W. Fast optimal alignment. Nucleic Acids Research 12, 175–179 (1984). 180. Marco-Sola, S., Moure, J. C., Moreto, M. &amp; Espinosa, A. Fast gap-affine pairwise alignment using the wavefront algorithm. Bioinformatics (2020) doi:10.1093/bioinformatics/btaa777. 181. Durbin, R., Eddy, S. R., Krogh, A. &amp; Mitchison, G. Biological sequence analysis: Probabilistic models of proteins and nucleic acids. (Cambridge University Press, 1998). doi:10.1017/CBO9780511790492. 182. Söding, J. Protein homology detection by HMM-HMM comparison. Bioinformatics (Oxford, England) 21, 951–960 (2005). 183. Finn, R. D., Clements, J. &amp; Eddy, S. R. HMMER web server: Interactive sequence similarity searching. Nucleic Acids Research 39, W29–W37 (2011). 184. Wang, J., Keightley, P. D. &amp; Johnson, T. MCALIGN2: Faster, accurate global pairwise alignment of non-coding DNA sequences based on explicit models of indel evolution. BMC Bioinformatics 7, 292 (2006). 185. Katoh, K., Misawa, K., Kuma, K. &amp; Miyata, T. MAFFT: A novel method for rapid multiple sequence alignment based on fast fourier transform. Nucleic Acids Research 30, 3059–3066 (2002). 186. Sun, Y. &amp; Buhler, J. Choosing the best heuristic for seeded alignment of DNA sequences. BMC Bioinformatics 7, 133 (2006). 187. Li, H. &amp; Homer, N. A survey of sequence alignment algorithms for next-generation sequencing. Briefings in Bioinformatics 11, 473–483 (2010). 188. Altschul, S. F., Gish, W., Miller, W., Myers, E. W. &amp; Lipman, D. J. Basic local alignment search tool. Journal of Molecular Biology 215, 403–410 (1990). 189. Edgar, R. C. Search and clustering orders of magnitude faster than BLAST. Bioinformatics 26, 2460–2461 (2010). 190. Shpaer, E. G. et al. Sensitivity and Selectivity in Protein Similarity Searches: A Comparison of SmithWaterman in Hardware to BLAST and FASTA. Genomics 38, 179–191 (1996). 191. Pearson, W. R. &amp; Lipman, D. J. Improved tools for biological sequence comparison. Proceedings of the National Academy of Sciences of the United States of America 85, 2444–2448 (1988). 192. Lipman, D. J. &amp; Pearson, W. R. Rapid and sensitive protein similarity searches. Science (New York, N.Y.) 227, 1435–1441 (1985). 193. Saripella, G. V., Sonnhammer, E. L. L. &amp; Forslund, K. Benchmarking the next generation of homology inference tools. Bioinformatics 32, 2636 (2016). 194. Finn, R. D. et al. The Pfam protein families database: towards a more sustainable future. Nucleic Acids Research 44, D279 (2016). 195. Essoussi, N. &amp; Fayech, S. A comparison of four pair-wise sequence alignment methods. Bioinformation 2, 166–168 (2007). 196. Karlin, S. &amp; Altschul, S. F. Methods for assessing the statistical significance of molecular sequence features by using general scoring schemes. Proceedings of the National Academy of Sciences 87, 2264–2268 (1990). 197. Mott, R. Alignment: Statistical Significance. in (John Wiley &amp; Sons, Ltd, 2005). doi:10.1038/npg.els.0005264. 198. Buchfink, B., Xie, C. &amp; Huson, D. H. Fast and sensitive protein alignment using DIAMOND. Nature Methods 12, 59–60 (2015). 199. Buchfink, B., Reuter, K. &amp; Drost, H.-G. Sensitive protein alignments at tree-of-life scale using DIAMOND. Nature Methods 18, 366–368 (2021). 200. Bray, N., Dubchak, I. &amp; Pachter, L. AVID: A global alignment program. Genome Research 13, 97–102 (2003). 201. Delcher, A. L., Phillippy, A., Carlton, J. &amp; Salzberg, S. L. Fast algorithms for large-scale genome alignment and comparison. Nucleic Acids Research 30, 2478–2483 (2002). 202. Ferragina, P. &amp; Manzini, G. Proceedings 41st annual symposium on foundations of computer science. in 390–398 (2000). doi:10.1109/SFCS.2000.892127. 203. Burrows, M. &amp; Wheeler, D. A block-sorting lossless data compression algorithm. (1994). 204. Lam, T. W., Sung, W. K., Tam, S. L., Wong, C. K. &amp; Yiu, S. M. Compressed indexing and local alignment of DNA. Bioinformatics 24, 791–797 (2008). 205. Langmead, B. &amp; Salzberg, S. L. Fast gapped-read alignment with Bowtie 2. Nat Methods 9, 357–359 (2012). 206. Li, H. &amp; Durbin, R. Fast and accurate short read alignment with burrowswheeler transform. Bioinformatics 25, 1754–1760 (2009). 207. Li, H. &amp; Durbin, R. Fast and accurate long-read alignment with burrowswheeler transform. Bioinformatics 26, 589–595 (2010). 208. Li, H. Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. https://arxiv.org/abs/1303.3997 (2013). 209. Liu, Y. &amp; Schmidt, B. Long read alignment based on maximal exact match seeds. Bioinformatics 28, i318–i324 (2012). 210. Multiple Sequence Alignment Methods. vol. 1079 (Humana Press, 2014). 211. Wang, L. &amp; Jiang, T. On the complexity of multiple sequence alignment. Journal of Computational Biology 1, 337–348 (1994). 212. Just, W. Computational complexity of multiple sequence alignment with SP-score. Journal of Computational Biology 8, 615–623 (2001). 213. Feng, D.-F. &amp; Doolittle, R. F. Progressive sequence alignment as a prerequisitetto correct phylogenetic trees. Journal of Molecular Evolution 25, 351–360 (1987). 214. Jones, D. T., Taylor, W. R. &amp; Thornton, J. M. The rapid generation of mutation data matrices from protein sequences. Bioinformatics 8, 275–282 (1992). 215. Blaisdell, B. E. A measure of the similarity of sets of sequences not requiring sequence alignment. Proceedings of the National Academy of Sciences 83, 5155–5159 (1986). 216. Altschul, S. F., Carroll, R. J. &amp; Lipman, D. J. Weights for data related by a tree. Journal of Molecular Biology 207, 647–653 (1989). 217. Edgar, R. C. &amp; Sjölander, K. A comparison of scoring functions for protein sequence profile alignment. Bioinformatics 20, 1301–1308 (2004). 218. Notredame, C., Holm, L. &amp; Higgins, D. G. COFFEE: An objective function for multiple sequence alignments. Bioinformatics 14, 407–422 (1998). 219. Thompson, J. D., Higgins, D. G. &amp; Gibson, T. J. CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice. Nucleic Acids Research 22, 4673–4680 (1994). 220. Thompson, J. D., Gibson, T. J., Plewniak, F., Jeanmougin, F. &amp; Higgins, D. G. The CLUSTAL_x windows interface: Flexible strategies for multiple sequence alignment aided by quality analysis tools. Nucleic Acids Research 25, 4876–4882 (1997). 221. Notredame, C., Higgins, D. G. &amp; Heringa, J. T-coffee: a novel method for fast and accurate multiple sequence alignment11Edited by J. Thornton. Journal of Molecular Biology 302, 205–217 (2000). 222. Edgar, R. C. MUSCLE: A multiple sequence alignment method with reduced time and space complexity. BMC Bioinformatics 5, 113 (2004). 223. Edgar, R. C. MUSCLE: Multiple sequence alignment with high accuracy and high throughput. Nucleic Acids Research 32, 1792–1797 (2004). 224. Do, C. B., Mahabhashyam, M. S. P., Brudno, M. &amp; Batzoglou, S. ProbCons: Probabilistic consistency-based multiple sequence alignment. Genome Research 15, 330–340 (2005). 225. Notredame, C. Recent Evolutions of Multiple Sequence Alignment Algorithms. PLOS Computational Biology 3, e123 (2007). 226. Notredame, C. Recent progress in multiple sequence alignment: A survey. Pharmacogenomics 3, 131–144 (2002). 227. Edgar, R. C. &amp; Batzoglou, S. Multiple sequence alignment. Current Opinion in Structural Biology 16, 368–373 (2006). 228. Pais, F. S.-M., Ruy, P. de C., Oliveira, G. &amp; Coimbra, R. S. Assessing the efficiency of multiple sequence alignment programs. Algorithms for Molecular Biology 9, 4 (2014). 229. Thompson, J. D., Plewniak, F. &amp; Poch, O. BAliBASE: a benchmark alignment database for the evaluation of multiple alignment programs. Bioinformatics 15, 87–88 (1999). 230. Eddy, S. R. Multiple Alignment Using Hidden Markov Models. 7. 231. Liu, Y., Schmidt, B. &amp; Maskell, D. L. MSAProbs: Multiple sequence alignment based on pair hidden markov models and partition function posterior probabilities. Bioinformatics 26, 1958–1964 (2010). 232. Lemoine, F., Blassel, L., Voznica, J. &amp; Gascuel, O. COVID-align: Accurate online alignment of hCoV-19 genomes using a profile HMM. Bioinformatics (2020) doi:10.1093/bioinformatics/btaa871. 233. Aksamentov, I., Roemer, C., Hodcroft, E. &amp; Neher, R. Nextclade: clade assignment, mutation calling and quality control for viral genomes. Journal of Open Source Software 6, 3773 (2021). 234. Kim, J., Pramanik, S. &amp; Chung, M. J. Multiple sequence alignment using simulated annealing. Bioinformatics 10, 419–426 (1994). 235. Ishikawa, M. et al. Multiple sequence alignment by parallel simulated annealing. Bioinformatics 9, 267–273 (1993). 236. Huo, H. &amp; Stojkovic, V. Third international conference on natural computation (ICNC 2007). in vol. 2 270–274 (2007). 237. Chowdhury, B. &amp; Garai, G. A review on multiple sequence alignment from the perspective of genetic algorithm. Genomics 109, 419–431 (2017). 238. Zhang, C. &amp; Wong, A. K. C. A genetic algorithm for multiple molecular sequence alignment. Bioinformatics 13, 565–581 (1997). 239. Notredame, C. &amp; Higgins, D. G. SAGA: Sequence alignment by genetic algorithm. Nucleic Acids Research 24, 1515–1524 (1996). 240. Naznin, F., Sarker, R. &amp; Essam, D. Vertical decomposition with genetic algorithm for multiple sequence alignment. BMC Bioinformatics 12, 353 (2011). 241. Naznin, F., Sarker, R. &amp; Essam, D. Progressive alignment method using genetic algorithm for multiple sequence alignment. IEEE Transactions on Evolutionary Computation 16, 615–631 (2012). 242. Garriga, E. et al. Large multiple sequence alignments with a root-to-leaf regressive method. Nature Biotechnology 37, 1466–1470 (2019). 243. Alser, M. et al. Technology dictates algorithms: Recent developments in read alignment. Genome Biology 22, 249 (2021). 244. Schbath, S. et al. Mapping reads on a genomic sequence: An algorithmic overview and a practical comparative analysis. Journal of Computational Biology 19, 796–813 (2012). 245. Hatem, A., Bozdağ, D., Toland, A. E. &amp; Çatalyürek, Ü. V. Benchmarking short sequence mapping tools. BMC Bioinformatics 14, 184 (2013). 246. Canzar, S. &amp; Salzberg, S. L. Short read mapping: An algorithmic tour. Proceedings of the IEEE 105, 436–458 (2017). 247. Břinda, K., Boeva, V. &amp; Kucherov, G. RNF: A general framework to evaluate NGS read mappers. Bioinformatics 32, 136–139 (2016). 248. Ruffalo, M., LaFramboise, T. &amp; Koyutürk, M. Comparative analysis of algorithms for next-generation sequencing read alignment. Bioinformatics (Oxford, England) 27, 2790–2796 (2011). 249. Langmead, B. A tandem simulation framework for predicting mapping quality. Genome Biology 18, 152 (2017). 250. Lin, H.-N. &amp; Hsu, W.-L. Kart: a divide-and-conquer algorithm for NGS read alignment. Bioinformatics (Oxford, England) 33, 2281–2287 (2017). 251. Olson, C. B. et al. 2012 IEEE 20th international symposium on field-programmable custom computing machines. in 161–168 (2012). doi:10.1109/FCCM.2012.36. 252. Chen, P., Wang, C., Li, X. &amp; Zhou, X. Accelerating the next generation long read mapping with the FPGA-based system. IEEE/ACM Transactions on Computational Biology and Bioinformatics 11, 840–852 (2014). 253. Suzuki, H. &amp; Kasahara, M. Introducing difference recurrence relations for faster semi-global alignment of long sequences. BMC Bioinformatics 19, 45 (2018). 254. Zeni, A. et al. 2020 IEEE international parallel and distributed processing symposium (IPDPS). in 462–471 (2020). doi:10.1109/IPDPS47924.2020.00055. 255. Chaisson, M. J. &amp; Tesler, G. Mapping single molecule sequencing reads using basic local alignment with successive refinement (BLASR): Application and theory. BMC Bioinformatics 13, 238 (2012). 256. Haghshenas, E., Sahinalp, S. C. &amp; Hach, F. lordFAST: sensitive and Fast Alignment Search Tool for LOng noisy Read sequencing Data. Bioinformatics (Oxford, England) 35, 20–27 (2019). 257. Sović, I. et al. Fast and sensitive mapping of nanopore sequencing reads with GraphMap. Nature Communications 7, 11307 (2016). 258. Sedlazeck, F. J. et al. Accurate detection of complex structural variations using single-molecule sequencing. Nature Methods 15, 461–468 (2018). 259. Jain, C., Dilthey, A., Koren, S., Aluru, S. &amp; Phillippy, A. M. A fast approximate algorithm for mapping long reads to large reference databases. Journal of Computational Biology 25, 766–779 (2018). 260. Prodanov, T. &amp; Bansal, V. Sensitive alignment using paralogous sequence variants improves long-read mapping and variant calling in segmental duplications. Nucleic Acids Research 48, e114 (2020). 261. Jain, C., Rhie, A., Hansen, N. F., Koren, S. &amp; Phillippy, A. M. Long-read mapping to repetitive reference sequences using Winnowmap2. Nature Methods 19, 705–710 (2022). 262. Mikheenko, A., Bzikadze, A. V., Gurevich, A., Miga, K. H. &amp; Pevzner, P. A. TandemTools: Mapping long reads and assessing/improving assembly quality in extra-long tandem repeats. Bioinformatics 36, i75–i83 (2020). 263. Bragg, L., Stone, G., Imelfort, M., Hugenholtz, P. &amp; Tyson, G. W. Fast, accurate error-correction of amplicon pyrosequences using Acacia. Nat Methods 9, 425–426 (2012). 264. Sahlin, K. &amp; Medvedev, P. Error correction enables use of Oxford Nanopore technology for reference-free transcriptome analysis. Nat Commun 12, 2 (2021). 265. Liu, H. et al. SMARTdenovo: A de novo assembler using long noisy reads. Gigabyte 2021, 1–9 (2021). 266. Graham, R. L., Knuth, D. E. &amp; Patashnik, O. Concrete mathematics: A foundation for computer science. (Addison-Wesley, 1994). 267. Adams, M. D. et al. The genome sequence of Drosophila melanogaster. Science 287, 2185–2195 (2000). 268. Yang, C., Chu, J., Warren, R. L. &amp; Birol, I. NanoSim: Nanopore sequence read simulator based on statistical characterization. GigaScience 6, (2017). 269. Rhie, A., Walenz, B. P., Koren, S. &amp; Phillippy, A. M. Merqury: Reference-free quality, completeness, and phasing assessment for genome assemblies. Genome Biology 21, 245 (2020). 270. Li, H. New strategies to improve Minimap2 alignment accuracy. https://arxiv.org/abs/2108.03515 (2021). 271. Li, H. et al. A synthetic-diploid benchmark for accurate variant-calling evaluation. Nat Methods 15, 595–597 (2018). 272. Lwoff, A. The concept of virus. Journal of General Microbiology 17, 239–253 (1957). 273. Minor, P. D. Viruses. in (John Wiley &amp; Sons, Ltd, 2014). doi:10.1002/9780470015902.a0000441.pub3. 274. Stapleton, J. T., Foung, S., Muerhoff, A. S., Bukh, J. &amp; Simmonds, P. The GB viruses: A review and proposed classification of GBV-a, GBV-c (HGV), and GBV-d in genus pegivirus within the family flaviviridae. The Journal of General Virology 92, 233–246 (2011). 275. Yamamoto, N. et al. Characterization of a non-pathogenic H5N1 influenza virus isolated from a migratory duck flying from siberia in hokkaido, japan, in october 2009. Virology Journal 8, 65 (2011). 276. Shi, M. et al. The evolutionary history of vertebrate RNA viruses. Nature 556, 197–202 (2018). 277. Atlas of invertebrate viruses. (CRC Press, 2017). doi:10.1201/9781315149929. 278. Lefeuvre, P. et al. Evolution and ecology of plant viruses. Nature Reviews Microbiology 17, 632–644 (2019). 279. Wang, A. L. &amp; Wang, C. C. Viruses of parasitic protozoa. Parasitology Today 7, 76–80 (1991). 280. Fermin, G., Mazumdar-Leighton, S. &amp; Tennant, P. Viruses of prokaryotes, protozoa, fungi, and chromista. in 217 (2018). 281. Sutela, S., Poimala, A. &amp; Vainio, E. J. Viruses of fungi and oomycetes in the soil environment. FEMS Microbiology Ecology 95, fiz119 (2019). 282. Twort, F. W. AN INVESTIGATION ON THE NATURE OF ULTRA-MICROSCOPIC VIRUSES. The Lancet 186, 1241–1243 (1915). 283. Delbrock, M. Bacterial Viruses or Bacteriophages. Biological Reviews 21, 30–40 (1946). 284. Clark, J. R. &amp; March, J. B. Bacterial viruses as human vaccines? Expert Review of Vaccines 3, 463–476 (2004). 285. Kan-Davelaar, H. E. van, Hest, J. C. M. van, Cornelissen, J. J. L. M. &amp; Koay, M. S. T. Using viruses as nanomedicines. British Journal of Pharmacology 171, 4001–4009 (2014). 286. Prangishvili, D., Basta, T., Garrett, R. A. &amp; Krupovic, M. Viruses of the Archaea. in 1–9 (John Wiley &amp; Sons, Ltd, 2016). doi:10.1002/9780470015902.a0000774.pub3. 287. Prangishvili, D., Forterre, P. &amp; Garrett, R. A. Viruses of the Archaea: a unifying view. Nature Reviews Microbiology 4, 837–848 (2006). 288. Francki, R. I. B. Plant virus satellites. ANNUAL REVIEW OF MICROBIOLOGY. 289. Xu, P. &amp; Roossinck, M. J. Plant Virus Satellites. in (John Wiley &amp; Sons, Ltd, 2011). doi:10.1002/9780470015902.a0000771.pub2. 290. Lai, M. M. The molecular biology of hepatitis delta virus. Annual review of biochemistry 64, 259–286 (1995). 291. Hughes, S. A., Wedemeyer, H. &amp; Harrison, P. M. Hepatitis delta virus. The Lancet 378, 73–85 (2011). 292. Desnues, C., Boyer, M. &amp; Raoult, D. Chapter 3 - Sputnik, a Virophage Infecting the Viral Domain of Life. in (eds. Łobocka, M. &amp; Szybalski, W. T.) vol. 82 63–89 (Academic Press, 2012). 293. Gaia, M. et al. Zamilon, a Novel Virophage with Mimiviridae Host Specificity. PLOS ONE 9, e94923 (2014). 294. Edgar, R. C. et al. Petabase-scale sequence alignment catalyses viral discovery. Nature 602, 142–147 (2022). 295. Nasir, A., Romero-Severson, E. &amp; Claverie, J.-M. Investigating the Concept and Origin of Viruses. Trends in Microbiology 28, 959–967 (2020). 296. Forterre, P. &amp; Prangishvili, D. The origin of viruses. Research in Microbiology 160, 466–472 (2009). 297. Forterre, P. The origin of viruses and their possible roles in major evolutionary transitions. Virus Research 117, 5–16 (2006). 298. Boeke, J. &amp; Stoye, J. Retrotransposons, Endogenous Retroviruses, and the Evolution of Retroelement. (1997). 299. Kojima, S. et al. Virus-like insertions with sequence signatures similar to those of endogenous nonretroviral RNA viruses in the human genome. Proceedings of the National Academy of Sciences 118, e2010758118 (2021). 300. Löwer, R., Löwer, J. &amp; R Kurth. The viruses in all of us: Characteristics and biological significance of human endogenous retrovirus sequences. Proceedings of the National Academy of Sciences 93, 5177–5184 (1996). 301. Griffiths, D. J. Endogenous retroviruses in the human genome sequence. Genome Biology 2, reviews1017.1 (2001). 302. Baltimore, D. Expression of animal virus genomes. Bacteriological Reviews 35, 235–241 (1971). 303. Koonin, E. V., Krupovic, M. &amp; Agol, V. I. The baltimore classification of viruses 50 years later: How does it stand in the light of virus evolution? Microbiology and Molecular Biology Reviews 85, e00053–21 (2021). 304. Domingo, E. &amp; Perales, C. RNA Virus Genomes. in 1–12 (John Wiley &amp; Sons, Ltd, 2018). doi:10.1002/9780470015902.a0001488.pub3. 305. McGeoch, D. J., Rixon, F. J. &amp; Davison, A. J. Topics in herpesvirus genomics and evolution. Virus Research 117, 90–104 (2006). 306. Boehmer, P. &amp; Nimonkar, A. Herpes Virus Replication. IUBMB Life 55, 13–22 (2003). 307. Brentjens, M. H., Yeung-Yue, K. A., Lee, P. C. &amp; Tyring, S. K. Human papillomavirus: a review. Dermatologic Clinics 20, 315–331 (2002). 308. Kay, A. &amp; Zoulim, F. Hepatitis B virus genetic variability and evolution. Virus Research 127, 164–176 (2007). 309. Parashar, U. D., Bresee, J. S., Gentsch, J. R. &amp; Glass, R. I. Rotavirus. Emerging Infectious Diseases 4, 561–570 (1998). 310. Simmonds, P. Variability of hepatitis C virus. Hepatology 21, 570–583 (1995). 311. Wimmer, E., Hellen, C. U. T. &amp; Cao, X. Genetics of poliovirus. Annual Review of Genetics 27, 353–437 (1993). 312. Racaniello, V. R. One hundred years of poliovirus pathogenesis. Virology 344, 9–16 (2006). 313. Palese, P., Zheng, H., Engelhardt, O. G., Pleschka, S. &amp; García-Sastre, A. Negative-strand RNA viruses: Genetic engineering and applications. Proceedings of the National Academy of Sciences 93, 11354–11358 (1996). 314. Domingo, E. &amp; Perales, C. Virus Evolution. in (John Wiley &amp; Sons, Ltd, 2014). doi:10.1002/9780470015902.a0000436.pub3. 315. V’kovski, P., Kratzel, A., Steiner, S., Stalder, H. &amp; Thiel, V. Coronavirus biology and replication: implications for SARS-CoV-2. Nature Reviews Microbiology 19, 155–170 (2021). 316. Bäck, A. T. &amp; Lundkvist, Å. Dengue viruses an overview. Infection Ecology &amp; Epidemiology 3, 10.3402/iee.v3i0.19839 (2013). 317. Dustin, L. B., Bartolini, B., Capobianchi, M. R. &amp; Pistello, M. Hepatitis c virus: Life cycle in cells, infection and host response, and analysis of molecular markers influencing the outcome of infection and response to therapy. Clinical microbiology and infection : the official publication of the European Society of Clinical Microbiology and Infectious Diseases 22, 826–832 (2016). 318. Kadaja, M., Silla, T., Ustav, E. &amp; Ustav, M. Papillomavirus DNA replication From initiation to genomic instability. Virology 384, 360–368 (2009). 319. Weller, S. K. &amp; Coen, D. M. Herpes simplex viruses: Mechanisms of DNA replication. Cold Spring Harbor Perspectives in Biology 4, a013011 (2012). 320. Beck, J. &amp; Nassal, M. Hepatitis b virus replication. World Journal of Gastroenterology : WJG 13, 48–64 (2007). 321. Pyle, J. D. &amp; Scholthof, K.-B. G. Chapter 58 - Biology and Pathogenesis of Satellite Viruses. in (eds. Hadidi, A., Flores, R., Randles, J. W. &amp; Palukaitis, P.) 627–636 (Academic Press, 2017). doi:10.1016/B978-0-12-801498-1.00058-9. 322. Raoult, D. et al. The 1.2-megabase genome sequence of Mimivirus. Science (New York, N.Y.) 306, 1344–1350 (2004). 323. Campillo-Balderas, J. A., Lazcano, A. &amp; Becerra, A. Viral genome size distribution does not correlate with the antiquity of the host lineages. Frontiers in Ecology and Evolution 3, (2015). 324. Cann, A. J. Virus Structure. in 1–9 (John Wiley &amp; Sons, Ltd, 2015). doi:10.1002/9780470015902.a0000439.pub2. 325. Hladik, F. &amp; McElrath, M. J. Setting the stage: host invasion by HIV. Nature Reviews Immunology 8, 447–457 (2008). 326. Shaw, G. M. &amp; Hunter, E. HIV Transmission. Cold Spring Harbor Perspectives in Medicine 2, a006965 (2012). 327. Weiss, R. A. How does HIV cause AIDS? Science 260, 1273–1279 (1993). 328. Melhuish, A. &amp; Lewthwaite, P. Natural history of HIV and AIDS. Medicine 46, 356–361 (2018). 329. Murray, J. F. et al. Pulmonary complications of the acquired immunodeficiency syndrome. New England Journal of Medicine 310, 1682–1688 (1984). 330. Sampath, S. et al. Pandemics Throughout the History. Cureus 13, (2021). 331. World Health Organization. Global report: UNAIDS report on the global AIDS epidemic 2010. (World Health Organization, 2010). 332. Barré-Sinoussi, F. et al. Isolation of a T-lymphotropic retrovirus from a patient at risk for acquired immune deficiency syndrome (AIDS). Science (New York, N.Y.) 220, 868–871 (1983). 333. Gallo, R. C. et al. Isolation of human T-cell leukemia virus in acquired immune deficiency syndrome (AIDS). Science (New York, N.Y.) 220, 865–867 (1983). 334. Clavel, F. et al. Isolation of a new human retrovirus from west african patients with AIDS. Science 233, 343–346 (1986). 335. Gilbert, P. B. et al. Comparison of HIV-1 and HIV-2 infectivity from a prospective cohort study in Senegal. Statistics in Medicine 22, 573–593 (2003). 336. Loeff, M. F. S. van der et al. Sixteen years of HIV surveillance in a West African research clinic reveals divergent epidemic trends of HIV-1 and HIV-2. International Journal of Epidemiology 35, 1322–1328 (2006). 337. Gao, F. et al. Origin of HIV-1 in the chimpanzee Pan troglodytes troglodytes. Nature 397, 436–441 (1999). 338. Hamel, D. J. et al. Twenty years of prospective molecular epidemiology in Senegal: changes in HIV diversity. AIDS research and human retroviruses 23, 1189–1196 (2007). 339. Sharp, P. M. &amp; Hahn, B. H. Origins of HIV and the AIDS pandemic. Cold Spring Harbor Perspectives in Medicine: 1, a006841 (2011). 340. Hirsch, V. M., Olmsted, R. A., Murphey-Corb, M., Purcell, R. H. &amp; Johnson, P. R. An African primate lentivirus (SIVsmclosely related to HIV-2. Nature 339, 389–392 (1989). 341. Gao, F. et al. Human infection by genetically diverse SIVSM-related HIV-2 in West Africa. Nature 358, 495–499 (1992). 342. Chen, Z. et al. Genetic characterization of new West African simian immunodeficiency virus SIVsm: geographic clustering of household-derived SIV strains with human immunodeficiency virus type 2 subtypes and genetically diverse viruses from a single feral sooty mangabey troop. Journal of Virology 70, 3617–3627 (1996). 343. Hemelaar, J. The origin and diversity of the HIV-1 pandemic. Trends in Molecular Medicine 18, 182–192 (2012). 344. Worobey, M. et al. Direct evidence of extensive diversity of HIV-1 in Kinshasa by 1960. Nature 455, 661–664 (2008). 345. Vidal, N. et al. Unprecedented degree of human immunodeficiency virus type 1 (HIV-1) group M genetic diversity in the Democratic Republic of Congo suggests that the HIV-1 pandemic originated in Central Africa. Journal of Virology 74, 10498–10507 (2000). 346. Faria, N. R. et al. The early spread and epidemic ignition of HIV-1 in human populations. Science (New York, N.Y.) 346, 56–61 (2014). 347. Korber, B. et al. Timing the ancestor of the HIV-1 pandemic strains. Science (New York, N.Y.) 288, 1789–1796 (2000). 348. Rambaut, A., Posada, D., Crandall, K. A. &amp; Holmes, E. C. The causes and consequences of HIV evolution. Nature Reviews Genetics 5, 52–61 (2004). 349. McCutchan, F. E. Global epidemiology of HIV. Journal of Medical Virology 78, S7–S12 (2006). 350. Pérez-Losada, M., Arenas, M., Galán, J. C., Palero, F. &amp; González-Candelas, F. Recombination in viruses: Mechanisms, methods of study, and evolutionary consequences. Infection, Genetics and Evolution 30, 296–307 (2015). 351. Robertson, D. L., Hahn, B. H. &amp; Sharp, P. M. Recombination in AIDS viruses. Journal of Molecular Evolution 40, 249–259 (1995). 352. HIV circulating recombinant forms (CRFs). 353. Posada, D., Crandall, K. A. &amp; Holmes, E. C. Recombination in evolutionary genomics. Annual Review of Genetics 36, 75–97 (2002). 354. Taylor, B. S., Sobieszczyk, M. E., McCutchan, F. E. &amp; Hammer, S. M. The challenge of HIV-1 subtype diversity. New England Journal of Medicine 358, 1590–1602 (2008). 355. Hemelaar, J., Gouws, E., Ghys, P. D. &amp; Osmanov, S. Global trends in molecular epidemiology of HIV-1 during 20002007. AIDS (London, England) 25, 679–689 (2011). 356. Distribution of all HIV-1 sequences: WORLD. 357. Freed, E. O. HIV-1 Replication. Somatic Cell and Molecular Genetics 26, 13–33 (2001). 358. Ferguson, M. R., Rojo, D. R., Lindern, J. J. von &amp; O’Brien, W. A. HIV-1 replication cycle. Clinics in Laboratory Medicine 22, 611–635 (2002). 359. Gougeon, M. L., Laurent-Crawford, A. G., Hovanessian, A. G. &amp; Montagnier, L. Direct and indirect mechanisms mediating apoptosis during HIV infection: contribution to in vivo CD4 T cell depletion. Seminars in Immunology 5, 187–194 (1993). 360. Vidya Vijayan, K. K., Karthigeyan, K. P., Tripathi, S. P. &amp; Hanna, L. E. Pathophysiology of CD4+ t-cell depletion in HIV-1 and HIV-2 infections. Frontiers in Immunology 8, 580 (2017). 361. Frankel, A. D. &amp; Young, J. A. HIV-1: fifteen proteins and an RNA. Annual Review of Biochemistry 67, 1–25 (1998). 362. Fossen, T. et al. Solution structure of the human immunodeficiency virus type 1 p6 protein *. Journal of Biological Chemistry 280, 42515–42527 (2005). 363. Göttlinger, H. G., Dorfman, T., Sodroski, J. G. &amp; Haseltine, W. A. Effect of mutations affecting the p6 gag protein on human immunodeficiency virus particle release. Proceedings of the National Academy of Sciences 88, 3195–3199 (1991). 364. Huang, M., Orenstein, J. M., Martin, M. A. &amp; Freed, E. O. p6Gag is required for particle production from full-length human immunodeficiency virus type 1 molecular clones expressing protease. Journal of Virology 69, 6810–6818 (1995). 365. Bour, S., Geleziunas, R. &amp; Wainberg, M. A. The human immunodeficiency virus type 1 (HIV-1) CD4 receptor and its central role in promotion of HIV-1 infection. Microbiological Reviews 59, 63–93 (1995). 366. Hernandez, L. D., Hoffman, L. R., Wolfsberg, T. G. &amp; White, J. M. Virus-cell and cell-cell fusion. Annual Review of Cell and Developmental Biology 12, 627–661 (1996). 367. Jones, K. &amp; Peterlin, B. Control of rna initiation and elongation at the hiv-1 promoter. Annual Review of Biochemistry 63, 717–743 (1994). 368. Hope, T. J. Viral RNA export. Chemistry &amp; Biology 4, 335–344 (1997). 369. Mangasarian, A. &amp; Trono, D. The multifaceted role of HIV Nef. Research in Virology 148, 30–33 (1997). 370. Cohen, é. A., Subbramanian, R. A. &amp; Göttlinger, H. G. Role of Auxiliary Proteins in Retroviral Morphogenesis. in (ed. Kräusslich, H.-G.) 219–235 (Springer, 1996). doi:10.1007/978-3-642-80145-7_7. 371. Lamb, R. A. &amp; Pinto, L. H. Do Vpu and Vpr of Human Immunodeficiency Virus Type 1 and NB of Influenza B Virus Have Ion Channel Activities in the Viral Life Cycles? Virology 229, 1–11 (1997). 372. Khan, N. &amp; Geiger, J. D. Role of viral protein u (vpu) in HIV-1 infection and pathogenesis. Viruses 13, 1466 (2021). 373. Emerman, M. HIV-1, Vpr and the cell cycle. Current Biology 6, 1096–1103 (1996). 374. Miller, R. H. Human immunodeficiency virus may encode a novel protein on the genomic DNA plus strand. Science (New York, N.Y.) 239, 1420–1422 (1988). 375. Briquet, S. &amp; Vaquero, C. Immunolocalization Studies of an Antisense Protein in HIV-1-Infected Cells and Viral Particles. Virology 292, 177–184 (2002). 376. Cassan, E., Arigon-Chifolleau, A.-M., Mesnard, J.-M., Gross, A. &amp; Gascuel, O. Concomitant emergence of the antisense protein gene of HIV-1 and of the pandemic. Proceedings of the National Academy of Sciences 113, 11537–11542 (2016). 377. Savoret, J. et al. A pilot study of the humoral response against the AntiSense protein (ASP) in HIV-1-infected patients. Frontiers in Microbiology 11, (2020). 378. Zardecki, C. et al. PDB-101: Educational resources supporting molecular explorations through biology and medicine. Protein Science 31, 129–140 (2022). 379. Eisinger, R. W., Dieffenbach, C. W. &amp; Fauci, A. S. HIV viral load and transmissibility of HIV infection: Undetectable equals untransmittable. JAMA 321, 451–452 (2019). 380. Palella, F. J. et al. Declining morbidity and mortality among patients with advanced human immunodeficiency virus infection. New England Journal of Medicine 338, 853–860 (1998). 381. Forsythe, S. S. et al. Twenty years of antiretroviral therapy for people living with HIV: Global costs, health achievements, economic benefits. Health Affairs 38, 1163–1172 (2019). 382. Fischl, M. A. et al. The efficacy of azidothymidine (AZT) in the treatment of patients with AIDS and AIDS-related complex. New England Journal of Medicine 317, 185–191 (1987). 383. Richman, D. D. Susceptibility to nucleoside analogues of zidovudine-resistant isolates of human immunodeficiency virus. The American Journal of Medicine 88, S8–S10 (1990). 384. Yeo, J. Y., Goh, G.-R., Su, C. T.-T. &amp; Gan, S. K.-E. The Determination of HIV-1 RT Mutation Rate, Its Possible Allosteric Effects, and Its Implications on Drug Resistance. Viruses 12, 297 (2020). 385. Cuevas, J. M., Geller, R., Garijo, R., López-Aldeguer, J. &amp; Sanjuán, R. Extremely High Mutation Rate of HIV-1 In Vivo. PLOS Biology 13, e1002251 (2015). 386. Gulick, R. M. et al. Treatment with indinavir, zidovudine, and lamivudine in adults with human immunodeficiency virus infection and prior antiretroviral therapy. The New England Journal of Medicine 337, 734–739 (1997). 387. Wensing, A. M. J., Maarseveen, N. M. van &amp; Nijhuis, M. Fifteen years of HIV Protease Inhibitors: raising the barrier to resistance. Antiviral Research 85, 59–74 (2010). 388. Pedersen, O. S. &amp; Pedersen, E. B. Non-Nucleoside Reverse Transcriptase Inhibitors: The NNRTI Boom. Antiviral Chemistry and Chemotherapy 10, 285–314 (1999). 389. Scarsi, K. K., Havens, J. P., Podany, A. T., Avedissian, S. N. &amp; Fletcher, C. V. HIV-1 Integrase Inhibitors: A Comparative Review of Efficacy and Safety. Drugs 80, 1649–1676 (2020). 390. Yeni, P. Update on HAART in HIV. Journal of Hepatology 44, S100–S103 (2006). 391. Palmisano, L. &amp; Vella, S. A brief history of antiretroviral therapy of HIV infection: success and challenges. Annali dell’Istituto Superiore Di Sanita 47, 44–48 (2011). 392. Mehta, S., Moore, R. D. &amp; Graham, N. M. H. Potential factors affecting adherence with HIV therapy. AIDS 11, 16651670 (1997). 393. Miller, N. H. Compliance with treatment regimens in chronic asymptomatic diseases. The American Journal of Medicine 102, 43–49 (1997). 394. Chesney, M. A., Morin, M. &amp; Sherr, L. Adherence to HIV combination therapy. Social Science &amp; Medicine 50, 1599–1605 (2000). 395. Aldir, I., Horta, A. &amp; Serrado, M. Single-tablet regimens in HIV: Does it really make a difference? Current Medical Research and Opinion 30, 89–97 (2014). 396. Grant, R. M. et al. Preexposure chemoprophylaxis for HIV prevention in men who have sex with men. New England Journal of Medicine 363, 2587–2599 (2010). 397. Baeten, J. M. et al. Antiretroviral prophylaxis for HIV prevention in heterosexual men and women. The New England Journal of Medicine 367, 399–410 (2012). 398. Buchbinder, S. P. &amp; Liu, A. Pre-exposure prophylaxis and the promise of combination prevention approaches. AIDS and behavior 15 Suppl 1, S72–79 (2011). 399. Riddell, J. I., Amico, K. R. &amp; Mayer, K. H. HIV preexposure prophylaxis: A review. JAMA 319, 1261–1268 (2018). 400. EMA. Truvada. (2018). 401. About PrEP | PrEP | HIV basics | HIV/AIDS | CDC. (2022). 402. Zolopa, A. R. The evolution of HIV treatment guidelines: Current state-of-the-art of ART. Antiviral Research 85, 241–244 (2010). 403. World Health Organization. Consolidated guidelines on HIV prevention, testing, treatment, service delivery and monitoring: recommendations for a public health approach. https://www.who.int/publications-detail-redirect/9789240031593 (2021). 404. Sarafianos, S. G. et al. Structure and function of HIV-1 reverse transcriptase: Molecular mechanisms of polymerization and inhibition. Journal of molecular biology 385, 693–713 (2009). 405. Esnouf, R. M. et al. Unique features in the structure of the complex between HIV-1 reverse transcriptase and the bis(heteroaryl)piperazine (BHAP) U-90152 explain resistance mutations for this nonnucleoside inhibitor. Proceedings of the National Academy of Sciences of the United States of America 94, 3984–3989 (1997). 406. Goodsell, D. S., Autin, L. &amp; Olson, A. J. Illustrate: Software for Biomolecular Illustration. Structure (London, England: 1993) 27, 1716–1720.e1 (2019). 407. Chiu, T. K. &amp; Davies, D. R. Structure and function of HIV-1 integrase. Current Topics in Medicinal Chemistry 4, 965–977 (2004). 408. Esposito, D. &amp; Craigie, R. HIV Integrase Structure and Function. in (eds. Rlaramorosch, K., Murphy, F. A. &amp; Shawn, A. J.) vol. 52 319–333 (Academic Press, 1999). 409. Delelis, O., Carayon, K., Saïb, A., Deprez, E. &amp; Mouscadet, J.-F. Integrase and integration: Biochemical activities of HIV-1 integrase. Retrovirology 5, 114 (2008). 410. Pommier, Y., Johnson, A. A. &amp; Marchand, C. Integrase inhibitors to treat HIV/Aids. Nature Reviews Drug Discovery 4, 236–248 (2005). 411. Pearl, L. H. &amp; Taylor, W. R. A structural model for the retroviral proteases. Nature 329, 351–354 (1987). 412. Gulnik, S., Erickson, J. W. &amp; Xie, D. HIV protease: Enzyme function and drug resistance. in vol. 58 213–256 (Academic Press, 2000). 413. Silva, A. M., Cachau, R. E., Sham, H. L. &amp; Erickson, J. W. Inhibition and catalytic mechanism of HIV-1 aspartic protease. Journal of Molecular Biology 255, 321–340 (1996). 414. Hornak, V., Okur, A., Rizzo, R. C. &amp; Simmerling, C. HIV-1 protease flaps spontaneously open and reclose in molecular dynamics simulations. Proceedings of the National Academy of Sciences 103, 915–920 (2006). 415. Yu, Y. et al. Structural insights into HIV-1 protease flap opening processes and key intermediates. RSC Advances 7, 45121–45128 (2017). 416. Roberts, N. A. et al. Rational design of peptide-based HIV proteinase inhibitors. Science 248, 358–361 (1990). 417. Esté, J. A. &amp; Telenti, A. HIV entry inhibitors. The Lancet 370, 81–88 (2007). 418. Kilby, J. M. &amp; Eron, J. J. Novel therapies based on mechanisms of HIV-1 cell entry. New England Journal of Medicine 348, 2228–2238 (2003). 419. Fletcher, C. V. Enfuvirtide, a new drug for HIV infection. The Lancet 361, 1577–1578 (2003). 420. Knox, D. C., Anderson, P. L., Harrigan, P. R. &amp; Tan, D. H. S. Multidrug-resistant HIV-1 infection despite preexposure prophylaxis. New England Journal of Medicine 376, 501–502 (2017). 421. Hurt, C. B., Eron, J. J. &amp; Cohen, M. S. Pre-exposure prophylaxis and antiretroviral resistance: HIV prevention at a cost? Clinical Infectious Diseases: An Official Publication of the Infectious Diseases Society of America 53, 1265–1270 (2011). 422. Gibas, K. M., Berg, P. van den, Powell, V. E. &amp; Krakower, D. S. Drug Resistance During HIV Pre-Exposure Prophylaxis. Drugs 79, 609–619 (2019). 423. Ammaranond, P. &amp; Sanguansittianan, S. Mechanism of HIV antiretroviral drugs progress toward drug resistance. Fundamental &amp; Clinical Pharmacology 26, 146–161 (2012). 424. Clavel, F. &amp; Hance, A. J. HIV drug resistance. New England Journal of Medicine 350, 1023–1035 (2004). 425. Menéndez-Arias, L. Mechanisms of resistance to nucleoside analogue inhibitors of HIV-1 reverse transcriptase. Virus Research 134, 124–146 (2008). 426. Sluis-Cremer, N., Arion, D. &amp; Parniak*, M. A. Molecular mechanisms of HIV-1 resistance to nucleoside reverse transcriptase inhibitors (NRTIs). Cellular and Molecular Life Sciences CMLS 57, 1408–1422 (2000). 427. Sarafianos, S. G. et al. Lamivudine (3TC) resistance in HIV-1 reverse transcriptase involves steric hindrance with beta-branched amino acids. Proceedings of the National Academy of Sciences of the United States of America 96, 10027–10032 (1999). 428. Meyer, P. R., Matsuura, S. E., Mian, A. M., So, A. G. &amp; Scott, W. A. A mechanism of AZT resistance: an increase in nucleotide-dependent primer unblocking by mutant HIV-1 reverse transcriptase. Molecular Cell 4, 35–43 (1999). 429. Boyer, P. L., Sarafianos, S. G., Arnold, E. &amp; Hughes, S. H. Selective excision of AZTMP by drug-resistant human immunodeficiency virus reverse transcriptase. Journal of Virology 75, 4832–4842 (2001). 430. Deeks, S. G. Nonnucleoside reverse transcriptase inhibitor resistance. JAIDS Journal of Acquired Immune Deficiency Syndromes 26, S25 (2001). 431. Kurt Yilmaz, N., Swanstrom, R. &amp; Schiffer, C. A. Improving Viral Protease Inhibitors to Counter Drug Resistance. Trends in Microbiology 24, 547–557 (2016). 432. Blanco, J.-L., Varghese, V., Rhee, S.-Y., Gatell, J. M. &amp; Shafer, R. W. HIV-1 integrase inhibitor resistance and its clinical implications. The Journal of Infectious Diseases 203, 1204–1214 (2011). 433. Mourad, R. et al. A phylotype-based analysis highlights the role of drug-naive HIV-positive individuals in the transmission of antiretroviral resistance in the UK. Aids 29, 1917–1925 (2015). 434. Hué, S. et al. Demonstration of Sustained Drug-Resistant Human Immunodeficiency Virus Type 1 Lineages Circulating among Treatment-Naïve Individuals. Journal of Virology 83, 2645–2654 (2009). 435. Drescher, S. M. et al. Treatment-naive individuals are the major source of transmitted HIV-1 drug resistance in men who have sex with men in the swiss HIV cohort study. Clinical Infectious Diseases 58, 285–294 (2014). 436. Boerma, R. S. et al. High levels of pre-treatment HIV drug resistance and treatment failure in Nigerian children. Journal of the International AIDS Society 19, 21140 (2016). 437. Kühnert, D. et al. Quantifying the fitness cost of HIV-1 drug resistance mutations through phylodynamics. PLOS Pathogens 14, e1006895 (2018). 438. Mesplède, T. et al. Viral fitness cost prevents HIV-1 from evading dolutegravir drug pressure. Retrovirology 10, 22 (2013). 439. Castro, H. et al. Persistence of HIV-1 Transmitted Drug Resistance Mutations. The Journal of Infectious Diseases 208, 1459–1463 (2013). 440. Blassel, L. et al. Drug resistance mutations in HIV: new bioinformatics approaches and challenges. Current Opinion in Virology 51, 56–64 (2021). 441. UK CHIC Steering Committee. The creation of a large UK-based multicentre cohort of HIV-infected individuals: The UK Collaborative HIV Cohort (UK CHIC) Study. HIV Medicine 5, 115–124 (2004). 442. Abeler-Dörner, L. et al. PANGEA-HIV 2: Phylogenetics and networks for generalised epidemics in africa. Current Opinion in HIV and AIDS 14, 173180 (2019). 443. Kuiken, C., Korber, B. &amp; Shafer, R. W. HIV sequence databases. AIDS reviews 5, 52–61 (2003). 444. Shafer, R. W. Rationale and Uses of a Public HIV Drug-Resistance Database. The Journal of Infectious Diseases 194, S51–S58 (2006). 445. Wensing, A. M. et al. 2019 update of the drug resistance mutations in HIV-1. Topics in Antiviral Medicine 27, 111–121 (2019). 446. Clark, S. A., Calef, C. &amp; Mellors, J. W. Mutations in retroviral genes associated with drug resistance. HIV sequence compendium 58158 (2007). 447. Liu, T. F. &amp; Shafer, R. W. Web Resources for HIV Type 1 Genotypic-Resistance Test Interpretation. Clinical Infectious Diseases 42, 1608–1618 (2006). 448. Johnson, V. A. et al. Update of the drug resistance mutations in HIV-1: March 2013. Topics in Antiviral Medicine 21, 6–7 (2016). 449. Larder, B. A. &amp; Kemp, S. D. Multiple mutations in HIV-1 reverse transcriptase confer high-level resistance to zidovudine (AZT). Science (New York, N.Y.) 246, 1155–1158 (1989). 450. Vreese, K. de et al. Resistance of human immunodeficiency virus type 1 reverse transcriptase to TIBO derivatives induced by site-directed mutagenesis. Virology 188, 900–904 (1992). 451. Masquelier, B. et al. Genotypic and phenotypic resistance patterns of human immunodeficiency virus type 1 variants with insertions or deletions in the reverse transcriptase (RT): Multicenter study of patients treated with RT inhibitors. Antimicrobial Agents and Chemotherapy 45, 1836–1842 (2001). 452. Petropoulos, C. J. et al. A novel phenotypic drug susceptibility assay for human immunodeficiency virus type 1. Antimicrobial Agents and Chemotherapy 44, 920–928 (2000). 453. Hertogs, K. et al. A rapid method for simultaneous detection of phenotypic resistance to inhibitors of protease and reverse transcriptase in recombinant human immunodeficiency virus type 1 isolates from patients treated with antiretroviral drugs. Antimicrobial Agents and Chemotherapy 42, 269–276 (1998). 454. Tambuyzer, L., Nijs, S., Daems, B., Picchio, G. &amp; Vingerhoets, J. Effect of mutations at position E138 in HIV-1 reverse transcriptase on phenotypic susceptibility and virologic response to etravirine. JAIDS Journal of Acquired Immune Deficiency Syndromes 58, 1822 (2011). 455. Katzenstein, D. A. et al. Phenotypic susceptibility and virological outcome in nucleoside-experienced patients receiving three or four antiretroviral drugs. AIDS 17, 821830 (2003). 456. Villabona-Arenas, C. J. et al. In-depth analysis of HIV-1 drug resistance mutations in HIV-infected individuals failing first-line regimens in West and Central Africa. AIDS 30, 2577 (2016). 457. Shulman, N. S., Bosch, R. J., Mellors, J. W., Albrecht, M. A. &amp; Katzenstein, D. A. Genetic correlates of efavirenz hypersusceptibility. AIDS 18, 17811785 (2004). 458. Miller, M. D. et al. Genotypic and phenotypic predictors of the magnitude of response to tenofovir disoproxil fumarate treatment in antiretroviral-experienced patients. The Journal of Infectious Diseases 189, 837–846 (2004). 459. Lepri, A. C. et al. Resistance Profiles in Patients with Viral Rebound on Potent Antiretroviral Therapy. The Journal of Infectious Diseases 181, 1143–1147 (2000). 460. Verhofstede, C. et al. Detection of drug resistance mutations as a predictor of subsequent virological failure in patients with HIV-1 viral rebounds of less than 1,000 RNA copies/ml. Journal of Medical Virology 79, 1254–1260 (2007). 461. Zhukova, A., Cutino-Moguel, T., Gascuel, O. &amp; Pillay, D. The Role of Phylogenetics as a Tool to Predict the Spread of Resistance. The Journal of Infectious Diseases 216, S820–S823 (2017). 462. Bennett, D. E. et al. Drug Resistance Mutations for Surveillance of Transmitted HIV-1 Drug-Resistance: 2009 Update. PLOS ONE 4, e4724 (2009). 463. Hammond, J., Calef, C., Larder, B., Schinazi, R. &amp; Mellors, J. W. Mutations in Retroviral Genes Associated with Drug Resistance. Human retroviruses and AIDS 11136–11179 (1998). 464. Wensing, A. M. et al. 2017 Update of the Drug Resistance Mutations in HIV-1., 2017 Update of the Drug Resistance Mutations in HIV-1. Topics in antiviral medicine, Topics in Antiviral Medicine 24, 24, 132, 132–133 (2016). 465. Dudoit, S. &amp; Laan, M. J. van der. Multiple Testing Procedures with Applications to Genomics. (Springer Science &amp; Business Media, 2007). 466. Maddison, W. P. &amp; FitzJohn, R. G. The Unsolved Challenge to Phylogenetic Correlation Tests for Categorical Characters. Systematic Biology 64, 127–136 (2015). 467. Sham, P. C. &amp; Purcell, S. M. Statistical power and significance testing in large-scale genetic studies. Nature Reviews Genetics 15, 335–346 (2014). 468. Lengauer, T. &amp; Sing, T. Bioinformatics-assisted anti-HIV therapy. Nature Reviews Microbiology 4, 790–797 (2006). 469. Zhang, J., Rhee, S.-Y., Taylor, J. &amp; Shafer, R. W. Comparison of the Precision and Sensitivity of the Antivirogram and PhenoSense HIV Drug Susceptibility Assays. JAIDS Journal of Acquired Immune Deficiency Syndromes 38, 439–444 (2005). 470. Beerenwinkel, N. et al. Geno2pheno: Estimating phenotypic drug resistance from HIV-1 genotypes. Nucleic Acids Research 31, 3850–3855 (2003). 471. Shen, C., Yu, X., Harrison, R. W. &amp; Weber, I. T. Automated prediction of HIV drug resistance from genotype data. BMC Bioinformatics 17, 278 (2016). 472. Yu, X., Weber, I. T. &amp; Harrison, R. W. Prediction of HIV drug resistance from genotype with encoded three-dimensional protein structure. BMC Genomics 15, S1 (2014). 473. Sheik Amamuddy, O., Bishop, N. T. &amp; Tastan Bishop, Ö. Improving fold resistance prediction of HIV-1 against protease and reverse transcriptase inhibitors using artificial neural networks. BMC Bioinformatics 18, 369 (2017). 474. Beerenwinkel, N. et al. Geno2pheno: Interpreting genotypic HIV drug resistance tests. IEEE Intelligent Systems 16, 35–41 (2001). 475. Araya, S. T. &amp; Hazelhurst, S. Support vector machine prediction of HIV-1 drug resistance using the viral nucleotide patterns. Transactions of the Royal Society of South Africa 64, 62–72 (2009). 476. Riemenschneider, M., Senge, R., Neumann, U., Hüllermeier, E. &amp; Heider, D. Exploiting HIV-1 protease and reverse transcriptase cross-resistance information for improved drug resistance prediction by means of multi-label classification. BioData Mining 9, 10 (2016). 477. Heider, D., Senge, R., Cheng, W. &amp; Hüllermeier, E. Multilabel classification for exploiting cross-resistance information in HIV-1 drug resistance prediction. Bioinformatics 29, 1946–1952 (2013). 478. Drăghici, S. &amp; Potter, R. B. Predicting HIV drug resistance with neural networks. Bioinformatics 19, 98–107 (2003). 479. Steiner, M. C., Gibson, K. M. &amp; Crandall, K. A. Drug Resistance Prediction Using Deep Learning Techniques on HIV-1 Sequence Data. Viruses 12, 560 (2020). 480. Mooney, A. C. et al. Beyond Social Desirability Bias: Investigating Inconsistencies in Self-Reported HIV Testing and Treatment Behaviors Among HIV-Positive Adults in North West Province, South Africa. AIDS and Behavior 22, 2368–2379 (2018). 481. Tibshirani, R. Regression Shrinkage and Selection Via the Lasso. Journal of the Royal Statistical Society: Series B (Methodological) 58, 267–288 (1996). 482. Brier, G. W. Verification of Forecasts Expressed in Terms of Probability. Monthly Weather Review 78, 1–3 (1950). 483. Gascuel, O. et al. Twelve Numerical, Symbolic and Hybrid Supervised Classification Methods. International Journal of Pattern Recognition and Artificial Intelligence 12, 517–571 (1998). 484. Goeman, J. J. &amp; Solari, A. Multiple hypothesis testing in genomics. Statistics in Medicine 33, 1946–1978 (2014). 485. Rennie, J. D., Shih, L., Teevan, J. &amp; Karger, D. R. Tackling the Poor Assumptions of Naive Bayes Text Classifiers. in Proceedings of the 20th international conference on machine learning (ICML-03) 616–623 (2003). 486. Breiman, L. Random Forests. Machine Learning 45, 5–32 (2001). 487. Alvarez Melis, D. &amp; Jaakkola, T. Towards Robust Interpretability with Self-Explaining Neural Networks. in Advances in Neural Information Processing Systems 31 (eds. Bengio, S. et al.) 7775–7784 (Curran Associates, Inc., 2018). 488. Hastie, T., Tibshirani, R. &amp; Friedman, J. The Elements of Statistical Learning: Data Mining, Inference, and Prediction, Second Edition. (Springer Science &amp; Business Media, 2009). 489. Zhang, Q., Wu, Y. N. &amp; Zhu, S.-C. Interpretable Convolutional Neural Networks. in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition 8827–8836 (2018). 490. Brodersen, K. H., Ong, C. S., Stephan, K. E. &amp; Buhmann, J. M. The Balanced Accuracy and Its Posterior Distribution. in 2010 20th International Conference on Pattern Recognition 3121–3124 (2010). doi:10.1109/ICPR.2010.764. 491. Schrödinger, LLC. The PyMOL molecular graphics system, version 1.8. (2015). 492. Rhee, S.-Y., Liu, T. F., Holmes, S. P. &amp; Shafer, R. W. HIV-1 Subtype B Protease and Reverse Transcriptase Amino Acid Covariation. PLOS Computational Biology 3, e87 (2007). 493. De Luca, A. et al. Improved Interpretation of Genotypic Changes in the HIV-1 Reverse Transcriptase Coding Region That Determine the Virological Response to Didanosine. The Journal of Infectious Diseases 196, 1645–1653 (2007). 494. Marcelin, A.-G. et al. Impact of HIV-1 reverse transcriptase polymorphism at codons 211 and 228 on virological response to didanosine. Antiviral Therapy 8 (2006). 495. Brown, A. J. L. et al. Reduced Susceptibility of Human Immunodeficiency Virus Type 1 (HIV-1) from Patients with Primary HIV Infection to Nonnucleoside Reverse Transcriptase Inhibitors Is Associated with Variation at Novel Amino Acid Sites. Journal of Virology 74, 10269–10273 (2000). 496. Clark, S. A., Shulman, N. S., Bosch, R. J. &amp; Mellors, J. W. Reverse transcriptase mutations 118I, 208Y, and 215Y cause HIV-1 hypersusceptibility to non-nucleoside reverse transcriptase inhibitors. AIDS 20, 981–984 (2006). 497. Nebbia, G., Sabin, C. A., Dunn, D. T. &amp; Geretti, A. M. Emergence of the H208Y mutation in the reverse transcriptase (RT) of HIV-1 in association with nucleoside RT inhibitor therapy. Journal of Antimicrobial Chemotherapy 59, 1013–1016 (2007). 498. Saracino, A. et al. Impact of unreported HIV-1 reverse transcriptase mutations on phenotypic resistance to nucleoside and non-nucleoside inhibitors. Journal of Medical Virology 78, 9–17 (2006). 499. Wu, T. T., Chen, Y. F., Hastie, T., Sobel, E. &amp; Lange, K. Genome-wide association analysis by lasso penalized logistic regression. Bioinformatics 25, 714–721 (2009). 500. Bzikadze, A. V. &amp; Pevzner, P. A. Automated assembly of centromeres from ultra-long error-prone reads. Nat Biotechnol 38, 1309–1316 (2020). 501. Castresana, J. Selection of Conserved Blocks from Multiple Alignments for Their Use in Phylogenetic Analysis. Molecular Biology and Evolution 17, 540–552 (2000). 502. McGinnis, W. et al. Scikit-Learn-Contrib/Categorical-Encoding: Release For Zenodo. (2018) doi:10.5281/ZENODO.1157110. 503. Pedregosa, F. et al. Scikit-learn: Machine Learning in Python. Journal of Machine Learning Research 12, 2825–2830 (2011). 504. Virtanen, P. et al. SciPy 1.0: Fundamental algorithms for scientific computing in Python. Nature Methods 17, 261–272 (2020). 505. Seabold, Skipper &amp; Perktold, Josef. Statsmodels: Econometric and Statistical Modeling with Python. in Proceedings of the 9th Python in Science Conference (eds. Walt, Stéfan van der &amp; Millman, Jarrod) 92–96 (2010). doi:10.25080/Majora-92bf1922-011 . 506. Vinh, N. X. &amp; Epps, J. A Novel Approach for Automatic Number of Clusters Detection in Microarray Data Based on Consensus Clustering. in 2009 Ninth IEEE International Conference on Bioinformatics and BioEngineering 84–91 (2009). doi:10.1109/BIBE.2009.19. 507. Harremoes, P. Mutual information of contingency tables and related inequalities. in 2014 IEEE International Symposium on Information Theory 2474–2478 (IEEE, 2014). doi:10.1109/ISIT.2014.6875279. 508. Kawashima, S. et al. AAindex: amino acid index database, progress report 2008. Nucleic Acids Research 36, D202–D205 (2008). "],["HPC-appendix.html", "A Supporting Information for “Mapping-friendly sequence reductions: going beyond homopolymer compression” A.1 “TandemTools” dataset generation A.2 MSR performance comparison A.3 Origin of incorrectly mapped reads of high mapping quality on whole human genome. A.4 Analyzing read origin on whole human genome A.5 Performance of MSRs on the Drosophila genome", " A Supporting Information for “Mapping-friendly sequence reductions: going beyond homopolymer compression” A.1 “TandemTools” dataset generation This dataset was obtained by taking a human X chromosome HOR sequence, concatenating it 500 times with added mutations in order to obtain an approximately 1 Mbp long sequence. Then 1200 reads were simulated from the sequence using nanosim268 and assembled using a centromere-tailored pipeline500. A 10kbp deletion was then added to this assembly. The resulting sequence is the one we refer to as the “Centromeric sequence”. A.2 MSR performance comparison .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-b9228fd6{table-layout:auto;width:100%;}.cl-b91a3aca{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b91a3ade{font-family:'Helvetica';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b91a3ae8{font-family:'Helvetica';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;top:3.3pt;}.cl-b91a49d4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b91ad674{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b91ad67e{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b91ad688{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b91ad692{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b91ad693{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}labelmapq = 60mapq ≥ 50any mapqfractionerrorfractionerrorfractionerrorWhole Drosophila melanogaster genome - minimap (n=25764)HPC0.957 +0%2.27e-03 +0%0.963 +0%2.34e-03 +0%0.998 +0%1.48e-02 +0%raw0.958 +0%2.27e-03 -0%0.962 -0%2.34e-03 +0%0.997 -0%1.17e-02 -21%MSRF0.952 -1%1.18e-03 -48%0.960 -0%1.37e-03 -41%0.998 +0%1.36e-02 -8%MSRE0.946 -1%0 -100%0.954 -1%0 -100%0.998 +0%1.53e-02 +3%MSRP0.950 -1%4.90e-04 -78%0.957 -1%8.11e-04 -65%0.998 -0%1.39e-02 -6%Whole Drosophila melanogaster genome - winnowmap (n=25764)HPC0.923 +0%1.51e-03 +0%0.930 +0%1.59e-03 +0%0.989 +0%1.50e-02 +0%raw0.949 +3%1.92e-03 +27%0.954 +3%1.99e-03 +26%0.995 +1%1.33e-02 -12%MSRF0.918 -1%1.27e-03 -16%0.925 -0%1.30e-03 -18%0.987 -0%1.37e-02 -9%MSRP0.905 -2%1.33e-03 -12%0.912 -2%1.53e-03 -3%0.983 -1%1.40e-02 -7%MSRE0.905 -2%1.42e-03 -6%0.912 -2%1.49e-03 -6%0.983 -1%1.44e-02 -4%Synthetic centromeric sequence - minimap (n=12673)HPC0.870 +0%1.36e-03 +0%0.964 +0%1.56e-03 +0%1.000 +0%9.00e-03 +0%raw0.936 +8%1.86e-03 +36%0.984 +2%2.09e-03 +34%1.000 +0%4.50e-03 -50%MSRE0.885 +2%3.39e-03 +149%0.962 -0%3.53e-03 +127%1.000 +0%1.20e-02 +33%MSRF0.850 -2%2.04e-03 +50%0.968 +0%2.12e-03 +36%1.000 +0%6.63e-03 -26%MSRP0.898 +3%1.58e-03 +16%0.968 +0%1.79e-03 +15%1.000 +0%9.78e-03 +9%Synthetic centromeric sequence - winnowmap (n=12673)HPC0.775 +0%1.32e-03 +0%0.822 +0%1.82e-03 +0%0.997 +0%8.37e-02 +0%raw0.850 +10%2.04e-03 +54%0.890 +8%1.95e-03 +7%0.999 +0%4.60e-02 -45%MSRE0.795 +2%2.28e-03 +73%0.846 +3%2.52e-03 +38%0.997 -0%6.96e-02 -17%MSRF0.820 +6%1.83e-03 +38%0.867 +6%2.27e-03 +25%0.997 -0%5.97e-02 -29%MSRP0.780 +1%1.62e-03 +22%0.829 +1%2.09e-03 +15%0.997 -0%8.65e-02 +3%Whole human genome - minimap (n=655594)HPC0.935 +0%1.85e-03 +0%0.942 +0%1.85e-03 +0%1.000 +0%1.46e-02 +0%raw0.921 -1%1.86e-03 +0%0.927 -2%1.86e-03 +1%0.998 -0%1.29e-02 -11%MSRE0.926 -1%6.92e-05 -96%0.936 -1%1.17e-04 -94%0.999 -0%1.76e-02 +20%MSRP0.929 -1%2.20e-04 -88%0.938 -0%4.15e-04 -78%0.999 -0%1.55e-02 +6%MSRF0.930 -1%1.09e-03 -41%0.938 -0%1.29e-03 -30%1.000 -0%1.51e-02 +4%Whole human genome - winnowmap (n=655594)HPC0.894 +0%1.43e-03 +0%0.902 +0%1.49e-03 +0%0.988 +0%1.92e-02 +0%raw0.932 +4%1.75e-03 +23%0.937 +4%1.79e-03 +20%0.994 +1%1.43e-02 -26%MSRF0.874 -2%2.81e-04 -80%0.886 -2%3.82e-04 -74%0.984 -0%1.94e-02 +1%MSRE0.795 -11%6.33e-05 -96%0.820 -9%8.93e-05 -94%0.971 -2%2.08e-02 +9%MSRP0.826 -8%8.68e-05 -94%0.845 -6%1.14e-04 -92%0.975 -1%2.11e-02 +10%Whole Human genome (repeated regions) - minimap (n=68811)HPC0.619 +0%3.29e-04 +0%0.656 +0%3.10e-04 +0%0.998 +0%7.79e-02 +0%raw0.514 -17%1.98e-04 -40%0.539 -18%2.16e-04 -30%0.981 -2%6.69e-02 -14%MSRF0.601 -3%2.18e-04 -34%0.640 -2%2.27e-04 -27%0.998 -0%8.15e-02 +5%MSRE0.618 -0%1.41e-04 -57%0.658 +0%1.55e-04 -50%0.997 -0%8.23e-02 +6%MSRP0.616 -1%1.18e-04 -64%0.656 +0%1.99e-04 -36%0.997 -0%8.31e-02 +7%Whole Human genome (repeated regions) - winnowmap (n=68811)HPC0.525 +0%1.24e-03 +0%0.557 +0%1.49e-03 +0%0.950 +0%1.19e-01 +0%raw0.648 +23%1.26e-03 +1%0.672 +21%1.49e-03 +0%0.968 +2%8.09e-02 -32%MSRF0.482 -8%1.63e-03 +31%0.516 -7%1.83e-03 +23%0.940 -1%1.21e-01 +2%MSRE0.366 -30%6.35e-04 -49%0.405 -27%9.32e-04 -37%0.911 -4%1.38e-01 +17%MSRP0.415 -21%9.45e-04 -24%0.451 -19%1.16e-03 -22%0.920 -3%1.39e-01 +17% Table A.1: Comparing performance of MSRs on the whole human genome, whole Drosophila melanogaster genome, repeated regions of the whole human genome and synthetic centromeric sequence. Results using minimap2114 and winnowmap2115. The number of simulated reads for each reference sequence is given in parentheses and called \\(n\\). Results are reported for mapq thresholds of 60, 50 and 0. The best performance for each category is highlighted in bold. The percentage difference are computed w.r.t HPC at each given threshold. A.3 Origin of incorrectly mapped reads of high mapping quality on whole human genome. Figure A.1: Histogram of the original simulated positions for the incorrectly mapped reads using minimap2 at high mapping qualities across the whole human genome, for several transformation methods. For a given chromosome, each row represents the number of simulated reads starting at that particular region. The dark gray rectangle represents the position of the centromere for that chromosome, obtained from annotations provided by the T2T consortium (http://t2t.gi.ucsc.edu/chm13/hub/t2t-chm13-v1.1/). Similarly for chromosomes 13, 14, 15, 21 and 22, a lighter gray rectangle represents the position of the “stalk” satellites also containing repetitive regions. For HPC and raw reads only alignments of mapping quality 60 were considered. To provide a fair comparison, alignments with mapping qualities \\(\\geq 50\\) were considered for MSRs E, F and P. A.4 Analyzing read origin on whole human genome Figure A.2: Origin of correctly (teal) and incorrectly (red) mapped raw reads Distribution of the origin of correctly and incorrectly mapped simulated reads (in teal and red respectively) on the different chromosomes of the whole human genome. The dark grey rectangle for each chromosome represents the centromere of that chromosome. The lighter gray rectangle on chromosomes 13, 14, 15, 21 and 22 correspond to satellites denoted as “stalk”, another repetitive region. Figure A.3: Origin of correctly (teal) and incorrectly (red) mapped reads, transformed with HPC. Distribution of the origin of correctly and incorrectly mapped simulated reads (in teal and red respectively) on the different chromosomes of the whole human genome. The dark grey rectangle for each chromosome represents the centromere of that chromosome. The lighter gray rectangle on chromosomes 13, 14, 15, 21 and 22 correspond to satellites denoted as “stalk”, another repetitive region. Figure A.4: Origin of correctly (teal) and incorrectly (red) mapped reads, transformed with MSRE. Distribution of the origin of correctly and incorrectly mapped simulated reads (in teal and red respectively) on the different chromosomes of the whole human genome. The dark grey rectangle for each chromosome represents the centromere of that chromosome. The lighter gray rectangle on chromosomes 13, 14, 15, 21 and 22 correspond to satellites denoted as “stalk”, another repetitive region. Figure A.5: Origin of correctly (teal) and incorrectly (red) mapped reads, transformed with MSRP. Distribution of the origin of correctly and incorrectly mapped simulated reads (in teal and red respectively) on the different chromosomes of the whole human genome. The dark grey rectangle for each chromosome represents the centromere of that chromosome. The lighter gray rectangle on chromosomes 13, 14, 15, 21 and 22 correspond to satellites denoted as “stalk”, another repetitive region. Figure A.6: Origin of correctly (teal) and incorrectly (red) mapped reads, transformed with MSRF. Distribution of the origin of correctly and incorrectly mapped simulated reads (in teal and red respectively) on the different chromosomes of the whole human genome. The dark grey rectangle for each chromosome represents the centromere of that chromosome. The lighter gray rectangle on chromosomes 13, 14, 15, 21 and 22 correspond to satellites denoted as “stalk”, another repetitive region. A.5 Performance of MSRs on the Drosophila genome Figure A.7: Results of the paftools mapeval evaluation on reads simulated and mapped to whole Drosophila melanogaster and Escherichia coli genomes MSRs E, F and P are shown in different shades of blue to differentiate them from other MSRs. Reads were simulated with nanosim, and mapped with minimap2. The E. coli genome was obtained from Genbank ID U00096.2 References 114. Li, H. Minimap2: Pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018). 115. Jain, C. et al. Weighted minimizer sampling improves long read mapping. Bioinformatics 36, i111–i118 (2020). 268. Yang, C., Chu, J., Warren, R. L. &amp; Birol, I. NanoSim: Nanopore sequence read simulator based on statistical characterization. GigaScience 6, (2017). 500. Bzikadze, A. V. &amp; Pevzner, P. A. Automated assembly of centromeres from ultra-long error-prone reads. Nat Biotechnol 38, 1309–1316 (2020). "],["HIV-intro-appendix.html", "B Supporting Information for “HIV and DRMs” B.1 Detailed list of HIV-1 protein structures used for figure generation. B.2 List of all antiretroviral drugs", " B Supporting Information for “HIV and DRMs” B.1 Detailed list of HIV-1 protein structures used for figure generation. The images for HIV-1 structures used in Figure 5.2 were obtained from: https://cdn.rcsb.org/pdb101/learn/resources/structural-biology-of-hiv/. They are licensed under a Creative Commons By 4.0 license which allows reuse and adaptation for non commercial use. PDB structure IDs: SU and TM: 4nco MA: 1hiw CA: 3h47 NC: 1a1t RT: 1hys (for Figure 5.2) and 2hmi (for Figure 5.4) IN: 1ex4 PR: 1hpv Vpu: 1pi7 and 1vpu Vif: 3dcg Vpr: 1esx Nef: 1avv and 1qa5 Rev: 1etf Tat: 1biv and 1jfw B.2 List of all antiretroviral drugs .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-ba7e4122{table-layout:auto;width:90%;}.cl-ba72768a{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ba72769e{font-family:'Helvetica';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;bottom:3.3pt;}.cl-ba7289f4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ba728a08{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ba733ffc{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba734006{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba734010{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba734011{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba73401a{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba73401b{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}NameBrand nameAbbreviationClassApproval datezidovudineretrovirZDVNRTI1987-03-19didanosine†videxddINRTI1991-10-09zalcitabine†hividddCNRTI1992-06-19stavudine†zeritd4TNRTI1994-06-24lamivudineepivir3TCNRTI1995-11-17saquinavirinviraseSQVPI1995-12-06ritonavir*norvirRTVPI1996-03-01indinavir†crixivanIDVPI1996-03-13neviparineviramuneNVPNNRTI1996-06-21nelfinavir†viraceptNFVPI1997-03-14delavirdine†rescriptorDLVNNRTI1997-04-04combivircombivir3TC+ZDVFDC1997-09-27efavirenzsustivaEFVNNRTI1998-09-17abacavirziagenABCNRTI1998-12-17amprenavir†ageneraseAPVPI1999-04-15kaletrakaletraLPV+RTVFDC2000-09-15didanosine-ec†videx-ecddI-ECNRTI2000-10-31trizivirtrizivirABC+3TC+ZDVFDC2000-11-14tenofovir-dfvireadTDFNRTI2001-10-26enfuvirtidefuzeonT-20FI2003-03-13atazanavirreyatazATCPI2003-06-20emtricitabineemtrivaFTCNRTI2003-07-02fosamprenavirlexivaFPVPI2003-10-20epzicomepzicomABC+3TCFDC2004-08-02truvadatruvadaFTC+TDFFDC2004-08-02tipranaviraptivusTPVPI2005-06-22darunavirprezistaDRVPI2006-06-23atriplaatriplaEFV+FTC+TDFFDC2006-07-12maravirocselzentryMVCCA2007-08-06raltegravirisentressRALINSTI2007-10-12etravirineintelenceETRNNRTI2008-01-18neviparine-xrviramune-xrNVP-XRNNRTI2011-03-25rilpivirineedurantRPVNNRTI2011-05-20compleracompleraFTC+RPV+TDFFDC2011-08-10stribildstribildEVG+COBI+FTC+TDFFDC2012-08-27dolutegravirtivicayDTGINSTI2013-08-12triumeqtriumeqABC+DTG+3TCFDC2014-08-22elvitegravir†vitektaEVGINSTI2014-09-14cobicistattybostCOBIPE2014-09-24evotazevotazATV+COBIFDC2015-01-29prezcobixprezcobixDRV+COBIFDC2015-01-29genvoyagenvoyaEVG+COBI+FTC+TAFFDC2015-11-05odefseyodefseyFTC+RPV+TAFFDC2016-03-01descovydescovyFTC+TAFFDC2016-04-04raltegravirisentress-hdRALINSTI2017-05-26julucajulucaDTG+RPVFDC2017-11-21symfi-losymfi-loEFV+3TC+TDFFDC2018-02-05biktarvybiktarvyBIC+FTC+TAFFDC2018-02-07cimduocimduo3TC+TDFFDC2018-02-28ibalizumab-uiyktrogarzoTNX-355PAI2018-03-06symfisymfiEFV+3TC+TDFFDC2018-03-22symtuzasymtuzaDRV+COBI+FTC+TAFFDC2018-07-17delstrigodelstrigoDOR+3TC+TDFFDC2018-08-30doravirinepifeltroDORNNRTI2018-08-30temixystemixys3TC+TDFFDC2018-11-16dovatodovatoDTG+3TCFDC2019-04-08dolutegravirtivicay-pdDTGINSTI2020-06-12fostemsavirrukobiaFTRAI2020-07-02cabenuvacabenuvaCAB+RPVFDC2021-01-22cabotegravirvocabriaCABINSTI2021-01-22 Table B.1: List of all antiretroviral drugs used in HIV therapy Zidovudine (ZDV) is also referred to as Azidothymidine (AZT) in litterature, Fixed Dose combinations (i.e. single pills combining multiple drugs) are referred to by their commercial name, the composition of these can be seen in the abbreviation. Drugs were ordered by FDA approval date. AI: Attachment Inhibitor, CA: CCR5 Antagonist, FDC: Fixed Dose Combination, FI: Fusion Inhibitor, INSTI: Integrase Inhibitor NNRTI: Non-Nucleoside Reverse Transcriptase Inhibitor, NRTI: Nucleoside Reverse Transcriptase Inhibitor, PE: Pharmacokinetic Enhancer, PAI: Post-Attachment Inhibitor, PI: Protease Inhibitor. AI, CA, FI and PAI can be grouped in a class of Entry inhibitors. * Although Ritonavir is originally a PI it is now mainly used as a PE to boost the action of other drugs. † These drugs are no longer available or recommended in HIV treatment guidelines. They may still be used in FDC regimens. Adapted from https://hivinfo.nih.gov/understanding-hiv/infographics/fda-approval-hiv-medicines and https://hivinfo.nih.gov/understanding-hiv/fact-sheets/fda-approved-hiv-medicines "],["HIV-appendix.html", "C Supporting Information for “Using Machine Learning and Big Data to Explore the Drug Resistance Landscape in HIV” C.1 S1 Appendix (Technical appendix). C.2 S1 Fig. C.3 S2 Fig. C.4 S3 Fig. C.5 S1 Table. C.6 S2 Appendix. (Fisher exact tests) C.7 S1 Data. C.8 S2 Data.", " C Supporting Information for “Using Machine Learning and Big Data to Explore the Drug Resistance Landscape in HIV” C.1 S1 Appendix (Technical appendix). C.1.1 Data C.1.1.1 Data Availability The policy of the UK HIV Drug Resistance Database is to make DNA sequences available to any bona fide researcher who submits a scientifically robust proposal, provided data exchange complies with Information Governance and Data Security Policies in all the relevant countries. This includes replication of findings from published studies, although the researcher would be encouraged to work with the main author of the published paper to understand the nuances of the data. Enquiries should be addressed to iph.hivrdb@ucl.ac.uk in the first instance. More information on the UK dataset is also available on the UK CHIC homepage: www.ukchic.org.uk. Amino acid sequences are made available along with a metadata file. The West and central African dataset is available as supplementary information along with a metadata file containing HIV subtype, treatment information and known RAM presence/absence for each sequence. Predictions made for each sequence of both datasets, by all of the trained classifiers are made available as part of the supplementary data as well as synthetic results from which the figures of the paper were drawn. The importance values for each mutation and each trained classifier are also made available. All the data and metadata files made available are hosted in the online repository linked to this project at the following URL: github.com/lucblassel/HIV-DRM-machine-learning/tree/main/data C.1.1.2 Data Preprocessing For both the African and UK datasets, the sequences were truncated to keep sites 41 to 235 of the RT protein sequence before encoding. This truncation was needed to avoid the perturbation to classifier training due to long gappy regions at the beginning and end of the UK RT alignment caused by shorter sequences. These positions were determined with the Gblocks software501 with default parameters, except for the Maximum number of sequences for a flanking position, set to 50,000, and the Allowed gap positions, which was set to “All”. The encoding was done with the OneHotEncoder from the category-encoders python module502. C.1.2 Classifiers We used classifier implementations from the scikit-learn python library503, RandomForestClassifier for the random forest classifier, MultinomialNB for Naïve Bayes and LogisticRegressionCV for logistic regression. RandomForestClassifier was used with default parameters except: \"n_jobs\"=4 \"n_estimators\"=5000 LogisticRegressionCV was used with the following parameters: \"n_jobs\"=4 \"cv\"=10 \"Cs\"=100 \"penalty\"=’l1’ \"multi_class\"=’multinomial’ \"solver\"=’saga’ \"scoring\"=’balanced_accuracy’ MultinomialNB was used with default parameters. For the Fisher exact tests, we used the implementation from the scipy python library504, and corrected p-values for multiple testing with the statsmodels python library505 using the \"Bonferroni\" method. C.1.3 Scoring To evaluate classifier performance several measures were used. We computed balanced accuracy instead of classical accuracy, because it can be overly optimistic, especially when assessing a highly biased classifier on an unbalanced test set490.The balanced accuracy is computed using the following formula, where \\(TP\\) and \\(TN\\) are the number of true positives and true negatives respectively, and \\(FP\\) and \\(FN\\) are the number of false positives and false negatives respectively: \\[ balanced~accuracy = \\frac{1}{2}\\left( \\frac{TP}{TP + FP} + \\frac{TN}{TN + FN} \\right) \\] We also computed adjusted mutual information (AMI). We chose it over mutual information (MI) because it has an upper bound of 1 for a perfect classifier and is not dependent on the size of the test set, allowing us to compare the performance for differently sized test sets145. The adjusted mutual information of variables \\(U\\) and \\(V\\) is defined by the following formula, where \\(MI(U,V)\\) is the mutual information between variables \\(U\\) and \\(V\\), \\(H(X)\\) is the entropy of the variable \\(X\\) (= \\(U\\) or \\(V\\)) and \\(E\\{MI(U,V)\\}\\) is the expected MI, as explained in506. \\[ AMI(U,V) = \\frac{ MI(U,V) - E\\{MI(U,V)\\} }{ \\frac{1}{2}[H(U) + H(V)] - E\\{MI(U,V)\\} } \\] MI was used to compute the \\(G\\) statistic, which follows the chi-square distribution under the null hypothesis507. This was used to compute p-values for each of our classifiers and assess the significance of their performance. \\(G\\) is defined by equation below, where \\(N\\) is the number of samples. \\[G = 2\\cdot N \\cdot MI(U,V)\\] Finally, to check the probabilistic predictive power of the classifiers we also computed the Brier score which is the mean squared difference between the ground truth and the predicted probability of being of the positive class for every sequence in the test set (therefore lower is better for this metric). The Brier score is defined in equation below, where \\(p_t\\) is the predicted probability of being of the positive class for sample \\(t\\) and \\(o_t\\) is the actual class (0 or 1, 1=positive class) of sample \\(t\\): \\[Brier~score=\\frac{1}{N}\\sum_{t=1}^N(p_t-o_t)^2\\] We used the following implementations from the scikit-learn python library503 with default options: balanced_accuracy_score mutual_info_score adjusted_mutual_info_score brier_score_loss We used the relative risk to observe the relationship between one of our new mutations and a binary character \\(X\\) such as treatment status or presence/absence of a known RAM. \\[ \\begin{aligned} RR(new, X) &amp;= \\frac{prevalence\\left(new~mutation\\mid X=1\\right)}{prevalence\\left(new~mutation\\mid X=0\\right)} \\nonumber\\\\ \\nonumber\\\\ &amp;= \\frac{|(new=1)\\cap(X=1)|}{|(X=1)|}\\div\\frac{|(new=1)\\cap(X=0)|}{|(X=0)|} \\\\ \\end{aligned} \\] C.2 S1 Fig. Figure C.1: Relative risks of the new mutations with regards to known RAMs on the African dataset (i.e. the prevalence of the new mutation in sequences with a given RAM divided by the prevalence of the new mutation in sequences without the RAM). RRs were only computed for mutations (new and RAMs) that appeared in at least 30 sequences, which is why RRs were not computed for H208Y and D218E. 95% confidence intervals, represented by vertical bars, were computed with 1000 bootstrap samples of the African sequences. Only RRs with a lower CI boundary greater than 2 are shown. The shape and color of the point represents the type of RAM as defined by Stanford’s HIVDB. Blue circle: NRTI, orange square: NNRTI, green diamond: Other. For the RR of L228H with regards to M184V, the upper CI bound is infinite. The new RAMs have high RR values for known RAMs similar to those obtained on the UK dataset. We also arrive at similar conclusions, I135L being associated with NNRTIs, E203K and L228H to NRTI and L228R to both. RR values are shown from left to right, by order of decreasing values on the lower bound of the 95% CI. C.3 S2 Fig. Figure C.2: Closeup structural view of the entrance of the NNIBP of HIV-1 RT The p66 subunit is colored in dark gray, the p51 subunit in light gray. The NNIBP is highlighted in yellow. The active site is colored in blue. We can see the physical proximity of I135 (red) to the entrance of the NNIBP. We can also see how L228 (red) is between 2 AAs of the NNIBP. C.4 S3 Fig. Figure C.3: Closeup structural view of the active site of HIV-1 RT. The p66 subunit is colored in dark gray, the p51 subunit in light gray. The active site is highlighted in blue. The NNIBP is colored in yellow. L228, E203 and D218 (red) are also very close on either side of the active site. C.5 S1 Table. .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-bb483360{table-layout:auto;width:100%;}.cl-bb400d34{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-bb400d3e{font-family:'Helvetica';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-bb401cc0{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-bb401cca{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-bb401ccb{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-bb4074d6{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb4074ea{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb4074f4{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb4074f5{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb4074fe{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb407508{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb407509{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb407512{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb407513{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-bb40751c{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} Table C.1: Detailed view of the characteristics of new potential RAMs Rank: For each new mutation we computed the aggregate feature importance ranks for the RTI-naive / RTI-experienced and known RAM present / known RAM absent classification tasks. Codon distance: We computed the minimum number of nucleotide mutations to go from the wild amino acid codons to those of the mutated amino acid, as well as the average codon distance between both amino acids, weighted by the prevalence of each wild and mutated codon in the UK and the African datasets. Count (both UK and Africa): We looked at the number of apparitions of each new potential RAM in the UK and African datasets and the corresponding prevalence in parentheses. Ratio (both UK and Africa): We computed the prevalence ratio \\(\\rho(new, treatment)\\) (e.g. L228R is 18.1 times more prevalent in RTI-experienced sequences compared to RTI-naive sequences in the UK dataset). We also computed the prevalence ratio \\(\\rho(new,any RAM)\\) (e.g. L228R is 115.7 times more prevalent in sequences that have at least one known RAM than in sequences that have none in the UK dataset). The 95% confidence intervals shown under each ratio were computed with 1000 bootstrap samples of size \\(n=55,000\\) drawn with replacement from the whole UK dataset (The same procedure was done on the African dataset with size \\(n=3990\\)). p-values: Fisher exact tests were done on the African dataset to see if each of these new mutations were more prevalent in RTI-experienced sequences; p-value were corrected with the Bonferroni method for the six simultaneous tests. B62: BLOSUM62 similarity values (e.g. D218E = 2, reflecting that E and D are both negatively charged and highly similar). Dayhoff category shift: The change in Dayhoff amino acid category is written thusly: “starting category \\(\\rightarrow\\) ending category”. These categories are as follows: a: Sulfur polymerization. b: Small, c: Acid and amide, d: Basic, e: Hydrophobic and f: aromatic. Physico-chemical change: Change in physicochemical properties was obtained by subtracting the property value of the wil-type amino acid from the mutated amino acid. All values were obtained from the AAindex database508 mutationrankcodon distanceUKAfricap‑valueB62Change inT/NW/WminUKAfricacountρ(new,treatment)ρ(new,with RAM)countρ(new,treatment)ρ(new,with RAM)Dayhoff categorynet chargepolarityhydrophobicitymolecular weightL228R0011.161.21227 (0.4%)18.1 [12.9;27.3]115.7 [55.1;507.3]98 (2.5%)32.5 [15.4;147.1]42.4 [17.8;∞]2.0e‑30-2e → d15.6-0.9343.03E203K1111.311.33256 (0.5%)11.0 [8.2;15.1]20.1 [13.7;32.1]56 (1.4%)14.1 [6.7;71.9]17.4 [8.2;83.7]6.4e‑141c → d2-1.00.68-0.94D218E2311.001.00168 (0.3%)13.1 [9.0;19.6]27.0 [16.3;57.0]25 (0.6%)∞ [∞;∞]∞ [∞;∞]2.0e‑092c → c0-0.70.0114.03L228H3411.121.17287 (0.5%)6.4 [5.1;8.4]9.2 [6.9;12.6]53 (1.3%)23.1 [9.4;∞]34.1 [12.0;∞]2.7e‑15-3e → d05.5-0.9223.99I135L4611.161.13540 (1.0%)1.8 [1.5;2.1]2.4 [2.0;2.8]134 (3.4%)2.6 [1.8;3.8]2.4 [1.7;3.4]2.6e‑072e → e0-0.3-0.690.00H208Y8911.101.12205 (0.4%)8.8 [6.5;12.5]14.9 [9.9;23.6]13 (0.3%)∞ [∞;∞]∞ [∞;∞]7.3e‑052d → f0-4.21.2726.03 C.6 S2 Appendix. (Fisher exact tests) Fisher exact tests on pairs of mutations. A detailed explanation of the procedure followed to test pairs of mutations for association with treatment. Detailed numerical results are also given. In order to study epistasis further we conducted conducted Fisher exact tests between every pair of mutations in the UK dataset (\\(n=867,903\\)) and the treatment status, corrected the p-values with the Bonferroni method with an overall risk level \\(\\alpha=0.05\\). Out of these tests, \\(1,309\\) pairs were significantly associated with treatment status. \\(424\\) out of \\(1,309\\) these pairs were two known RAMs, \\(806\\) of these pairs contained one known RAM and only \\(79\\) tests had pairs involving no known RAM at all. Furthermore out of these \\(1,309\\) significantly associated pairs, \\(829\\) contained two mutations that were significantly associated to treatment when testing mutations one by one. In \\(478\\) pairs, one of the two mutations is associated to treatment on its own, and the remaining 2 pairs, none of the mutations were significantly associated with treatment on their own. These 2 pairs were K103R + V179D and T165I + K173Q. The first pair, is a pair of known RAMs and this interaction is characterized in the HIVDb database (https://hivdb.stanford.edu/dr-summary/comments/NNRTI/). The second pair is made up of new mutations, and the corrected p-value is \\(0.02\\). In the Standford HIVDB, T165I has been associated to a reduction in EFV susceptibility. Out of the \\(1,309\\) pairs significantly associated to treatment, \\(151\\) contained at least one of our 6 new potential RAMs, in \\(6\\) cases the pair was made up of 2 of them. In the UK dataset, phylogenetic correlation is likely very impactful with regards to these tests. Indeed, the sequences are far from being independent. In order to alleviate this effect we decided to test the sigficative pairs again on the African dataset, and once more correct with the Bonferroni procedure. Out of the \\(1,309\\) tests \\(294\\) have significative p-values after correction. Out of these \\(221\\) pairs were composed of 2 mutations individually significatively associated with treatment. The remaining \\(73\\) pairs had one mutation significantly associated with treatment. Out of the \\(221\\) significative tests, 156 pairs were composed of 2 known RAMS while \\(135\\) had one known RAM in the pair. The remaining 3 pairs that do not contain a known RAM all contained either L228R or L228H which are both part of our 6 potential RAMS. C.7 S1 Data. Archive of figure generating data. A zip archive containing the processed data used to generate each panel of the main figures. Download data C.8 S2 Data. List of known DRMs. A .csv file containing all the known RAMs used in this project as well as the corresponding feature name in the encoded datasets. Obtained from (hivdb.stanford.edu/dr-summary/comments/NRTI/) and (hivdb.stanford.edu/dr-summary/comments/NNRTI/). Download data References 145. Vinh, N. X., Epps, J. &amp; Bailey, J. Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance. Journal of Machine Learning Research 11, 18 (2010). 490. Brodersen, K. H., Ong, C. S., Stephan, K. E. &amp; Buhmann, J. M. The Balanced Accuracy and Its Posterior Distribution. in 2010 20th International Conference on Pattern Recognition 3121–3124 (2010). doi:10.1109/ICPR.2010.764. 501. Castresana, J. Selection of Conserved Blocks from Multiple Alignments for Their Use in Phylogenetic Analysis. Molecular Biology and Evolution 17, 540–552 (2000). 502. McGinnis, W. et al. Scikit-Learn-Contrib/Categorical-Encoding: Release For Zenodo. (2018) doi:10.5281/ZENODO.1157110. 503. Pedregosa, F. et al. Scikit-learn: Machine Learning in Python. Journal of Machine Learning Research 12, 2825–2830 (2011). 504. Virtanen, P. et al. SciPy 1.0: Fundamental algorithms for scientific computing in Python. Nature Methods 17, 261–272 (2020). 505. Seabold, Skipper &amp; Perktold, Josef. Statsmodels: Econometric and Statistical Modeling with Python. in Proceedings of the 9th Python in Science Conference (eds. Walt, Stéfan van der &amp; Millman, Jarrod) 92–96 (2010). doi:10.25080/Majora-92bf1922-011 . 506. Vinh, N. X. &amp; Epps, J. A Novel Approach for Automatic Number of Clusters Detection in Microarray Data Based on Consensus Clustering. in 2009 Ninth IEEE International Conference on Bioinformatics and BioEngineering 84–91 (2009). doi:10.1109/BIBE.2009.19. 507. Harremoes, P. Mutual information of contingency tables and related inequalities. in 2014 IEEE International Symposium on Information Theory 2474–2478 (IEEE, 2014). doi:10.1109/ISIT.2014.6875279. 508. Kawashima, S. et al. AAindex: amino acid index database, progress report 2008. Nucleic Acids Research 36, D202–D205 (2008). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
